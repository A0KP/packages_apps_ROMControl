android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.ViewCompatLollipop$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    void <init>(android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.aokp.romcontrol.util.CMDProcessor -> com.aokp.romcontrol.util.CMDProcessor:
    java.lang.String TAG -> TAG
    com.aokp.romcontrol.util.CommandResult runSuCommand(java.lang.String) -> runSuCommand
    com.aokp.romcontrol.util.CommandResult runShellCommand(java.lang.String) -> runShellCommand
    com.aokp.romcontrol.util.ChildProcess startSuCommand(java.lang.String) -> startSuCommand
    void <init>() -> <init>
    boolean canSU() -> canSU
    com.aokp.romcontrol.util.CommandResult runSysCmd(java.lang.String[],java.lang.String) -> runSysCmd
    com.aokp.romcontrol.util.ChildProcess startShellCommand(java.lang.String) -> startShellCommand
    com.aokp.romcontrol.util.ChildProcess startSysCmd(java.lang.String[],java.lang.String) -> startSysCmd
com.koushikdutta.async.http.spdy.SpdyMiddleware$4 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$4:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    com.koushikdutta.async.future.SimpleCancellable val$ret -> val$ret
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.future.SimpleCancellable) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.spdy.AsyncSpdyConnection) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.http.WebSocket$PingCallback -> com.koushikdutta.async.http.WebSocket$PingCallback:
    void onPingReceived(java.lang.String) -> onPingReceived
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    void <clinit>() -> <clinit>
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    void <init>() -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void <clinit>() -> <clinit>
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void <init>() -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mAudioStream -> mAudioStream
    int mCurrentVolume -> mCurrentVolume
    int mMaxVolume -> mMaxVolume
    int mPlaybackType -> mPlaybackType
    int mVolumeControl -> mVolumeControl
    void <init>(int,int,int,int,int) -> <init>
    int getAudioStream() -> getAudioStream
    int getCurrentVolume() -> getCurrentVolume
    int getMaxVolume() -> getMaxVolume
    int getPlaybackType() -> getPlaybackType
    int getVolumeControl() -> getVolumeControl
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    int openDrawerGravity -> openDrawerGravity
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcelable) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.HybiParser$1 -> com.koushikdutta.async.http.HybiParser$1:
    com.koushikdutta.async.http.HybiParser this$0 -> this$0
    void <init>(com.koushikdutta.async.http.HybiParser) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.aokp.romcontrol.util.ChildProcess$ChildWriter -> com.aokp.romcontrol.util.ChildProcess$ChildWriter:
    java.lang.String mBuffer -> mBuffer
    java.io.OutputStream mStream -> mStream
    com.aokp.romcontrol.util.ChildProcess this$0 -> this$0
    void <init>(com.aokp.romcontrol.util.ChildProcess,java.io.OutputStream,java.lang.String) -> <init>
    void run() -> run
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    java.lang.Object -get0(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> -get0
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> <init>
android.support.v4.os.CancellationSignal$OnCancelListener -> android.support.v4.os.CancellationSignal$OnCancelListener:
    void onCancel() -> onCancel
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void <init>() -> <init>
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
com.koushikdutta.async.future.ConvertFuture -> com.koushikdutta.async.future.ConvertFuture:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future convert(java.lang.Object) -> convert
    void transform(java.lang.Object) -> transform
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
com.koushikdutta.async.http.SimpleMiddleware -> com.koushikdutta.async.http.SimpleMiddleware:
    void <init>() -> <init>
    boolean exchangeHeaders(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> exchangeHeaders
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    void onBodyDecoder(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnBodyDataOnRequestSentData) -> onBodyDecoder
    void onHeadersReceived(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnHeadersReceivedDataOnRequestSentData) -> onHeadersReceived
    void onRequest(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestData) -> onRequest
    void onRequestSent(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData) -> onRequestSent
    void onResponseComplete(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> onResponseComplete
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
    void <init>() -> <init>
    void <init>(android.support.v4.content.ModernAsyncTask$WorkerRunnable) -> <init>
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    java.util.concurrent.Executor mExecutor -> mExecutor
    android.os.Handler mHandler -> mHandler
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    long mUpdateThrottle -> mUpdateThrottle
    boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    void cancelLoadInBackground() -> cancelLoadInBackground
    void <init>(android.content.Context) -> <init>
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    void executePendingTask() -> executePendingTask
    java.lang.Object loadInBackground() -> loadInBackground
    boolean onCancelLoad() -> onCancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void onForceLoad() -> onForceLoad
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void setUpdateThrottle(long) -> setUpdateThrottle
    void waitForLoader() -> waitForLoader
com.koushikdutta.async.http.body.JSONArrayBody -> com.koushikdutta.async.http.body.JSONArrayBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    org.json.JSONArray json -> json
    byte[] mBodyBytes -> mBodyBytes
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    void <init>() -> <init>
    void <init>(org.json.JSONArray) -> <init>
    org.json.JSONArray get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
com.koushikdutta.async.http.AsyncHttpClient$5 -> com.koushikdutta.async.http.AsyncHttpClient$5:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpResponseImpl val$ret -> val$ret
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpResponseImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
    void run() -> run
android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl:
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
    void <init>(android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl) -> <init>
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    int position -> position
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompatApi22 -> android.support.v4.graphics.drawable.DrawableCompatApi22:
    void <init>() -> <init>
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
    void <init>() -> <init>
android.support.v4.widget.CompoundButtonCompatLollipop -> android.support.v4.widget.CompoundButtonCompatLollipop:
    void <init>() -> <init>
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
com.koushikdutta.async.http.AsyncHttpPut -> com.koushikdutta.async.http.AsyncHttpPut:
    java.lang.String METHOD -> METHOD
    void <init>(java.lang.String) -> <init>
    void <init>(android.net.Uri) -> <init>
com.koushikdutta.ion.TransformBitmap$PostProcessNullTransform -> com.koushikdutta.ion.TransformBitmap$PostProcessNullTransform:
    java.lang.String key -> key
    void <init>(java.lang.String) -> <init>
    java.lang.String key() -> key
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
android.support.v4.hardware.fingerprint.FingerprintManagerCompat -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl IMPL -> IMPL
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    void authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    boolean isHardwareDetected() -> isHardwareDetected
    void <clinit>() -> <clinit>
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
    void <clinit>() -> <clinit>
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void <init>() -> <init>
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MAX -> PRIORITY_MAX
    int PRIORITY_MIN -> PRIORITY_MIN
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    void <init>() -> <init>
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    java.lang.String getCategory(android.app.Notification) -> getCategory
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    void <clinit>() -> <clinit>
    android.support.v4.app.NotificationCompat$NotificationCompatImpl -get0() -> -get0
    android.app.Notification[] -wrap0(android.os.Bundle,java.lang.String) -> -wrap0
    void -wrap1(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> -wrap1
    void -wrap2(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> -wrap2
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void <init>() -> <init>
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    void <init>() -> <init>
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    void <clinit>() -> <clinit>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.http.socketio.ErrorCallback -> com.koushikdutta.async.http.socketio.ErrorCallback:
    void onError(java.lang.String) -> onError
com.koushikdutta.async.http.spdy.HeadersMode -> com.koushikdutta.async.http.spdy.HeadersMode:
    com.koushikdutta.async.http.spdy.HeadersMode HTTP_20_HEADERS -> HTTP_20_HEADERS
    com.koushikdutta.async.http.spdy.HeadersMode SPDY_HEADERS -> SPDY_HEADERS
    com.koushikdutta.async.http.spdy.HeadersMode SPDY_REPLY -> SPDY_REPLY
    com.koushikdutta.async.http.spdy.HeadersMode SPDY_SYN_STREAM -> SPDY_SYN_STREAM
    com.koushikdutta.async.http.spdy.HeadersMode[] $VALUES -> $VALUES
    boolean failIfStreamAbsent() -> failIfStreamAbsent
    boolean failIfStreamPresent() -> failIfStreamPresent
    void <init>(java.lang.String,int) -> <init>
    boolean failIfHeadersAbsent() -> failIfHeadersAbsent
    boolean failIfHeadersPresent() -> failIfHeadersPresent
    com.koushikdutta.async.http.spdy.HeadersMode valueOf(java.lang.String) -> valueOf
    com.koushikdutta.async.http.spdy.HeadersMode[] values() -> values
    void <clinit>() -> <clinit>
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    boolean broadcasting -> broadcasting
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    java.lang.String toString() -> toString
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    void <init>(com.google.gson.Gson) -> <init>
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.ion.builder.RequestBuilder -> com.koushikdutta.ion.builder.RequestBuilder:
    com.koushikdutta.ion.builder.RequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    com.koushikdutta.ion.builder.RequestBuilder addHeaders(java.util.Map) -> addHeaders
    com.koushikdutta.ion.builder.RequestBuilder addQueries(java.util.Map) -> addQueries
    com.koushikdutta.ion.builder.RequestBuilder addQuery(java.lang.String,java.lang.String) -> addQuery
    com.koushikdutta.ion.builder.RequestBuilder basicAuthentication(java.lang.String,java.lang.String) -> basicAuthentication
    com.koushikdutta.ion.builder.RequestBuilder followRedirect(boolean) -> followRedirect
    com.koushikdutta.ion.builder.RequestBuilder noCache() -> noCache
    com.koushikdutta.ion.builder.RequestBuilder onHeaders(com.koushikdutta.ion.HeadersCallback) -> onHeaders
    com.koushikdutta.ion.builder.RequestBuilder progress(com.koushikdutta.ion.ProgressCallback) -> progress
    com.koushikdutta.ion.builder.RequestBuilder progressBar(android.widget.ProgressBar) -> progressBar
    com.koushikdutta.ion.builder.RequestBuilder progressDialog(android.app.ProgressDialog) -> progressDialog
    com.koushikdutta.ion.builder.RequestBuilder progressHandler(com.koushikdutta.ion.ProgressCallback) -> progressHandler
    com.koushikdutta.ion.builder.RequestBuilder proxy(java.lang.String,int) -> proxy
    java.lang.Object setByteArrayBody(byte[]) -> setByteArrayBody
    java.lang.Object setDocumentBody(org.w3c.dom.Document) -> setDocumentBody
    java.lang.Object setFileBody(java.io.File) -> setFileBody
    com.koushikdutta.ion.builder.RequestBuilder setHandler(android.os.Handler) -> setHandler
    com.koushikdutta.ion.builder.RequestBuilder setHeader(org.apache.http.NameValuePair[]) -> setHeader
    com.koushikdutta.ion.builder.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    java.lang.Object setJsonArrayBody(com.google.gson.JsonArray) -> setJsonArrayBody
    java.lang.Object setJsonObjectBody(com.google.gson.JsonObject) -> setJsonObjectBody
    java.lang.Object setJsonPojoBody(java.lang.Object) -> setJsonPojoBody
    java.lang.Object setJsonPojoBody(java.lang.Object,com.google.gson.reflect.TypeToken) -> setJsonPojoBody
    com.koushikdutta.ion.builder.RequestBuilder setLogging(java.lang.String,int) -> setLogging
    com.koushikdutta.ion.builder.Builders$Any$F setStreamBody(java.io.InputStream) -> setStreamBody
    com.koushikdutta.ion.builder.Builders$Any$F setStreamBody(java.io.InputStream,int) -> setStreamBody
    java.lang.Object setStringBody(java.lang.String) -> setStringBody
    com.koushikdutta.ion.builder.RequestBuilder setTimeout(int) -> setTimeout
    com.koushikdutta.ion.builder.RequestBuilder uploadProgress(com.koushikdutta.ion.ProgressCallback) -> uploadProgress
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressBar(android.widget.ProgressBar) -> uploadProgressBar
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressDialog(android.app.ProgressDialog) -> uploadProgressDialog
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressHandler(com.koushikdutta.ion.ProgressCallback) -> uploadProgressHandler
    com.koushikdutta.ion.builder.RequestBuilder userAgent(java.lang.String) -> userAgent
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    android.database.DataSetObservable mObservable -> mObservable
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void startUpdate(android.view.ViewGroup) -> startUpdate
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    float getPageWidth(int) -> getPageWidth
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    int getItemPosition(java.lang.Object) -> getItemPosition
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    android.os.Parcelable saveState() -> saveState
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void <init>() -> <init>
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.View) -> finishUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void startUpdate(android.view.View) -> startUpdate
com.koushikdutta.async.http.Headers$1 -> com.koushikdutta.async.http.Headers$1:
    com.koushikdutta.async.http.Headers this$0 -> this$0
    void <init>(com.koushikdutta.async.http.Headers) -> <init>
    java.util.List newList() -> newList
com.koushikdutta.async.http.body.StringBody -> com.koushikdutta.async.http.body.StringBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] mBodyBytes -> mBodyBytes
    java.lang.String string -> string
    void <init>(java.lang.String) -> <init>
    void <init>() -> <init>
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    java.lang.String get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    boolean readFullyOnRequest() -> readFullyOnRequest
    java.lang.String toString() -> toString
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
com.aokp.romcontrol.fragments.NotificationsDrawerFragment -> com.aokp.romcontrol.fragments.NotificationsDrawerFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> MIN_ALPHA_SEARCH_MAX_ITERATIONS
    int MIN_ALPHA_SEARCH_PRECISION -> MIN_ALPHA_SEARCH_PRECISION
    void <init>() -> <init>
    int HSLToColor(float[]) -> HSLToColor
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    double calculateContrast(int,int) -> calculateContrast
    double calculateLuminance(int) -> calculateLuminance
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void colorToHSL(int,float[]) -> colorToHSL
    int compositeAlpha(int,int) -> compositeAlpha
    int compositeColors(int,int) -> compositeColors
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    float constrain(float,float,float) -> constrain
    int constrain(int,int,int) -> constrain
    int setAlphaComponent(int,int) -> setAlphaComponent
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    void <init>(android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition,android.view.View) -> <init>
    boolean onPreDraw() -> onPreDraw
com.koushikdutta.ion.IonImageViewRequestBuilder -> com.koushikdutta.ion.IonImageViewRequestBuilder:
    com.koushikdutta.ion.BitmapDrawableFactory bitmapDrawableFactory -> bitmapDrawableFactory
    boolean crossfade -> crossfade
    android.graphics.drawable.Drawable errorDrawable -> errorDrawable
    int errorResource -> errorResource
    boolean fadeIn -> fadeIn
    com.koushikdutta.ion.ContextReference$ImageViewContextReference imageViewPostRef -> imageViewPostRef
    android.view.animation.Animation inAnimation -> inAnimation
    int inAnimationResource -> inAnimationResource
    android.view.animation.Animation loadAnimation -> loadAnimation
    int loadAnimationResource -> loadAnimationResource
    android.graphics.drawable.Drawable placeholderDrawable -> placeholderDrawable
    int placeholderResource -> placeholderResource
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    void reset() -> reset
    com.koushikdutta.ion.IonImageViewRequestBuilder withImageView(android.widget.ImageView) -> withImageView
    void <init>(com.koushikdutta.ion.IonRequestBuilder) -> <init>
    com.koushikdutta.ion.future.ImageViewFuture intoImageView(android.widget.ImageView) -> intoImageView
    com.koushikdutta.ion.IonImageViewRequestBuilder animateIn(android.view.animation.Animation) -> animateIn
    com.koushikdutta.ion.IonImageViewRequestBuilder animateIn(int) -> animateIn
    com.koushikdutta.ion.IonImageViewRequestBuilder animateLoad(android.view.animation.Animation) -> animateLoad
    com.koushikdutta.ion.IonImageViewRequestBuilder animateLoad(int) -> animateLoad
    com.koushikdutta.ion.IonImageViewRequestBuilder bitmapDrawableFactory(com.koushikdutta.ion.BitmapDrawableFactory) -> bitmapDrawableFactory
    com.koushikdutta.ion.IonImageViewRequestBuilder crossfade(boolean) -> crossfade
    com.koushikdutta.ion.IonRequestBuilder ensureBuilder() -> ensureBuilder
    com.koushikdutta.ion.IonImageViewRequestBuilder error(android.graphics.drawable.Drawable) -> error
    com.koushikdutta.ion.IonImageViewRequestBuilder error(int) -> error
    com.koushikdutta.ion.IonBitmapRequestBuilder fadeIn(boolean) -> fadeIn
    boolean getAdjustViewBounds(android.widget.ImageView) -> getAdjustViewBounds
    boolean getAdjustViewBounds_16(android.widget.ImageView) -> getAdjustViewBounds_16
    android.graphics.Bitmap getBitmap() -> getBitmap
    com.koushikdutta.ion.bitmap.BitmapInfo getBitmapInfo() -> getBitmapInfo
    android.graphics.drawable.Drawable getImageViewDrawable() -> getImageViewDrawable
    com.koushikdutta.ion.future.ImageViewFuture load(java.lang.String) -> load
    com.koushikdutta.async.future.Future load(java.lang.String,java.lang.String) -> load
    com.koushikdutta.ion.IonImageViewRequestBuilder placeholder(android.graphics.drawable.Drawable) -> placeholder
    com.koushikdutta.ion.IonImageViewRequestBuilder placeholder(int) -> placeholder
    com.koushikdutta.ion.IonDrawable setIonDrawable(android.widget.ImageView,com.koushikdutta.ion.BitmapFetcher,com.koushikdutta.ion.ResponseServedFrom) -> setIonDrawable
    void <clinit>() -> <clinit>
    com.koushikdutta.ion.builder.ImageViewBuilder bitmapDrawableFactory(com.koushikdutta.ion.BitmapDrawableFactory) -> bitmapDrawableFactory
    com.koushikdutta.ion.builder.ImageViewBuilder crossfade(boolean) -> crossfade
    com.koushikdutta.ion.builder.ImageViewBuilder animateLoad(int) -> animateLoad
    com.koushikdutta.ion.builder.ImageViewBuilder animateLoad(android.view.animation.Animation) -> animateLoad
    com.koushikdutta.ion.builder.ImageViewBuilder placeholder(int) -> placeholder
    com.koushikdutta.ion.builder.ImageViewBuilder placeholder(android.graphics.drawable.Drawable) -> placeholder
    com.koushikdutta.ion.builder.ImageViewBuilder fadeIn(boolean) -> fadeIn
    com.koushikdutta.ion.builder.ImageViewBuilder error(int) -> error
    com.koushikdutta.ion.builder.ImageViewBuilder error(android.graphics.drawable.Drawable) -> error
    com.koushikdutta.ion.builder.ImageViewBuilder animateIn(int) -> animateIn
    com.koushikdutta.ion.builder.ImageViewBuilder animateIn(android.view.animation.Animation) -> animateIn
    com.koushikdutta.ion.bitmap.BitmapInfo asCachedBitmap() -> asCachedBitmap
    com.koushikdutta.ion.bitmap.LocallyCachedStatus isLocallyCached() -> isLocallyCached
    com.koushikdutta.async.future.Future asBitmap() -> asBitmap
    void addDefaultTransform() -> addDefaultTransform
    com.koushikdutta.ion.IonBitmapRequestBuilder animateGif(com.koushikdutta.ion.builder.AnimateGifMode) -> animateGif
    com.koushikdutta.ion.IonBitmapRequestBuilder centerCrop() -> centerCrop
    com.koushikdutta.ion.IonBitmapRequestBuilder centerInside() -> centerInside
    java.lang.String computeBitmapKey(java.lang.String) -> computeBitmapKey
    com.koushikdutta.ion.IonBitmapRequestBuilder deepZoom() -> deepZoom
    com.koushikdutta.ion.IonBitmapRequestBuilder fitCenter() -> fitCenter
    com.koushikdutta.ion.IonBitmapRequestBuilder fitXY() -> fitXY
    com.koushikdutta.ion.IonBitmapRequestBuilder postProcess(com.koushikdutta.ion.bitmap.PostProcess) -> postProcess
    com.koushikdutta.ion.IonBitmapRequestBuilder resize(int,int) -> resize
    com.koushikdutta.ion.IonBitmapRequestBuilder resizeHeight(int) -> resizeHeight
    com.koushikdutta.ion.IonBitmapRequestBuilder resizeWidth(int) -> resizeWidth
    com.koushikdutta.ion.IonBitmapRequestBuilder smartSize(boolean) -> smartSize
    com.koushikdutta.ion.IonBitmapRequestBuilder transform(com.koushikdutta.ion.bitmap.Transform) -> transform
    com.koushikdutta.ion.builder.BitmapBuilder resizeHeight(int) -> resizeHeight
    com.koushikdutta.ion.builder.BitmapBuilder smartSize(boolean) -> smartSize
    com.koushikdutta.ion.builder.BitmapBuilder fitCenter() -> fitCenter
    com.koushikdutta.ion.builder.BitmapBuilder transform(com.koushikdutta.ion.bitmap.Transform) -> transform
    com.koushikdutta.ion.builder.BitmapBuilder centerInside() -> centerInside
    com.koushikdutta.ion.builder.BitmapBuilder resizeWidth(int) -> resizeWidth
    com.koushikdutta.ion.builder.ImageViewBuilder deepZoom() -> deepZoom
    com.koushikdutta.ion.builder.BitmapBuilder resize(int,int) -> resize
    com.koushikdutta.ion.builder.BitmapBuilder centerCrop() -> centerCrop
    com.koushikdutta.ion.builder.BitmapBuilder fitXY() -> fitXY
    com.koushikdutta.ion.builder.BitmapBuilder postProcess(com.koushikdutta.ion.bitmap.PostProcess) -> postProcess
    com.koushikdutta.ion.builder.ImageViewBuilder animateGif(com.koushikdutta.ion.builder.AnimateGifMode) -> animateGif
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
    java.lang.String command -> command
    android.os.Bundle extras -> extras
    android.os.ResultReceiver stub -> stub
    void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> <init>
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3$1 -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3$1:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3 this$2 -> this$2
    int val$percent -> val$percent
    void <init>(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3,int) -> <init>
    void run() -> run
com.koushikdutta.async.http.filter.GZIPInputFilter$1$1$1 -> com.koushikdutta.async.http.filter.GZIPInputFilter$1$1$1:
    com.koushikdutta.async.http.filter.GZIPInputFilter$1$1 this$2 -> this$2
    void <init>(com.koushikdutta.async.http.filter.GZIPInputFilter$1$1) -> <init>
    void parsed(byte[]) -> parsed
    void parsed(java.lang.Object) -> parsed
com.koushikdutta.ion.mock.MockResponseFuture$1 -> com.koushikdutta.ion.mock.MockResponseFuture$1:
    com.koushikdutta.ion.mock.MockResponseFuture this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.mock.MockResponseFuture,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$1 -> this$1
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl:
    void <init>() -> <init>
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
android.support.v4.app.BundleCompatDonut -> android.support.v4.app.BundleCompatDonut:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetIBinderMethod -> sGetIBinderMethod
    boolean sGetIBinderMethodFetched -> sGetIBinderMethodFetched
    java.lang.reflect.Method sPutIBinderMethod -> sPutIBinderMethod
    boolean sPutIBinderMethodFetched -> sPutIBinderMethodFetched
    void <init>() -> <init>
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
com.koushikdutta.async.http.HybiParser$ProtocolError -> com.koushikdutta.async.http.HybiParser$ProtocolError:
    void <init>(java.lang.String) -> <init>
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    void <init>() -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
com.koushikdutta.async.http.socketio.SocketIOException -> com.koushikdutta.async.http.socketio.SocketIOException:
    void <init>(java.lang.String) -> <init>
android.support.v4.media.MediaMetadataCompat$LongKey -> android.support.v4.media.MediaMetadataCompat$LongKey:
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    void <init>() -> <init>
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl:
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
com.koushikdutta.async.http.cache.RequestHeaders$1 -> com.koushikdutta.async.http.cache.RequestHeaders$1:
    com.koushikdutta.async.http.cache.RequestHeaders this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.RequestHeaders) -> <init>
    void handle(java.lang.String,java.lang.String) -> handle
android.support.annotation.Size -> android.support.annotation.Size:
    long max() -> max
    long min() -> min
    long multiple() -> multiple
    long value() -> value
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    void <init>() -> <init>
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1$1 -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1$1:
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1 this$1 -> this$1
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1) -> <init>
    void run() -> run
android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback -> android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.v4.view.ScrollingView -> android.support.v4.view.ScrollingView:
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollRange() -> computeVerticalScrollRange
android.support.v13.app.FragmentCompat -> android.support.v13.app.FragmentCompat:
    android.support.v13.app.FragmentCompat$FragmentCompatImpl IMPL -> IMPL
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
    void <init>() -> <init>
    void requestPermissions(android.app.Fragment,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String) -> shouldShowRequestPermissionRationale
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    void <init>() -> <init>
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.CharSequence getError(java.lang.Object) -> getError
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
com.koushikdutta.ion.ContextReference$SupportFragmentContextReference -> com.koushikdutta.ion.ContextReference$SupportFragmentContextReference:
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.content.Context getContext() -> getContext
    java.lang.String isAlive() -> isAlive
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    void <init>() -> <init>
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    int normalizeMetaState(int) -> normalizeMetaState
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    android.graphics.Paint dimPaint -> dimPaint
    boolean dimWhenOffset -> dimWhenOffset
    boolean slideable -> slideable
    float weight -> weight
    void <init>() -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.support.v4.widget.SlidingPaneLayout$LayoutParams) -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavigationDrawerCallbacks -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavigationDrawerCallbacks:
    void onNavigationDrawerItemSelected(int) -> onNavigationDrawerItemSelected
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
com.koushikdutta.async.http.AsyncSSLEngineConfigurator -> com.koushikdutta.async.http.AsyncSSLEngineConfigurator:
    void configureEngine(javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> configureEngine
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    void <init>() -> <init>
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.annotation.IntRange -> android.support.annotation.IntRange:
    long from() -> from
    long to() -> to
com.koushikdutta.ion.InputStreamParser -> com.koushikdutta.ion.InputStreamParser:
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void <init>() -> <init>
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,java.io.InputStream,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
com.aokp.romcontrol.fragments.about.AboutFragment$2 -> com.aokp.romcontrol.fragments.about.AboutFragment$2:
    com.aokp.romcontrol.fragments.about.AboutFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.about.AboutFragment) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    void <init>() -> <init>
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
com.aokp.romcontrol.util.CommandResult -> com.aokp.romcontrol.util.CommandResult:
    java.lang.String TAG -> TAG
    long mEndTime -> mEndTime
    int mExitValue -> mExitValue
    long mStartTime -> mStartTime
    java.lang.String mStderr -> mStderr
    java.lang.String mStdout -> mStdout
    boolean success() -> success
    java.lang.String getStdout() -> getStdout
    void <init>(long,int,java.lang.String,java.lang.String,long) -> <init>
    java.lang.String getStderr() -> getStderr
    java.lang.Integer getExitValue() -> getExitValue
    void <init>(android.os.Parcel) -> <init>
    void checkForErrors() -> checkForErrors
    int describeContents() -> describeContents
    boolean equals(java.lang.Object) -> equals
    long getEndTime() -> getEndTime
    long getStartTime() -> getStartTime
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$1 -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$1:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> this$0
    void <init>(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.koushikdutta.ion.builder.Builders$Any$M -> com.koushikdutta.ion.builder.Builders$Any$M:
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.MotionEventCompatGingerbread:
    void <init>() -> <init>
    int getSource(android.view.MotionEvent) -> getSource
com.koushikdutta.async.FilteredDataEmitter -> com.koushikdutta.async.FilteredDataEmitter:
    boolean closed -> closed
    com.koushikdutta.async.DataEmitter mEmitter -> mEmitter
    int totalRead -> totalRead
    com.koushikdutta.async.DataTrackingEmitter$DataTracker tracker -> tracker
    void <init>() -> <init>
    void setDataEmitter(com.koushikdutta.async.DataEmitter) -> setDataEmitter
    java.lang.String charset() -> charset
    void close() -> close
    int getBytesRead() -> getBytesRead
    com.koushikdutta.async.DataEmitter getDataEmitter() -> getDataEmitter
    com.koushikdutta.async.DataTrackingEmitter$DataTracker getDataTracker() -> getDataTracker
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    boolean isChunked() -> isChunked
    boolean isPaused() -> isPaused
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void pause() -> pause
    void resume() -> resume
    void setDataTracker(com.koushikdutta.async.DataTrackingEmitter$DataTracker) -> setDataTracker
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl -> android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl:
    void requestPermissions(android.app.Fragment,java.lang.String[],int) -> requestPermissions
    void <init>() -> <init>
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
    boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String) -> shouldShowRequestPermissionRationale
net.margaritov.preference.colorpicker.AlphaPatternDrawable -> net.margaritov.preference.colorpicker.AlphaPatternDrawable:
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPaintGray -> mPaintGray
    android.graphics.Paint mPaintWhite -> mPaintWhite
    int mRectangleSize -> mRectangleSize
    int numRectanglesHorizontal -> numRectanglesHorizontal
    int numRectanglesVertical -> numRectanglesVertical
    void draw(android.graphics.Canvas) -> draw
    void <init>(int) -> <init>
    void generatePatternBitmap() -> generatePatternBitmap
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.koushikdutta.async.http.Protocol$2 -> com.koushikdutta.async.http.Protocol$2:
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    boolean needsSpdyConnection() -> needsSpdyConnection
com.koushikdutta.async.future.HandlerFuture$1 -> com.koushikdutta.async.future.HandlerFuture$1:
    com.koushikdutta.async.future.HandlerFuture this$0 -> this$0
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
    void <init>(com.koushikdutta.async.future.HandlerFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.koushikdutta.async.AsyncServer$9 -> com.koushikdutta.async.AsyncServer$9:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    void transform(java.net.InetAddress[]) -> transform
    void transform(java.lang.Object) -> transform
com.koushikdutta.async.http.BasicNameValuePair -> com.koushikdutta.async.http.BasicNameValuePair:
    java.lang.String name -> name
    java.lang.String value -> value
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl -> android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl:
    void <init>() -> <init>
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    void <init>(android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl) -> <init>
com.aokp.romcontrol.fragments.navbar.ArrangeNavbarFragment -> com.aokp.romcontrol.fragments.navbar.ArrangeNavbarFragment:
    android.content.Context mContext -> mContext
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onSettingChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onSettingChanged
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestData:
    com.koushikdutta.async.http.AsyncHttpRequest request -> request
    com.koushikdutta.async.util.UntypedHashtable state -> state
    void <init>() -> <init>
com.koushikdutta.async.PushParser$UntilWaiter -> com.koushikdutta.async.PushParser$UntilWaiter:
    com.koushikdutta.async.callback.DataCallback callback -> callback
    byte value -> value
    void <init>(byte,com.koushikdutta.async.callback.DataCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
com.koushikdutta.async.http.AsyncSocketMiddleware$4 -> com.koushikdutta.async.http.AsyncSocketMiddleware$4:
    com.koushikdutta.async.http.AsyncSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.AsyncSocket) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.future.Cancellable -> com.koushikdutta.async.future.Cancellable:
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    boolean cancel() -> cancel
com.koushikdutta.async.http.socketio.transport.SocketIOTransport -> com.koushikdutta.async.http.socketio.transport.SocketIOTransport:
    void disconnect() -> disconnect
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    java.lang.String getSessionId() -> getSessionId
    boolean heartbeats() -> heartbeats
    boolean isConnected() -> isConnected
    void send(java.lang.String) -> send
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setStringCallback(com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback) -> setStringCallback
com.aokp.romcontrol.widgets.CategorySeparator -> com.aokp.romcontrol.widgets.CategorySeparator:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
com.koushikdutta.async.http.spdy.SpdyMiddleware$6 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$6:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData val$data -> val$data
    com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket val$spdySocket -> val$spdySocket
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData,com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.Headers) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void <init>() -> <init>
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    void <init>(android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl) -> <init>
com.koushikdutta.async.http.ProtocolVersion -> com.koushikdutta.async.http.ProtocolVersion:
    int major -> major
    int minor -> minor
    java.lang.String protocol -> protocol
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,int,int) -> <init>
    java.lang.Object clone() -> clone
    int compareToVersion(com.koushikdutta.async.http.ProtocolVersion) -> compareToVersion
    boolean equals(java.lang.Object) -> equals
    com.koushikdutta.async.http.ProtocolVersion forVersion(int,int) -> forVersion
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    java.lang.String getProtocol() -> getProtocol
    boolean greaterEquals(com.koushikdutta.async.http.ProtocolVersion) -> greaterEquals
    int hashCode() -> hashCode
    boolean isComparable(com.koushikdutta.async.http.ProtocolVersion) -> isComparable
    boolean lessEquals(com.koushikdutta.async.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    void <init>() -> <init>
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl:
    void <init>() -> <init>
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.DragSortListView$HeightCache:
    android.util.SparseIntArray mMap -> mMap
    int mMaxSize -> mMaxSize
    java.util.ArrayList mOrder -> mOrder
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,int) -> <init>
    void add(int,int) -> add
    void clear() -> clear
    int get(int) -> get
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.animation.DonutAnimatorCompatProvider -> android.support.v4.animation.DonutAnimatorCompatProvider:
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> clearInterpolator
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
com.koushikdutta.ion.loader.ResourceLoader$Resource -> com.koushikdutta.ion.loader.ResourceLoader$Resource:
    int id -> id
    android.content.res.Resources res -> res
    void <init>() -> <init>
    void <init>(com.koushikdutta.ion.loader.ResourceLoader$Resource) -> <init>
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int UNKNOWN_ID -> UNKNOWN_ID
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.lang.Object mItem -> mItem
    android.support.v4.media.session.MediaSessionCompat$QueueItem obtain(java.lang.Object) -> obtain
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    long getQueueId() -> getQueueId
    java.lang.Object getQueueItem() -> getQueueItem
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,android.support.v4.media.session.MediaSessionCompat$QueueItem) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.util.List getActionList(java.lang.Object) -> getActionList
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getError(java.lang.Object) -> getError
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean isDismissable(java.lang.Object) -> isDismissable
    boolean isEditable(java.lang.Object) -> isEditable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void recycle(java.lang.Object) -> recycle
    boolean refresh(java.lang.Object) -> refresh
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    void setEditable(java.lang.Object,boolean) -> setEditable
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setInputType(java.lang.Object,int) -> setInputType
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
    void <init>() -> <init>
com.koushikdutta.async.http.cache.StrictLineReader$1 -> com.koushikdutta.async.http.cache.StrictLineReader$1:
    com.koushikdutta.async.http.cache.StrictLineReader this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.StrictLineReader,int) -> <init>
    java.lang.String toString() -> toString
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21:
    void <init>() -> <init>
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    int getId(java.lang.Object) -> getId
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    int getType(java.lang.Object) -> getType
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    void <init>(java.lang.reflect.Method) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void <init>() -> <init>
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.DragSortListView$RemoveAnimator:
    int mFirstChildHeight -> mFirstChildHeight
    int mFirstPos -> mFirstPos
    float mFirstStartBlank -> mFirstStartBlank
    int mSecondChildHeight -> mSecondChildHeight
    int mSecondPos -> mSecondPos
    float mSecondStartBlank -> mSecondStartBlank
    int srcPos -> srcPos
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    void onStart() -> onStart
    void onStop() -> onStop
    void onUpdate(float,float) -> onUpdate
com.koushikdutta.ion.loader.AssetLoader$1 -> com.koushikdutta.ion.loader.AssetLoader$1:
    com.koushikdutta.ion.loader.AssetLoader this$0 -> this$0
    com.koushikdutta.ion.Ion val$ion -> val$ion
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.ion.loader.InputStreamDataEmitterFuture val$ret -> val$ret
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.loader.AssetLoader,com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.loader.InputStreamDataEmitterFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
    void run() -> run
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    void <init>() -> <init>
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.ByteBufferList$Reclaimer -> com.koushikdutta.async.ByteBufferList$Reclaimer:
    void <init>() -> <init>
    int compare(java.nio.ByteBuffer,java.nio.ByteBuffer) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.media.MediaMetadataCompat$BitmapKey -> android.support.v4.media.MediaMetadataCompat$BitmapKey:
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData:
    java.lang.Exception exception -> exception
    void <init>() -> <init>
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
    void <init>(android.content.Intent,java.util.ArrayList) -> <init>
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.DragSortListView$2:
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    void cancel() -> cancel
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationStart(android.view.View) -> onAnimationStart
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    void <init>() -> <init>
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
android.support.v4.content.ContentResolverCompatJellybean -> android.support.v4.content.ContentResolverCompatJellybean:
    void <init>() -> <init>
    boolean isFrameworkOperationCanceledException(java.lang.Exception) -> isFrameworkOperationCanceledException
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
com.koushikdutta.async.http.socketio.SocketIOConnection$10 -> com.koushikdutta.async.http.socketio.SocketIOConnection$10:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    java.lang.String val$error -> val$error
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    void <init>() -> <init>
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    void <init>() -> <init>
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    void <init>() -> <init>
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
com.koushikdutta.async.http.spdy.Http20Draft13$FrameLogger -> com.koushikdutta.async.http.spdy.Http20Draft13$FrameLogger:
    java.lang.String[] BINARY -> BINARY
    java.lang.String[] FLAGS -> FLAGS
    java.lang.String[] TYPES -> TYPES
    void <init>() -> <init>
    java.lang.String formatFlags(byte,byte) -> formatFlags
    java.lang.String formatHeader(boolean,int,int,byte,byte) -> formatHeader
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.socketio.transport.XHRPollingTransport$1 -> com.koushikdutta.async.http.socketio.transport.XHRPollingTransport$1:
    com.koushikdutta.async.http.socketio.transport.XHRPollingTransport this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.transport.XHRPollingTransport) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.String) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object,java.lang.Object) -> onCompleted
android.support.v4.animation.ValueAnimatorCompat -> android.support.v4.animation.ValueAnimatorCompat:
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    void cancel() -> cancel
    float getAnimatedFraction() -> getAnimatedFraction
    void setDuration(long) -> setDuration
    void setTarget(android.view.View) -> setTarget
    void start() -> start
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1:
    void <init>() -> <init>
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
android.support.v4.content.ContextCompatApi23 -> android.support.v4.content.ContextCompatApi23:
    void <init>() -> <init>
    int getColor(android.content.Context,int) -> getColor
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    void <init>() -> <init>
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void <init>() -> <init>
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
com.koushikdutta.async.ByteBufferList -> com.koushikdutta.async.ByteBufferList:
    java.nio.ByteBuffer EMPTY_BYTEBUFFER -> EMPTY_BYTEBUFFER
    int MAX_ITEM_SIZE -> MAX_ITEM_SIZE
    java.lang.Object LOCK -> LOCK
    int MAX_SIZE -> MAX_SIZE
    int currentSize -> currentSize
    com.koushikdutta.async.ArrayDeque mBuffers -> mBuffers
    int maxItem -> maxItem
    java.nio.ByteOrder order -> order
    java.util.PriorityQueue reclaimed -> reclaimed
    int remaining -> remaining
    boolean -assertionsDisabled -> -assertionsDisabled
    int remaining() -> remaining
    void <init>(byte[]) -> <init>
    void <init>(java.nio.ByteBuffer[]) -> <init>
    byte[] getAllByteArray() -> getAllByteArray
    void <init>() -> <init>
    void get(com.koushikdutta.async.ByteBufferList) -> get
    java.lang.String readString() -> readString
    boolean hasRemaining() -> hasRemaining
    java.nio.ByteBuffer getAll() -> getAll
    com.koushikdutta.async.ByteBufferList add(java.nio.ByteBuffer) -> add
    int size() -> size
    java.nio.ByteBuffer remove() -> remove
    void addFirst(java.nio.ByteBuffer) -> addFirst
    void reclaim(java.nio.ByteBuffer) -> reclaim
    java.nio.ByteBuffer obtain(int) -> obtain
    java.nio.ByteBuffer[] getAllArray() -> getAllArray
    com.koushikdutta.async.ByteBufferList addAll(java.nio.ByteBuffer[]) -> addAll
    void writeOutputStream(java.io.OutputStream,java.nio.ByteBuffer) -> writeOutputStream
    void recycle() -> recycle
    com.koushikdutta.async.ByteBufferList order(java.nio.ByteOrder) -> order
    byte get() -> get
    void get(byte[]) -> get
    short getShort() -> getShort
    int getInt() -> getInt
    void get(com.koushikdutta.async.ByteBufferList,int) -> get
    java.lang.String readString(java.nio.charset.Charset) -> readString
    void get(byte[],int,int) -> get
    com.koushikdutta.async.ByteBufferList get(int) -> get
    long getLong() -> getLong
    com.koushikdutta.async.ByteBufferList add(com.koushikdutta.async.ByteBufferList) -> add
    com.koushikdutta.async.ByteBufferList addAll(com.koushikdutta.async.ByteBufferList[]) -> addAll
    void addRemaining(int) -> addRemaining
    char getByteChar() -> getByteChar
    byte[] getBytes(int) -> getBytes
    java.util.PriorityQueue getReclaimed() -> getReclaimed
    boolean isEmpty() -> isEmpty
    void obtainArray(java.nio.ByteBuffer[],int) -> obtainArray
    java.nio.ByteOrder order() -> order
    byte[] peekBytes(int) -> peekBytes
    int peekInt() -> peekInt
    long peekLong() -> peekLong
    short peekShort() -> peekShort
    java.lang.String peekString() -> peekString
    java.lang.String peekString(java.nio.charset.Charset) -> peekString
    java.nio.ByteBuffer read(int) -> read
    boolean reclaimedContains(java.nio.ByteBuffer) -> reclaimedContains
    void setMaxItemSize(int) -> setMaxItemSize
    void setMaxPoolSize(int) -> setMaxPoolSize
    com.koushikdutta.async.ByteBufferList skip(int) -> skip
    void spewString() -> spewString
    void trim() -> trim
    void <clinit>() -> <clinit>
com.aokp.romcontrol.fragments.about.AboutTabHostFragment$TabAdapter -> com.aokp.romcontrol.fragments.about.AboutTabHostFragment$TabAdapter:
    void <init>(android.app.FragmentManager) -> <init>
    int getCount() -> getCount
    android.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.annotation.VisibleForTesting -> android.support.annotation.VisibleForTesting:
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void <init>() -> <init>
    void fastForward(java.lang.Object) -> fastForward
    void pause(java.lang.Object) -> pause
    void play(java.lang.Object) -> play
    void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    void rewind(java.lang.Object) -> rewind
    void seekTo(java.lang.Object,long) -> seekTo
    void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
    void setRating(java.lang.Object,java.lang.Object) -> setRating
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    void stop(java.lang.Object) -> stop
android.support.v4.media.session.MediaSessionCompatApi23$Callback -> android.support.v4.media.session.MediaSessionCompatApi23$Callback:
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
com.koushikdutta.ion.builder.Builders$IV$F -> com.koushikdutta.ion.builder.Builders$IV$F:
    android.graphics.Bitmap getBitmap() -> getBitmap
    com.koushikdutta.ion.bitmap.BitmapInfo getBitmapInfo() -> getBitmapInfo
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void <init>() -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onStop() -> onStop
android.support.v13.app.FragmentCompat$MncFragmentCompatImpl -> android.support.v13.app.FragmentCompat$MncFragmentCompatImpl:
    void <init>() -> <init>
    void requestPermissions(android.app.Fragment,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String) -> shouldShowRequestPermissionRationale
android.support.v4.text.TextUtilsCompatJellybeanMr1 -> android.support.v4.text.TextUtilsCompatJellybeanMr1:
    void <init>() -> <init>
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    android.media.AudioManager mAudioManager -> mAudioManager
    android.support.v4.media.session.MediaSessionCompat$Callback mCallback -> mCallback
    android.content.ComponentName mComponentName -> mComponentName
    android.content.Context mContext -> mContext
    android.os.RemoteCallbackList mControllerCallbacks -> mControllerCallbacks
    boolean mDestroyed -> mDestroyed
    android.os.Bundle mExtras -> mExtras
    int mFlags -> mFlags
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler -> mHandler
    boolean mIsActive -> mIsActive
    boolean mIsMbrRegistered -> mIsMbrRegistered
    boolean mIsRccRegistered -> mIsRccRegistered
    int mLocalStream -> mLocalStream
    java.lang.Object mLock -> mLock
    android.app.PendingIntent mMediaButtonEventReceiver -> mMediaButtonEventReceiver
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    java.lang.String mPackageName -> mPackageName
    java.util.List mQueue -> mQueue
    java.lang.CharSequence mQueueTitle -> mQueueTitle
    int mRatingType -> mRatingType
    java.lang.Object mRccObj -> mRccObj
    android.app.PendingIntent mSessionActivity -> mSessionActivity
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub -> mStub
    java.lang.String mTag -> mTag
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback -> mVolumeCallback
    android.support.v4.media.VolumeProviderCompat mVolumeProvider -> mVolumeProvider
    int mVolumeType -> mVolumeType
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void adjustVolume(int,int) -> adjustVolume
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition() -> getStateWithUpdatedPosition
    boolean isActive() -> isActive
    void release() -> release
    void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    void sendQueue(java.util.List) -> sendQueue
    void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    void sendSessionDestroyed() -> sendSessionDestroyed
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    void setActive(boolean) -> setActive
    void setExtras(android.os.Bundle) -> setExtras
    void setFlags(int) -> setFlags
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    boolean update() -> update
    android.media.AudioManager -get0(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get0
    android.support.v4.media.session.MediaSessionCompat$Callback -get1(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get1
    android.os.RemoteCallbackList -get2(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get2
    boolean -get3(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get3
    android.os.Bundle -get4(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get4
    int -get5(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get5
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -get6(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get6
    int -get7(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get7
    java.lang.Object -get8(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get8
    android.support.v4.media.MediaMetadataCompat -get9(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get9
    java.lang.String -get10(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get10
    java.util.List -get11(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get11
    java.lang.CharSequence -get12(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get12
    int -get13(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get13
    android.app.PendingIntent -get14(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get14
    android.support.v4.media.session.PlaybackStateCompat -get15(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get15
    java.lang.String -get16(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get16
    android.support.v4.media.VolumeProviderCompat -get17(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get17
    int -get18(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -get18
    android.support.v4.media.session.PlaybackStateCompat -wrap0(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> -wrap0
    void -wrap1(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> -wrap1
    void -wrap2(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo) -> -wrap2
    void -wrap3(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> -wrap3
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper:
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void <init>() -> <init>
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.widget.PopupWindowCompatApi21 -> android.support.v4.widget.PopupWindowCompatApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sOverlapAnchorField -> sOverlapAnchorField
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void <clinit>() -> <clinit>
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    void <init>(java.lang.String) -> <init>
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    int mCapacityBitmask -> mCapacityBitmask
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    void clear() -> clear
    void doubleCapacity() -> doubleCapacity
    java.lang.Object get(int) -> get
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    boolean isEmpty() -> isEmpty
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    void removeFromEnd(int) -> removeFromEnd
    void removeFromStart(int) -> removeFromStart
    int size() -> size
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void <init>(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> <init>
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    void <init>() -> <init>
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.koushikdutta.async.Util -> com.koushikdutta.async.Util:
    boolean SUPRESS_DEBUG_EXCEPTIONS -> SUPRESS_DEBUG_EXCEPTIONS
    boolean -assertionsDisabled -> -assertionsDisabled
    void emitAllData(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> emitAllData
    void writeAll(com.koushikdutta.async.DataSink,byte[],com.koushikdutta.async.callback.CompletedCallback) -> writeAll
    void writeAll(com.koushikdutta.async.DataSink,com.koushikdutta.async.ByteBufferList,com.koushikdutta.async.callback.CompletedCallback) -> writeAll
    void pump(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> pump
    void pump(java.io.File,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> pump
    void pump(java.io.InputStream,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> pump
    void pump(java.io.InputStream,long,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> pump
    com.koushikdutta.async.AsyncSocket getWrappedSocket(com.koushikdutta.async.AsyncSocket,java.lang.Class) -> getWrappedSocket
    void writable(com.koushikdutta.async.callback.WritableCallback) -> writable
    void end(com.koushikdutta.async.DataEmitter,java.lang.Exception) -> end
    void writable(com.koushikdutta.async.DataSink) -> writable
    void <init>() -> <init>
    void end(com.koushikdutta.async.callback.CompletedCallback,java.lang.Exception) -> end
    com.koushikdutta.async.DataEmitter getWrappedDataEmitter(com.koushikdutta.async.DataEmitter,java.lang.Class) -> getWrappedDataEmitter
    void stream(com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.callback.CompletedCallback) -> stream
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompatApi14 -> android.support.v4.media.session.MediaSessionCompatApi14:
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_STOP -> ACTION_STOP
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    int RCC_PLAYSTATE_NONE -> RCC_PLAYSTATE_NONE
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_ERROR -> STATE_ERROR
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_NONE -> STATE_NONE
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    int STATE_STOPPED -> STATE_STOPPED
    void <init>() -> <init>
    void buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> buildOldMetadata
    java.lang.Object createRemoteControlClient(android.app.PendingIntent) -> createRemoteControlClient
    int getRccStateFromState(int) -> getRccStateFromState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void registerRemoteControlClient(android.content.Context,java.lang.Object) -> registerRemoteControlClient
    void setMetadata(java.lang.Object,android.os.Bundle) -> setMetadata
    void setState(java.lang.Object,int) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void unregisterRemoteControlClient(android.content.Context,java.lang.Object) -> unregisterRemoteControlClient
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int missCount -> missCount
    int putCount -> putCount
    int size -> size
    void <init>(int) -> <init>
    java.lang.Object create(java.lang.Object) -> create
    int createCount() -> createCount
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    void evictAll() -> evictAll
    int evictionCount() -> evictionCount
    java.lang.Object get(java.lang.Object) -> get
    int hitCount() -> hitCount
    int maxSize() -> maxSize
    int missCount() -> missCount
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    int putCount() -> putCount
    java.lang.Object remove(java.lang.Object) -> remove
    void resize(int) -> resize
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int size() -> size
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
    void trimToSize(int) -> trimToSize
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2 -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2:
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    boolean val$proxied -> val$proxied
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    android.net.Uri val$uri -> val$uri
    int val$port -> val$port
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSocket) -> onConnectCompleted
    void <init>(com.koushikdutta.async.http.AsyncSSLSocketMiddleware,com.koushikdutta.async.callback.ConnectCallback,boolean,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int) -> <init>
com.koushikdutta.ion.bitmap.BitmapDecodeException -> com.koushikdutta.ion.bitmap.BitmapDecodeException:
    int height -> height
    int width -> width
    void <init>(int,int) -> <init>
    java.lang.String toString() -> toString
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void <init>() -> <init>
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
com.koushikdutta.ion.ImageViewFutureImpl -> com.koushikdutta.ion.ImageViewFutureImpl:
    com.koushikdutta.ion.ImageViewFutureImpl FUTURE_IMAGEVIEW_NULL_URI -> FUTURE_IMAGEVIEW_NULL_URI
    com.koushikdutta.ion.ContextReference$ImageViewContextReference imageViewRef -> imageViewRef
    android.view.animation.Animation inAnimation -> inAnimation
    int inAnimationResource -> inAnimationResource
    com.koushikdutta.ion.ScaleMode scaleMode -> scaleMode
    int[] -com_koushikdutta_ion_ScaleModeSwitchesValues -> -com_koushikdutta_ion_ScaleModeSwitchesValues
    com.koushikdutta.async.future.Future withBitmapInfo() -> withBitmapInfo
    void <init>() -> <init>
    void applyScaleMode(android.widget.ImageView,com.koushikdutta.ion.ScaleMode) -> applyScaleMode
    com.koushikdutta.ion.ImageViewFutureImpl getOrCreateImageViewFuture(com.koushikdutta.ion.ContextReference$ImageViewContextReference,com.koushikdutta.ion.IonDrawable) -> getOrCreateImageViewFuture
    com.koushikdutta.ion.ImageViewFutureImpl setInAnimation(android.view.animation.Animation,int) -> setInAnimation
    com.koushikdutta.ion.ImageViewFutureImpl setScaleMode(com.koushikdutta.ion.ScaleMode) -> setScaleMode
    void transform(com.koushikdutta.ion.IonDrawable) -> transform
    void <clinit>() -> <clinit>
    void transform(java.lang.Object) -> transform
    int[] -getcom_koushikdutta_ion_ScaleModeSwitchesValues() -> -getcom_koushikdutta_ion_ScaleModeSwitchesValues
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
com.koushikdutta.async.http.AsyncSSLSocketMiddleware -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware:
    java.util.List engineConfigurators -> engineConfigurators
    javax.net.ssl.HostnameVerifier hostnameVerifier -> hostnameVerifier
    javax.net.ssl.SSLContext sslContext -> sslContext
    javax.net.ssl.TrustManager[] trustManagers -> trustManagers
    void <init>(com.koushikdutta.async.http.AsyncHttpClient) -> <init>
    void addEngineConfigurator(com.koushikdutta.async.http.AsyncSSLEngineConfigurator) -> addEngineConfigurator
    void setSSLContext(javax.net.ssl.SSLContext) -> setSSLContext
    com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback createHandshakeCallback(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.callback.ConnectCallback) -> createHandshakeCallback
    com.koushikdutta.async.callback.ConnectCallback wrapCallback(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int,boolean,com.koushikdutta.async.callback.ConnectCallback) -> wrapCallback
    void clearEngineConfigurators() -> clearEngineConfigurators
    javax.net.ssl.SSLEngine createConfiguredSSLEngine(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> createConfiguredSSLEngine
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    void setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    void setTrustManagers(javax.net.ssl.TrustManager[]) -> setTrustManagers
    void tryHandshake(com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int,com.koushikdutta.async.callback.ConnectCallback) -> tryHandshake
com.koushikdutta.async.AsyncNetworkSocket -> com.koushikdutta.async.AsyncNetworkSocket:
    com.koushikdutta.async.util.Allocator allocator -> allocator
    boolean closeReported -> closeReported
    com.koushikdutta.async.ChannelWrapper mChannel -> mChannel
    com.koushikdutta.async.callback.CompletedCallback mClosedHander -> mClosedHander
    com.koushikdutta.async.callback.CompletedCallback mCompletedCallback -> mCompletedCallback
    com.koushikdutta.async.callback.DataCallback mDataHandler -> mDataHandler
    boolean mEndReported -> mEndReported
    java.nio.channels.SelectionKey mKey -> mKey
    boolean mPaused -> mPaused
    java.lang.Exception mPendingEndException -> mPendingEndException
    com.koushikdutta.async.AsyncServer mServer -> mServer
    com.koushikdutta.async.callback.WritableCallback mWriteableHandler -> mWriteableHandler
    com.koushikdutta.async.ByteBufferList pending -> pending
    java.net.InetSocketAddress socketAddress -> socketAddress
    boolean -assertionsDisabled -> -assertionsDisabled
    com.koushikdutta.async.ChannelWrapper getChannel() -> getChannel
    void setup(com.koushikdutta.async.AsyncServer,java.nio.channels.SelectionKey) -> setup
    void attach(java.nio.channels.DatagramChannel) -> attach
    void <init>() -> <init>
    void attach(java.nio.channels.SocketChannel,java.net.InetSocketAddress) -> attach
    int onReadable() -> onReadable
    void onDataWritable() -> onDataWritable
    void write(com.koushikdutta.async.ByteBufferList) -> write
    void pause() -> pause
    void resume() -> resume
    java.lang.String charset() -> charset
    void close() -> close
    void closeInternal() -> closeInternal
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    int getLocalPort() -> getLocalPort
    java.net.InetSocketAddress getRemoteAddress() -> getRemoteAddress
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    java.lang.Object getSocket() -> getSocket
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    void handleRemaining(int) -> handleRemaining
    boolean isChunked() -> isChunked
    boolean isOpen() -> isOpen
    boolean isPaused() -> isPaused
    void reportClose(java.lang.Exception) -> reportClose
    void reportEnd(java.lang.Exception) -> reportEnd
    void reportEndPending(java.lang.Exception) -> reportEndPending
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void spitPending() -> spitPending
    void <clinit>() -> <clinit>
com.aokp.romcontrol.R$dimen -> com.aokp.romcontrol.R$dimen:
    int drag_grip_ridge_size -> drag_grip_ridge_size
    int drag_grip_ridge_gap -> drag_grip_ridge_gap
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int list_toggle_height -> list_toggle_height
    int list_toggle_width -> list_toggle_width
    int navbar_search_outerring_diameter -> navbar_search_outerring_diameter
    int navbar_search_outerring_radius -> navbar_search_outerring_radius
    int navbar_search_panel_height -> navbar_search_panel_height
    int navbar_search_snap_margin -> navbar_search_snap_margin
    int navigation_drawer_icon_width -> navigation_drawer_icon_width
    int navigation_drawer_width -> navigation_drawer_width
    int toggle_rearrange_dialog_title_height -> toggle_rearrange_dialog_title_height
    void <init>() -> <init>
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$BodyCacher -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$BodyCacher:
    com.koushikdutta.async.ByteBufferList cached -> cached
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryEditor editor -> editor
    void <init>() -> <init>
    void abort() -> abort
    void close() -> close
    void commit() -> commit
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void report(java.lang.Exception) -> report
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$BodyCacher) -> <init>
com.koushikdutta.async.http.socketio.SocketIORequest$Config -> com.koushikdutta.async.http.socketio.SocketIORequest$Config:
    long reconnectDelay -> reconnectDelay
    long reconnectDelayMax -> reconnectDelayMax
    boolean randomizeReconnectDelay -> randomizeReconnectDelay
    void <init>() -> <init>
    long getReconnectDelay() -> getReconnectDelay
    long getReconnectDelayMax() -> getReconnectDelayMax
    boolean isRandomizeReconnectDelay() -> isRandomizeReconnectDelay
    void setRandomizeReconnectDelay(boolean) -> setRandomizeReconnectDelay
    void setReconnectDelay(long) -> setReconnectDelay
    void setReconnectDelayMax(long) -> setReconnectDelayMax
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    boolean mLookForRtl -> mLookForRtl
    void <init>(boolean) -> <init>
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <clinit>() -> <clinit>
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.koushikdutta.async.PushParser$8 -> com.koushikdutta.async.PushParser$8:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser) -> <init>
    void parsed(byte[]) -> parsed
    void parsed(java.lang.Object) -> parsed
com.koushikdutta.async.parser.JSONArrayParser$1 -> com.koushikdutta.async.parser.JSONArrayParser$1:
    com.koushikdutta.async.parser.JSONArrayParser this$0 -> this$0
    void <init>(com.koushikdutta.async.parser.JSONArrayParser) -> <init>
    void transform(java.lang.String) -> transform
    void transform(java.lang.Object) -> transform
com.koushikdutta.ion.Ion$2 -> com.koushikdutta.ion.Ion$2:
    com.koushikdutta.ion.Ion this$0 -> this$0
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    void run() -> run
com.aokp.romcontrol.R$mipmap -> com.aokp.romcontrol.R$mipmap:
    int ic_launcher -> ic_launcher
    void <init>() -> <init>
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void <init>(java.lang.Object) -> <init>
    void fastForward() -> fastForward
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
com.koushikdutta.async.http.SSLEngineSNIConfigurator$EngineHolder -> com.koushikdutta.async.http.SSLEngineSNIConfigurator$EngineHolder:
    java.lang.reflect.Field peerHost -> peerHost
    java.lang.reflect.Field peerPort -> peerPort
    java.lang.reflect.Field sslParameters -> sslParameters
    java.lang.reflect.Field useSni -> useSni
    void <init>(java.lang.Class) -> <init>
    void configureEngine(javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> configureEngine
com.koushikdutta.async.http.server.AsyncHttpServer$6$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$6$1:
    com.koushikdutta.async.http.server.AsyncHttpServer$6 this$1 -> this$1
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$6) -> <init>
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
com.koushikdutta.ion.IonRequestBuilder$1 -> com.koushikdutta.ion.IonRequestBuilder$1:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform val$future -> val$future
    java.lang.Exception val$ex -> val$ex
    java.lang.Object val$value -> val$value
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,java.lang.Exception,java.lang.Object) -> <init>
    void run() -> run
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    void <init>() -> <init>
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.koushikdutta.async.http.spdy.Huffman -> com.koushikdutta.async.http.spdy.Huffman:
    int[] CODES -> CODES
    byte[] CODE_LENGTHS -> CODE_LENGTHS
    com.koushikdutta.async.http.spdy.Huffman INSTANCE -> INSTANCE
    com.koushikdutta.async.http.spdy.Huffman$Node root -> root
    void <init>() -> <init>
    void addCode(int,int,byte) -> addCode
    void buildTree() -> buildTree
    byte[] decode(byte[]) -> decode
    void encode(byte[],java.io.OutputStream) -> encode
    int encodedLength(byte[]) -> encodedLength
    com.koushikdutta.async.http.spdy.Huffman get() -> get
    void <clinit>() -> <clinit>
com.google.android.apps.dashclock.ui.DragGripView -> com.google.android.apps.dashclock.ui.DragGripView:
    int[] ATTRS -> ATTRS
    int HORIZ_RIDGES -> HORIZ_RIDGES
    int mColor -> mColor
    int mGravity -> mGravity
    int mHeight -> mHeight
    float mRidgeGap -> mRidgeGap
    android.graphics.Paint mRidgePaint -> mRidgePaint
    float mRidgeSize -> mRidgeSize
    int mWidth -> mWidth
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void <clinit>() -> <clinit>
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.koushikdutta.async.http.spdy.ByteString -> com.koushikdutta.async.http.spdy.ByteString:
    com.koushikdutta.async.http.spdy.ByteString EMPTY -> EMPTY
    char[] HEX_DIGITS -> HEX_DIGITS
    byte[] data -> data
    int hashCode -> hashCode
    long serialVersionUID -> serialVersionUID
    java.lang.String utf8 -> utf8
    java.lang.String utf8() -> utf8
    com.koushikdutta.async.http.spdy.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(byte[]) -> <init>
    java.lang.String base64() -> base64
    com.koushikdutta.async.http.spdy.ByteString decodeBase64(java.lang.String) -> decodeBase64
    com.koushikdutta.async.http.spdy.ByteString decodeHex(java.lang.String) -> decodeHex
    int decodeHexDigit(char) -> decodeHexDigit
    byte getByte(int) -> getByte
    java.lang.String hex() -> hex
    com.koushikdutta.async.http.spdy.ByteString of(byte[]) -> of
    com.koushikdutta.async.http.spdy.ByteString of(byte[],int,int) -> of
    com.koushikdutta.async.http.spdy.ByteString read(java.io.InputStream,int) -> read
    void readObject(java.io.ObjectInputStream) -> readObject
    com.koushikdutta.async.http.spdy.ByteString toAsciiLowercase() -> toAsciiLowercase
    com.koushikdutta.async.http.spdy.ByteString toAsciiUppercase() -> toAsciiUppercase
    byte[] toByteArray() -> toByteArray
    java.lang.String toString() -> toString
    void write(java.io.OutputStream) -> write
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
com.koushikdutta.async.http.socketio.SocketIOConnection$13 -> com.koushikdutta.async.http.socketio.SocketIOConnection$13:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void onStringAvailable(java.lang.String) -> onStringAvailable
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void <init>(com.google.gson.TypeAdapter) -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.http.spdy.SpdyMiddleware$5 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$5:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData val$data -> val$data
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> <init>
    void transform(java.util.List) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1 -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1:
    android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat this$1 -> this$1
    android.support.v4.animation.AnimatorUpdateListenerCompat val$animatorUpdateListener -> val$animatorUpdateListener
    void <init>(android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat,android.support.v4.animation.AnimatorUpdateListenerCompat) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.koushikdutta.async.http.server.AsyncHttpServer$5 -> com.koushikdutta.async.http.server.AsyncHttpServer$5:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    android.content.Context val$_context -> val$_context
    java.lang.String val$assetPath -> val$assetPath
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer,android.content.Context,java.lang.String) -> <init>
    void onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl:
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    boolean mShouldRunOnHWLayer -> mShouldRunOnHWLayer
    android.view.View mView -> mView
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void <init>(android.view.View,android.view.animation.Animation) -> <init>
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    android.view.View -get0(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> -get0
com.koushikdutta.ion.LoadBitmapRegion -> com.koushikdutta.ion.LoadBitmapRegion:
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,android.graphics.BitmapRegionDecoder,android.graphics.Rect,int) -> <init>
android.support.annotation.RequiresPermission$Read -> android.support.annotation.RequiresPermission$Read:
    android.support.annotation.RequiresPermission value() -> value
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
com.koushikdutta.ion.loader.MtpConstants -> com.koushikdutta.ion.loader.MtpConstants:
    int ASSOCIATION_TYPE_GENERIC_FOLDER -> ASSOCIATION_TYPE_GENERIC_FOLDER
    int DEVICE_PROPERTY_ARTIST -> DEVICE_PROPERTY_ARTIST
    int DEVICE_PROPERTY_BATTERY_LEVEL -> DEVICE_PROPERTY_BATTERY_LEVEL
    int DEVICE_PROPERTY_BURST_INTERVAL -> DEVICE_PROPERTY_BURST_INTERVAL
    int DEVICE_PROPERTY_BURST_NUMBER -> DEVICE_PROPERTY_BURST_NUMBER
    int DEVICE_PROPERTY_CAPTURE_DELAY -> DEVICE_PROPERTY_CAPTURE_DELAY
    int DEVICE_PROPERTY_COMPRESSION_SETTING -> DEVICE_PROPERTY_COMPRESSION_SETTING
    int DEVICE_PROPERTY_CONTRAST -> DEVICE_PROPERTY_CONTRAST
    int DEVICE_PROPERTY_COPYRIGHT_INFO -> DEVICE_PROPERTY_COPYRIGHT_INFO
    int DEVICE_PROPERTY_DATETIME -> DEVICE_PROPERTY_DATETIME
    int DEVICE_PROPERTY_DEVICE_FRIENDLY_NAME -> DEVICE_PROPERTY_DEVICE_FRIENDLY_NAME
    int DEVICE_PROPERTY_DEVICE_ICON -> DEVICE_PROPERTY_DEVICE_ICON
    int DEVICE_PROPERTY_DIGITAL_ZOOM -> DEVICE_PROPERTY_DIGITAL_ZOOM
    int DEVICE_PROPERTY_EFFECT_MODE -> DEVICE_PROPERTY_EFFECT_MODE
    int DEVICE_PROPERTY_EXPOSURE_BIAS_COMPENSATION -> DEVICE_PROPERTY_EXPOSURE_BIAS_COMPENSATION
    int DEVICE_PROPERTY_EXPOSURE_INDEX -> DEVICE_PROPERTY_EXPOSURE_INDEX
    int DEVICE_PROPERTY_EXPOSURE_METERING_MODE -> DEVICE_PROPERTY_EXPOSURE_METERING_MODE
    int DEVICE_PROPERTY_EXPOSURE_PROGRAM_MODE -> DEVICE_PROPERTY_EXPOSURE_PROGRAM_MODE
    int DEVICE_PROPERTY_EXPOSURE_TIME -> DEVICE_PROPERTY_EXPOSURE_TIME
    int DEVICE_PROPERTY_FLASH_MODE -> DEVICE_PROPERTY_FLASH_MODE
    int DEVICE_PROPERTY_FOCAL_LENGTH -> DEVICE_PROPERTY_FOCAL_LENGTH
    int DEVICE_PROPERTY_FOCUS_DISTANCE -> DEVICE_PROPERTY_FOCUS_DISTANCE
    int DEVICE_PROPERTY_FOCUS_METERING_MODE -> DEVICE_PROPERTY_FOCUS_METERING_MODE
    int DEVICE_PROPERTY_FOCUS_MODE -> DEVICE_PROPERTY_FOCUS_MODE
    int DEVICE_PROPERTY_FUNCTIONAL_MODE -> DEVICE_PROPERTY_FUNCTIONAL_MODE
    int DEVICE_PROPERTY_F_NUMBER -> DEVICE_PROPERTY_F_NUMBER
    int DEVICE_PROPERTY_IMAGE_SIZE -> DEVICE_PROPERTY_IMAGE_SIZE
    int DEVICE_PROPERTY_PERCEIVED_DEVICE_TYPE -> DEVICE_PROPERTY_PERCEIVED_DEVICE_TYPE
    int DEVICE_PROPERTY_PLAYBACK_CONTAINER_INDEX -> DEVICE_PROPERTY_PLAYBACK_CONTAINER_INDEX
    int DEVICE_PROPERTY_PLAYBACK_OBJECT -> DEVICE_PROPERTY_PLAYBACK_OBJECT
    int DEVICE_PROPERTY_PLAYBACK_RATE -> DEVICE_PROPERTY_PLAYBACK_RATE
    int DEVICE_PROPERTY_RGB_GAIN -> DEVICE_PROPERTY_RGB_GAIN
    int DEVICE_PROPERTY_SESSION_INITIATOR_VERSION_INFO -> DEVICE_PROPERTY_SESSION_INITIATOR_VERSION_INFO
    int DEVICE_PROPERTY_SHARPNESS -> DEVICE_PROPERTY_SHARPNESS
    int DEVICE_PROPERTY_STILL_CAPTURE_MODE -> DEVICE_PROPERTY_STILL_CAPTURE_MODE
    int DEVICE_PROPERTY_SUPPORTED_FORMATS_ORDERED -> DEVICE_PROPERTY_SUPPORTED_FORMATS_ORDERED
    int DEVICE_PROPERTY_SYNCHRONIZATION_PARTNER -> DEVICE_PROPERTY_SYNCHRONIZATION_PARTNER
    int DEVICE_PROPERTY_TIMELAPSE_INTERVAL -> DEVICE_PROPERTY_TIMELAPSE_INTERVAL
    int DEVICE_PROPERTY_TIMELAPSE_NUMBER -> DEVICE_PROPERTY_TIMELAPSE_NUMBER
    int DEVICE_PROPERTY_UNDEFINED -> DEVICE_PROPERTY_UNDEFINED
    int DEVICE_PROPERTY_UPLOAD_URL -> DEVICE_PROPERTY_UPLOAD_URL
    int DEVICE_PROPERTY_VOLUME -> DEVICE_PROPERTY_VOLUME
    int DEVICE_PROPERTY_WHITE_BALANCE -> DEVICE_PROPERTY_WHITE_BALANCE
    int FORMAT_3GP_CONTAINER -> FORMAT_3GP_CONTAINER
    int FORMAT_AAC -> FORMAT_AAC
    int FORMAT_ABSTRACT_AUDIO_ALBUM -> FORMAT_ABSTRACT_AUDIO_ALBUM
    int FORMAT_ABSTRACT_AUDIO_PLAYLIST -> FORMAT_ABSTRACT_AUDIO_PLAYLIST
    int FORMAT_ABSTRACT_AV_PLAYLIST -> FORMAT_ABSTRACT_AV_PLAYLIST
    int FORMAT_ABSTRACT_DOCUMENT -> FORMAT_ABSTRACT_DOCUMENT
    int FORMAT_ABSTRACT_IMAGE_ALBUM -> FORMAT_ABSTRACT_IMAGE_ALBUM
    int FORMAT_ABSTRACT_MEDIACAST -> FORMAT_ABSTRACT_MEDIACAST
    int FORMAT_ABSTRACT_MULTIMEDIA_ALBUM -> FORMAT_ABSTRACT_MULTIMEDIA_ALBUM
    int FORMAT_ABSTRACT_VIDEO_ALBUM -> FORMAT_ABSTRACT_VIDEO_ALBUM
    int FORMAT_ABSTRACT_VIDEO_PLAYLIST -> FORMAT_ABSTRACT_VIDEO_PLAYLIST
    int FORMAT_AIFF -> FORMAT_AIFF
    int FORMAT_ASF -> FORMAT_ASF
    int FORMAT_ASSOCIATION -> FORMAT_ASSOCIATION
    int FORMAT_ASX_PLAYLIST -> FORMAT_ASX_PLAYLIST
    int FORMAT_AUDIBLE -> FORMAT_AUDIBLE
    int FORMAT_AVI -> FORMAT_AVI
    int FORMAT_BMP -> FORMAT_BMP
    int FORMAT_DPOF -> FORMAT_DPOF
    int FORMAT_EXECUTABLE -> FORMAT_EXECUTABLE
    int FORMAT_EXIF_JPEG -> FORMAT_EXIF_JPEG
    int FORMAT_FLAC -> FORMAT_FLAC
    int FORMAT_GIF -> FORMAT_GIF
    int FORMAT_HTML -> FORMAT_HTML
    int FORMAT_JFIF -> FORMAT_JFIF
    int FORMAT_JP2 -> FORMAT_JP2
    int FORMAT_JPX -> FORMAT_JPX
    int FORMAT_M3U_PLAYLIST -> FORMAT_M3U_PLAYLIST
    int FORMAT_MP2 -> FORMAT_MP2
    int FORMAT_MP3 -> FORMAT_MP3
    int FORMAT_MP4_CONTAINER -> FORMAT_MP4_CONTAINER
    int FORMAT_MPEG -> FORMAT_MPEG
    int FORMAT_MPL_PLAYLIST -> FORMAT_MPL_PLAYLIST
    int FORMAT_MS_EXCEL_SPREADSHEET -> FORMAT_MS_EXCEL_SPREADSHEET
    int FORMAT_MS_POWERPOINT_PRESENTATION -> FORMAT_MS_POWERPOINT_PRESENTATION
    int FORMAT_MS_WORD_DOCUMENT -> FORMAT_MS_WORD_DOCUMENT
    int FORMAT_OGG -> FORMAT_OGG
    int FORMAT_PICT -> FORMAT_PICT
    int FORMAT_PLS_PLAYLIST -> FORMAT_PLS_PLAYLIST
    int FORMAT_PNG -> FORMAT_PNG
    int FORMAT_SCRIPT -> FORMAT_SCRIPT
    int FORMAT_TEXT -> FORMAT_TEXT
    int FORMAT_TIFF -> FORMAT_TIFF
    int FORMAT_TIFF_EP -> FORMAT_TIFF_EP
    int FORMAT_UNDEFINED -> FORMAT_UNDEFINED
    int FORMAT_UNDEFINED_AUDIO -> FORMAT_UNDEFINED_AUDIO
    int FORMAT_UNDEFINED_COLLECTION -> FORMAT_UNDEFINED_COLLECTION
    int FORMAT_UNDEFINED_DOCUMENT -> FORMAT_UNDEFINED_DOCUMENT
    int FORMAT_UNDEFINED_FIRMWARE -> FORMAT_UNDEFINED_FIRMWARE
    int FORMAT_UNDEFINED_VIDEO -> FORMAT_UNDEFINED_VIDEO
    int FORMAT_WAV -> FORMAT_WAV
    int FORMAT_WINDOWS_IMAGE_FORMAT -> FORMAT_WINDOWS_IMAGE_FORMAT
    int FORMAT_WMA -> FORMAT_WMA
    int FORMAT_WMV -> FORMAT_WMV
    int FORMAT_WPL_PLAYLIST -> FORMAT_WPL_PLAYLIST
    int FORMAT_XML_DOCUMENT -> FORMAT_XML_DOCUMENT
    int PROPERTY_ALBUM_ARTIST -> PROPERTY_ALBUM_ARTIST
    int PROPERTY_ALBUM_NAME -> PROPERTY_ALBUM_NAME
    int PROPERTY_ALLOWED_FOLDER_CONTENTS -> PROPERTY_ALLOWED_FOLDER_CONTENTS
    int PROPERTY_ARTIST -> PROPERTY_ARTIST
    int PROPERTY_ASSOCIATION_DESC -> PROPERTY_ASSOCIATION_DESC
    int PROPERTY_ASSOCIATION_TYPE -> PROPERTY_ASSOCIATION_TYPE
    int PROPERTY_AUDIO_BITRATE -> PROPERTY_AUDIO_BITRATE
    int PROPERTY_AUDIO_BIT_DEPTH -> PROPERTY_AUDIO_BIT_DEPTH
    int PROPERTY_AUDIO_WAVE_CODEC -> PROPERTY_AUDIO_WAVE_CODEC
    int PROPERTY_BITRATE_TYPE -> PROPERTY_BITRATE_TYPE
    int PROPERTY_BUFFER_SIZE -> PROPERTY_BUFFER_SIZE
    int PROPERTY_COMPOSER -> PROPERTY_COMPOSER
    int PROPERTY_COPYRIGHT_INFORMATION -> PROPERTY_COPYRIGHT_INFORMATION
    int PROPERTY_CORRUPT_UNPLAYABLE -> PROPERTY_CORRUPT_UNPLAYABLE
    int PROPERTY_CREATED_BY -> PROPERTY_CREATED_BY
    int PROPERTY_CREDITS -> PROPERTY_CREDITS
    int PROPERTY_DATE_ADDED -> PROPERTY_DATE_ADDED
    int PROPERTY_DATE_AUTHORED -> PROPERTY_DATE_AUTHORED
    int PROPERTY_DATE_CREATED -> PROPERTY_DATE_CREATED
    int PROPERTY_DATE_MODIFIED -> PROPERTY_DATE_MODIFIED
    int PROPERTY_DESCRIPTION -> PROPERTY_DESCRIPTION
    int PROPERTY_DISPLAY_NAME -> PROPERTY_DISPLAY_NAME
    int PROPERTY_DRM_STATUS -> PROPERTY_DRM_STATUS
    int PROPERTY_DURATION -> PROPERTY_DURATION
    int PROPERTY_EFFECTIVE_RATING -> PROPERTY_EFFECTIVE_RATING
    int PROPERTY_ENCODING_PROFILE -> PROPERTY_ENCODING_PROFILE
    int PROPERTY_ENCODING_QUALITY -> PROPERTY_ENCODING_QUALITY
    int PROPERTY_EXPOSURE_INDEX -> PROPERTY_EXPOSURE_INDEX
    int PROPERTY_EXPOSURE_TIME -> PROPERTY_EXPOSURE_TIME
    int PROPERTY_FRAMES_PER_THOUSAND_SECONDS -> PROPERTY_FRAMES_PER_THOUSAND_SECONDS
    int PROPERTY_F_NUMBER -> PROPERTY_F_NUMBER
    int PROPERTY_GENRE -> PROPERTY_GENRE
    int PROPERTY_HEIGHT -> PROPERTY_HEIGHT
    int PROPERTY_HIDDEN -> PROPERTY_HIDDEN
    int PROPERTY_IMAGE_BIT_DEPTH -> PROPERTY_IMAGE_BIT_DEPTH
    int PROPERTY_IS_COLOUR_CORRECTED -> PROPERTY_IS_COLOUR_CORRECTED
    int PROPERTY_IS_CROPPED -> PROPERTY_IS_CROPPED
    int PROPERTY_KEYFRAME_DISTANCE -> PROPERTY_KEYFRAME_DISTANCE
    int PROPERTY_KEYWORDS -> PROPERTY_KEYWORDS
    int PROPERTY_LANGUAGE_LOCALE -> PROPERTY_LANGUAGE_LOCALE
    int PROPERTY_LAST_ACCESSED -> PROPERTY_LAST_ACCESSED
    int PROPERTY_LYRICS -> PROPERTY_LYRICS
    int PROPERTY_META_GENRE -> PROPERTY_META_GENRE
    int PROPERTY_MOOD -> PROPERTY_MOOD
    int PROPERTY_NAME -> PROPERTY_NAME
    int PROPERTY_NON_CONSUMABLE -> PROPERTY_NON_CONSUMABLE
    int PROPERTY_NUMBER_OF_CHANNELS -> PROPERTY_NUMBER_OF_CHANNELS
    int PROPERTY_OBJECT_FILE_NAME -> PROPERTY_OBJECT_FILE_NAME
    int PROPERTY_OBJECT_FORMAT -> PROPERTY_OBJECT_FORMAT
    int PROPERTY_OBJECT_SIZE -> PROPERTY_OBJECT_SIZE
    int PROPERTY_ORIGINAL_RELEASE_DATE -> PROPERTY_ORIGINAL_RELEASE_DATE
    int PROPERTY_ORIGIN_LOCATION -> PROPERTY_ORIGIN_LOCATION
    int PROPERTY_PARENTAL_RATING -> PROPERTY_PARENTAL_RATING
    int PROPERTY_PARENT_OBJECT -> PROPERTY_PARENT_OBJECT
    int PROPERTY_PERSISTENT_UID -> PROPERTY_PERSISTENT_UID
    int PROPERTY_PRODUCED_BY -> PROPERTY_PRODUCED_BY
    int PROPERTY_PRODUCER_SERIAL_NUMBER -> PROPERTY_PRODUCER_SERIAL_NUMBER
    int PROPERTY_PROPERTY_BAG -> PROPERTY_PROPERTY_BAG
    int PROPERTY_PROTECTION_STATUS -> PROPERTY_PROTECTION_STATUS
    int PROPERTY_RATING -> PROPERTY_RATING
    int PROPERTY_REPRESENTATIVE_SAMPLE_DATA -> PROPERTY_REPRESENTATIVE_SAMPLE_DATA
    int PROPERTY_REPRESENTATIVE_SAMPLE_DURATION -> PROPERTY_REPRESENTATIVE_SAMPLE_DURATION
    int PROPERTY_REPRESENTATIVE_SAMPLE_FORMAT -> PROPERTY_REPRESENTATIVE_SAMPLE_FORMAT
    int PROPERTY_REPRESENTATIVE_SAMPLE_HEIGHT -> PROPERTY_REPRESENTATIVE_SAMPLE_HEIGHT
    int PROPERTY_REPRESENTATIVE_SAMPLE_SIZE -> PROPERTY_REPRESENTATIVE_SAMPLE_SIZE
    int PROPERTY_REPRESENTATIVE_SAMPLE_WIDTH -> PROPERTY_REPRESENTATIVE_SAMPLE_WIDTH
    int PROPERTY_SAMPLE_RATE -> PROPERTY_SAMPLE_RATE
    int PROPERTY_SCAN_TYPE -> PROPERTY_SCAN_TYPE
    int PROPERTY_SKIP_COUNT -> PROPERTY_SKIP_COUNT
    int PROPERTY_SOURCE -> PROPERTY_SOURCE
    int PROPERTY_STORAGE_ID -> PROPERTY_STORAGE_ID
    int PROPERTY_SUBSCRIPTION_CONTENT_ID -> PROPERTY_SUBSCRIPTION_CONTENT_ID
    int PROPERTY_SUBTITLE -> PROPERTY_SUBTITLE
    int PROPERTY_SUB_DESCRIPTION -> PROPERTY_SUB_DESCRIPTION
    int PROPERTY_SYNC_ID -> PROPERTY_SYNC_ID
    int PROPERTY_SYSTEM_OBJECT -> PROPERTY_SYSTEM_OBJECT
    int PROPERTY_TOTAL_BITRATE -> PROPERTY_TOTAL_BITRATE
    int PROPERTY_TRACK -> PROPERTY_TRACK
    int PROPERTY_URL_REFERENCE -> PROPERTY_URL_REFERENCE
    int PROPERTY_USE_COUNT -> PROPERTY_USE_COUNT
    int PROPERTY_VIDEO_BITRATE -> PROPERTY_VIDEO_BITRATE
    int PROPERTY_VIDEO_FOURCC_CODEC -> PROPERTY_VIDEO_FOURCC_CODEC
    int PROPERTY_WIDTH -> PROPERTY_WIDTH
    int PROTECTION_STATUS_NONE -> PROTECTION_STATUS_NONE
    int PROTECTION_STATUS_NON_TRANSFERABLE_DATA -> PROTECTION_STATUS_NON_TRANSFERABLE_DATA
    int PROTECTION_STATUS_READ_ONLY -> PROTECTION_STATUS_READ_ONLY
    int PROTECTION_STATUS_READ_ONLY_DATA -> PROTECTION_STATUS_READ_ONLY_DATA
    int RESPONSE_ACCESS_DENIED -> RESPONSE_ACCESS_DENIED
    int RESPONSE_CAPTURE_ALREADY_TERMINATED -> RESPONSE_CAPTURE_ALREADY_TERMINATED
    int RESPONSE_DEVICE_BUSY -> RESPONSE_DEVICE_BUSY
    int RESPONSE_DEVICE_PROP_NOT_SUPPORTED -> RESPONSE_DEVICE_PROP_NOT_SUPPORTED
    int RESPONSE_GENERAL_ERROR -> RESPONSE_GENERAL_ERROR
    int RESPONSE_GROUP_NOT_SUPPORTED -> RESPONSE_GROUP_NOT_SUPPORTED
    int RESPONSE_INCOMPLETE_TRANSFER -> RESPONSE_INCOMPLETE_TRANSFER
    int RESPONSE_INVALID_CODE_FORMAT -> RESPONSE_INVALID_CODE_FORMAT
    int RESPONSE_INVALID_DATASET -> RESPONSE_INVALID_DATASET
    int RESPONSE_INVALID_DEVICE_PROP_FORMAT -> RESPONSE_INVALID_DEVICE_PROP_FORMAT
    int RESPONSE_INVALID_DEVICE_PROP_VALUE -> RESPONSE_INVALID_DEVICE_PROP_VALUE
    int RESPONSE_INVALID_OBJECT_FORMAT_CODE -> RESPONSE_INVALID_OBJECT_FORMAT_CODE
    int RESPONSE_INVALID_OBJECT_HANDLE -> RESPONSE_INVALID_OBJECT_HANDLE
    int RESPONSE_INVALID_OBJECT_PROP_CODE -> RESPONSE_INVALID_OBJECT_PROP_CODE
    int RESPONSE_INVALID_OBJECT_PROP_FORMAT -> RESPONSE_INVALID_OBJECT_PROP_FORMAT
    int RESPONSE_INVALID_OBJECT_PROP_VALUE -> RESPONSE_INVALID_OBJECT_PROP_VALUE
    int RESPONSE_INVALID_OBJECT_REFERENCE -> RESPONSE_INVALID_OBJECT_REFERENCE
    int RESPONSE_INVALID_PARAMETER -> RESPONSE_INVALID_PARAMETER
    int RESPONSE_INVALID_PARENT_OBJECT -> RESPONSE_INVALID_PARENT_OBJECT
    int RESPONSE_INVALID_STORAGE_ID -> RESPONSE_INVALID_STORAGE_ID
    int RESPONSE_INVALID_TRANSACTION_ID -> RESPONSE_INVALID_TRANSACTION_ID
    int RESPONSE_NO_THUMBNAIL_PRESENT -> RESPONSE_NO_THUMBNAIL_PRESENT
    int RESPONSE_NO_VALID_OBJECT_INFO -> RESPONSE_NO_VALID_OBJECT_INFO
    int RESPONSE_OBJECT_PROP_NOT_SUPPORTED -> RESPONSE_OBJECT_PROP_NOT_SUPPORTED
    int RESPONSE_OBJECT_TOO_LARGE -> RESPONSE_OBJECT_TOO_LARGE
    int RESPONSE_OBJECT_WRITE_PROTECTED -> RESPONSE_OBJECT_WRITE_PROTECTED
    int RESPONSE_OK -> RESPONSE_OK
    int RESPONSE_OPERATION_NOT_SUPPORTED -> RESPONSE_OPERATION_NOT_SUPPORTED
    int RESPONSE_PARAMETER_NOT_SUPPORTED -> RESPONSE_PARAMETER_NOT_SUPPORTED
    int RESPONSE_PARTIAL_DELETION -> RESPONSE_PARTIAL_DELETION
    int RESPONSE_SELF_TEST_FAILED -> RESPONSE_SELF_TEST_FAILED
    int RESPONSE_SESSION_ALREADY_OPEN -> RESPONSE_SESSION_ALREADY_OPEN
    int RESPONSE_SESSION_NOT_OPEN -> RESPONSE_SESSION_NOT_OPEN
    int RESPONSE_SPECIFICATION_BY_DEPTH_UNSUPPORTED -> RESPONSE_SPECIFICATION_BY_DEPTH_UNSUPPORTED
    int RESPONSE_SPECIFICATION_BY_FORMAT_UNSUPPORTED -> RESPONSE_SPECIFICATION_BY_FORMAT_UNSUPPORTED
    int RESPONSE_SPECIFICATION_BY_GROUP_UNSUPPORTED -> RESPONSE_SPECIFICATION_BY_GROUP_UNSUPPORTED
    int RESPONSE_SPECIFICATION_OF_DESTINATION_UNSUPPORTED -> RESPONSE_SPECIFICATION_OF_DESTINATION_UNSUPPORTED
    int RESPONSE_STORAGE_FULL -> RESPONSE_STORAGE_FULL
    int RESPONSE_STORE_NOT_AVAILABLE -> RESPONSE_STORE_NOT_AVAILABLE
    int RESPONSE_STORE_READ_ONLY -> RESPONSE_STORE_READ_ONLY
    int RESPONSE_TRANSACTION_CANCELLED -> RESPONSE_TRANSACTION_CANCELLED
    int RESPONSE_UNDEFINED -> RESPONSE_UNDEFINED
    int RESPONSE_UNKNOWN_VENDOR_CODE -> RESPONSE_UNKNOWN_VENDOR_CODE
    int TYPE_AINT128 -> TYPE_AINT128
    int TYPE_AINT16 -> TYPE_AINT16
    int TYPE_AINT32 -> TYPE_AINT32
    int TYPE_AINT64 -> TYPE_AINT64
    int TYPE_AINT8 -> TYPE_AINT8
    int TYPE_AUINT128 -> TYPE_AUINT128
    int TYPE_AUINT16 -> TYPE_AUINT16
    int TYPE_AUINT32 -> TYPE_AUINT32
    int TYPE_AUINT64 -> TYPE_AUINT64
    int TYPE_AUINT8 -> TYPE_AUINT8
    int TYPE_INT128 -> TYPE_INT128
    int TYPE_INT16 -> TYPE_INT16
    int TYPE_INT32 -> TYPE_INT32
    int TYPE_INT64 -> TYPE_INT64
    int TYPE_INT8 -> TYPE_INT8
    int TYPE_STR -> TYPE_STR
    int TYPE_UINT128 -> TYPE_UINT128
    int TYPE_UINT16 -> TYPE_UINT16
    int TYPE_UINT32 -> TYPE_UINT32
    int TYPE_UINT64 -> TYPE_UINT64
    int TYPE_UINT8 -> TYPE_UINT8
    int TYPE_UNDEFINED -> TYPE_UNDEFINED
    void <init>() -> <init>
    boolean isAbstractObject(int) -> isAbstractObject
com.koushikdutta.ion.builder.Builders$Any$U -> com.koushikdutta.ion.builder.Builders$Any$U:
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void <init>(android.widget.ListView) -> <init>
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    void scrollTargetBy(int,int) -> scrollTargetBy
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CacheData -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CacheData:
    com.koushikdutta.async.http.cache.ResponseHeaders cachedResponseHeaders -> cachedResponseHeaders
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse candidate -> candidate
    long contentLength -> contentLength
    java.io.FileInputStream[] snapshot -> snapshot
    void <init>() -> <init>
android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator -> android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator:
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.annotation.WorkerThread -> android.support.annotation.WorkerThread:
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    void <init>() -> <init>
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
com.koushikdutta.async.http.spdy.BitArray$FixedCapacity -> com.koushikdutta.async.http.spdy.BitArray$FixedCapacity:
    long data -> data
    void <init>() -> <init>
    com.koushikdutta.async.http.spdy.BitArray toVariableCapacity() -> toVariableCapacity
    int checkInput(int) -> checkInput
    void clear() -> clear
    boolean get(int) -> get
    void set(int) -> set
    void shiftLeft(int) -> shiftLeft
    java.lang.String toString() -> toString
    void toggle(int) -> toggle
com.koushikdutta.async.http.HttpUtil$EndEmitter -> com.koushikdutta.async.http.HttpUtil$EndEmitter:
    com.koushikdutta.async.http.HttpUtil$EndEmitter create(com.koushikdutta.async.AsyncServer,java.lang.Exception) -> create
    void <init>() -> <init>
    void -wrap0(com.koushikdutta.async.http.HttpUtil$EndEmitter,java.lang.Exception) -> -wrap0
com.koushikdutta.ion.IonRequestBuilder$6 -> com.koushikdutta.ion.IonRequestBuilder$6:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform self -> self
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.async.parser.AsyncParser val$parser -> val$parser
    void transform(com.koushikdutta.ion.Loader$LoaderEmitter) -> transform
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder,java.lang.Runnable,com.koushikdutta.async.parser.AsyncParser) -> <init>
android.support.v4.media.MediaMetadataCompat$RatingKey -> android.support.v4.media.MediaMetadataCompat$RatingKey:
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
com.koushikdutta.async.http.body.StreamPart -> com.koushikdutta.async.http.body.StreamPart:
    void <init>(java.lang.String,long,java.util.List) -> <init>
    java.io.InputStream getInputStream() -> getInputStream
    void write(com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    int DRAG_POS_Y -> DRAG_POS_Y
    int DRAG_NEG_Y -> DRAG_NEG_Y
    int DRAG_POS_X -> DRAG_POS_X
    int DRAG_NEG_X -> DRAG_NEG_X
    int DRAGGING -> DRAGGING
    int DROPPING -> DROPPING
    int IDLE -> IDLE
    int NO_CANCEL -> NO_CANCEL
    int ON_INTERCEPT_TOUCH_EVENT -> ON_INTERCEPT_TOUCH_EVENT
    int ON_TOUCH_EVENT -> ON_TOUCH_EVENT
    int REMOVING -> REMOVING
    int STOPPED -> STOPPED
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> mAdapterWrapper
    boolean mAnimate -> mAnimate
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    android.view.MotionEvent mCancelEvent -> mCancelEvent
    int mCancelMethod -> mCancelMethod
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> mChildHeightCache
    float mCurrFloatAlpha -> mCurrFloatAlpha
    int mDownScrollStartY -> mDownScrollStartY
    float mDownScrollStartYF -> mDownScrollStartYF
    int mDragDeltaX -> mDragDeltaX
    int mDragDeltaY -> mDragDeltaY
    float mDragDownScrollHeight -> mDragDownScrollHeight
    float mDragDownScrollStartFrac -> mDragDownScrollStartFrac
    boolean mDragEnabled -> mDragEnabled
    int mDragFlags -> mDragFlags
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> mDragListener
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> mDragScroller
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> mDragSortTracker
    int mDragStartY -> mDragStartY
    int mDragState -> mDragState
    float mDragUpScrollHeight -> mDragUpScrollHeight
    float mDragUpScrollStartFrac -> mDragUpScrollStartFrac
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> mDropAnimator
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> mDropListener
    int mFirstExpPos -> mFirstExpPos
    float mFloatAlpha -> mFloatAlpha
    android.graphics.Point mFloatLoc -> mFloatLoc
    int mFloatPos -> mFloatPos
    android.view.View mFloatView -> mFloatView
    int mFloatViewHeight -> mFloatViewHeight
    int mFloatViewHeightHalf -> mFloatViewHeightHalf
    boolean mFloatViewInvalidated -> mFloatViewInvalidated
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> mFloatViewManager
    int mFloatViewMid -> mFloatViewMid
    boolean mFloatViewOnMeasured -> mFloatViewOnMeasured
    boolean mIgnoreTouchEvent -> mIgnoreTouchEvent
    boolean mInTouchEvent -> mInTouchEvent
    int mItemHeightCollapsed -> mItemHeightCollapsed
    boolean mLastCallWasIntercept -> mLastCallWasIntercept
    int mLastX -> mLastX
    int mLastY -> mLastY
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> mLiftAnimator
    float mMaxScrollSpeed -> mMaxScrollSpeed
    android.database.DataSetObserver mObserver -> mObserver
    int mOffsetX -> mOffsetX
    int mOffsetY -> mOffsetY
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> mRemoveAnimator
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> mRemoveListener
    android.view.View[] mSampleViewTypes -> mSampleViewTypes
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> mScrollProfile
    int mSecondExpPos -> mSecondExpPos
    float mSlideFrac -> mSlideFrac
    float mSlideRegionFrac -> mSlideRegionFrac
    int mSrcPos -> mSrcPos
    android.graphics.Point mTouchLoc -> mTouchLoc
    boolean mTrackDragSort -> mTrackDragSort
    int mUpScrollStartY -> mUpScrollStartY
    float mUpScrollStartYF -> mUpScrollStartYF
    int mWidthMeasureSpec -> mWidthMeasureSpec
    int mX -> mX
    int mY -> mY
    int sCacheSize -> sCacheSize
    boolean stopDrag(boolean) -> stopDrag
    float getFloatAlpha() -> getFloatAlpha
    boolean startDrag(int,int,int,int) -> startDrag
    void setFloatAlpha(float) -> setFloatAlpha
    void removeItem(int) -> removeItem
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void adjustAllItems() -> adjustAllItems
    void adjustItem(int) -> adjustItem
    void adjustItem(int,android.view.View,boolean) -> adjustItem
    void adjustOnReorder() -> adjustOnReorder
    int adjustScroll(int,android.view.View,int,int) -> adjustScroll
    int calcItemHeight(int,int) -> calcItemHeight
    int calcItemHeight(int,android.view.View,boolean) -> calcItemHeight
    void cancelDrag() -> cancelDrag
    void clearPositions() -> clearPositions
    void continueDrag(int,int) -> continueDrag
    void destroyFloatView() -> destroyFloatView
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void doActionUpOrCancel() -> doActionUpOrCancel
    void doDragFloatView(boolean) -> doDragFloatView
    void doDragFloatView(int,android.view.View,boolean) -> doDragFloatView
    void doRemoveItem() -> doRemoveItem
    void doRemoveItem(int) -> doRemoveItem
    void drawDivider(int,android.graphics.Canvas) -> drawDivider
    void dropFloatView() -> dropFloatView
    int getChildHeight(int) -> getChildHeight
    int getChildHeight(int,android.view.View,boolean) -> getChildHeight
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    int getItemHeight(int) -> getItemHeight
    int getShuffleEdge(int,int) -> getShuffleEdge
    void invalidateFloatView() -> invalidateFloatView
    boolean isDragEnabled() -> isDragEnabled
    void layoutChildren() -> layoutChildren
    void measureFloatView() -> measureFloatView
    void measureItem(android.view.View) -> measureItem
    void moveItem(int,int) -> moveItem
    boolean onDragTouchEvent(android.view.MotionEvent) -> onDragTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void printPosData() -> printPosData
    void requestLayout() -> requestLayout
    void saveTouchCoords(android.view.MotionEvent) -> saveTouchCoords
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setDragEnabled(boolean) -> setDragEnabled
    void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> setDragScrollStarts
    void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    boolean startDrag(int,android.view.View,int,int,int) -> startDrag
    void updateFloatView() -> updateFloatView
    boolean updatePositions() -> updatePositions
    void updateScrollStarts() -> updateScrollStarts
    float -get0(com.mobeta.android.dslv.DragSortListView) -> -get0
    int -get1(com.mobeta.android.dslv.DragSortListView) -> -get1
    float -get2(com.mobeta.android.dslv.DragSortListView) -> -get2
    int -get3(com.mobeta.android.dslv.DragSortListView) -> -get3
    float -get4(com.mobeta.android.dslv.DragSortListView) -> -get4
    int -get5(com.mobeta.android.dslv.DragSortListView) -> -get5
    android.graphics.Point -get6(com.mobeta.android.dslv.DragSortListView) -> -get6
    int -get7(com.mobeta.android.dslv.DragSortListView) -> -get7
    int -get8(com.mobeta.android.dslv.DragSortListView) -> -get8
    int -get9(com.mobeta.android.dslv.DragSortListView) -> -get9
    int -get10(com.mobeta.android.dslv.DragSortListView) -> -get10
    int -get11(com.mobeta.android.dslv.DragSortListView) -> -get11
    int -get12(com.mobeta.android.dslv.DragSortListView) -> -get12
    float -get13(com.mobeta.android.dslv.DragSortListView) -> -get13
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile -get14(com.mobeta.android.dslv.DragSortListView) -> -get14
    int -get15(com.mobeta.android.dslv.DragSortListView) -> -get15
    int -get16(com.mobeta.android.dslv.DragSortListView) -> -get16
    float -get17(com.mobeta.android.dslv.DragSortListView) -> -get17
    int -get18(com.mobeta.android.dslv.DragSortListView) -> -get18
    boolean -set0(com.mobeta.android.dslv.DragSortListView,boolean) -> -set0
    int -set1(com.mobeta.android.dslv.DragSortListView,int) -> -set1
    int -set2(com.mobeta.android.dslv.DragSortListView,int) -> -set2
    int -wrap0(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> -wrap0
    int -wrap1(com.mobeta.android.dslv.DragSortListView,int) -> -wrap1
    int -wrap2(com.mobeta.android.dslv.DragSortListView,int) -> -wrap2
    int -wrap3(com.mobeta.android.dslv.DragSortListView,int,int) -> -wrap3
    void -wrap4(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> -wrap4
    void -wrap5(com.mobeta.android.dslv.DragSortListView) -> -wrap5
    void -wrap6(com.mobeta.android.dslv.DragSortListView,boolean) -> -wrap6
    void -wrap7(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> -wrap7
    void -wrap8(com.mobeta.android.dslv.DragSortListView) -> -wrap8
    void -wrap9(com.mobeta.android.dslv.DragSortListView) -> -wrap9
com.koushikdutta.ion.FileCacheStore$1$1 -> com.koushikdutta.ion.FileCacheStore$1$1:
    com.koushikdutta.ion.FileCacheStore$1 this$1 -> this$1
    com.koushikdutta.async.stream.FileDataSink val$sink -> val$sink
    java.io.File val$file -> val$file
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    java.lang.String val$key -> val$key
    java.lang.Object val$value -> val$value
    void <init>(com.koushikdutta.ion.FileCacheStore$1,com.koushikdutta.async.stream.FileDataSink,java.io.File,com.koushikdutta.async.future.SimpleFuture,java.lang.String,java.lang.Object) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v13.app.FragmentCompatICS -> android.support.v13.app.FragmentCompatICS:
    void <init>() -> <init>
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void <init>() -> <init>
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$1 -> this$1
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    void <init>() -> <init>
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
com.koushikdutta.async.ChannelWrapper -> com.koushikdutta.async.ChannelWrapper:
    java.nio.channels.spi.AbstractSelectableChannel mChannel -> mChannel
    void <init>(java.nio.channels.spi.AbstractSelectableChannel) -> <init>
    void close() -> close
    int getLocalPort() -> getLocalPort
    java.lang.Object getSocket() -> getSocket
    boolean isChunked() -> isChunked
    boolean isConnected() -> isConnected
    boolean isOpen() -> isOpen
    java.nio.channels.SelectionKey register(java.nio.channels.Selector) -> register
    java.nio.channels.SelectionKey register(java.nio.channels.Selector,int) -> register
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    int write(java.nio.ByteBuffer) -> write
    int write(java.nio.ByteBuffer[]) -> write
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.DragSortListView$1:
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    float getSpeed(float,long) -> getSpeed
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    void finish(java.lang.Object) -> finish
    boolean isFinished(java.lang.Object) -> isFinished
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onPull(java.lang.Object,float,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    void setSize(java.lang.Object,int,int) -> setSize
android.support.v4.view.ViewCompatJellybeanMr2 -> android.support.v4.view.ViewCompatJellybeanMr2:
    void <init>() -> <init>
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
com.koushikdutta.async.http.AsyncHttpResponse -> com.koushikdutta.async.http.AsyncHttpResponse:
    int code() -> code
    com.koushikdutta.async.http.Headers headers() -> headers
    com.koushikdutta.async.AsyncSocket detachSocket() -> detachSocket
    com.koushikdutta.async.http.AsyncHttpRequest getRequest() -> getRequest
    java.lang.String message() -> message
    java.lang.String protocol() -> protocol
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    java.lang.Object lock -> lock
    com.google.gson.stream.JsonReader parser -> parser
    void <init>(java.lang.String) -> <init>
    void <init>(java.io.Reader) -> <init>
    boolean hasNext() -> hasNext
    com.google.gson.JsonElement next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
com.koushikdutta.ion.builder.Builders$IV -> com.koushikdutta.ion.builder.Builders$IV:
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int mColorMode -> mColorMode
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int mOrientation -> mOrientation
    int mScaleMode -> mScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    void <init>(android.content.Context) -> <init>
    android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> convertBitmapForColorMode
    int getColorMode() -> getColorMode
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    void setScaleMode(int) -> setScaleMode
    java.lang.Object -get0(android.support.v4.print.PrintHelperKitkat) -> -get0
    android.graphics.Bitmap -wrap0(android.support.v4.print.PrintHelperKitkat,android.graphics.Bitmap,int) -> -wrap0
    android.graphics.Bitmap -wrap1(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> -wrap1
    android.graphics.Matrix -wrap2(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> -wrap2
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void <clinit>() -> <clinit>
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> <init>
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1$2 -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1$2:
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1 this$2 -> this$2
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.callback.ConnectCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    void <clinit>() -> <clinit>
    android.support.v4.app.ShareCompat$ShareCompatImpl -get0() -> -get0
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask) -> <init>
    java.lang.Object call() -> call
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.koushikdutta.ion.TransformBitmap$1 -> com.koushikdutta.ion.TransformBitmap$1:
    com.koushikdutta.ion.TransformBitmap this$0 -> this$0
    com.koushikdutta.ion.bitmap.BitmapInfo val$result -> val$result
    void <init>(com.koushikdutta.ion.TransformBitmap,com.koushikdutta.ion.bitmap.BitmapInfo) -> <init>
    void run() -> run
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.DragSortListView$DropAnimator:
    int mDropPos -> mDropPos
    float mInitDeltaX -> mInitDeltaX
    float mInitDeltaY -> mInitDeltaY
    int srcPos -> srcPos
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    int getTargetY() -> getTargetY
    void onStart() -> onStart
    void onStop() -> onStop
    void onUpdate(float,float) -> onUpdate
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    boolean isAvailableOffline() -> isAvailableOffline
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.Object clone() -> clone
com.koushikdutta.ion.HeadersResponse -> com.koushikdutta.ion.HeadersResponse:
    int code -> code
    com.koushikdutta.async.http.Headers headers -> headers
    java.lang.String message -> message
    void <init>(int,java.lang.String,com.koushikdutta.async.http.Headers) -> <init>
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    int code() -> code
    com.koushikdutta.ion.HeadersResponse code(int) -> code
    java.lang.String message() -> message
    com.koushikdutta.ion.HeadersResponse message(java.lang.String) -> message
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    void <init>() -> <init>
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> newInstance
com.koushikdutta.ion.IonDrawable$IonGifDecoder$1 -> com.koushikdutta.ion.IonDrawable$IonGifDecoder$1:
    com.koushikdutta.ion.IonDrawable$IonGifDecoder this$1 -> this$1
    void <init>(com.koushikdutta.ion.IonDrawable$IonGifDecoder) -> <init>
    void run() -> run
com.koushikdutta.ion.bitmap.BitmapInfo -> com.koushikdutta.ion.bitmap.BitmapInfo:
    android.graphics.Bitmap bitmap -> bitmap
    android.graphics.BitmapRegionDecoder decoder -> decoder
    java.io.File decoderFile -> decoderFile
    long drawTime -> drawTime
    java.lang.Exception exception -> exception
    com.koushikdutta.async.util.UntypedHashtable extras -> extras
    com.koushikdutta.ion.gif.GifDecoder gifDecoder -> gifDecoder
    java.lang.String key -> key
    long loadTime -> loadTime
    java.lang.String mimeType -> mimeType
    android.graphics.Point originalSize -> originalSize
    com.koushikdutta.ion.ResponseServedFrom servedFrom -> servedFrom
    void <init>(java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Point) -> <init>
    int sizeOf() -> sizeOf
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
com.koushikdutta.async.BufferedDataSink$3 -> com.koushikdutta.async.BufferedDataSink$3:
    com.koushikdutta.async.BufferedDataSink this$0 -> this$0
    void <init>(com.koushikdutta.async.BufferedDataSink) -> <init>
    void run() -> run
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    com.google.gson.internal.UnsafeAllocator create() -> create
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void <init>() -> <init>
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.DragSortListView$DragListener:
    void drag(int,int) -> drag
com.koushikdutta.async.http.server.AsyncHttpServer$2 -> com.koushikdutta.async.http.server.AsyncHttpServer$2:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    int val$port -> val$port
    javax.net.ssl.SSLContext val$sslContext -> val$sslContext
    void onAccepted(com.koushikdutta.async.AsyncSocket) -> onAccepted
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer,int,javax.net.ssl.SSLContext) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
    void onListening(com.koushikdutta.async.AsyncServerSocket) -> onListening
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
    void <init>() -> <init>
com.koushikdutta.ion.IonRequestBuilder$2 -> com.koushikdutta.ion.IonRequestBuilder$2:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform val$ret -> val$ret
    boolean -assertionsDisabled -> -assertionsDisabled
    void onProgress(long,long) -> onProgress
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    void <init>() -> <init>
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
com.koushikdutta.async.util.FileCache$InternalCache -> com.koushikdutta.async.util.FileCache$InternalCache:
    com.koushikdutta.async.util.FileCache this$0 -> this$0
    void <init>(com.koushikdutta.async.util.FileCache) -> <init>
    void entryRemoved(boolean,java.lang.String,com.koushikdutta.async.util.FileCache$CacheEntry,com.koushikdutta.async.util.FileCache$CacheEntry) -> entryRemoved
    long sizeOf(java.lang.String,com.koushikdutta.async.util.FileCache$CacheEntry) -> sizeOf
    long sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.koushikdutta.async.AsyncServer$13 -> com.koushikdutta.async.AsyncServer$13:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.SelectorWrapper val$selector -> val$selector
    java.util.PriorityQueue val$queue -> val$queue
    void <init>(com.koushikdutta.async.AsyncServer,java.lang.String,com.koushikdutta.async.SelectorWrapper,java.util.PriorityQueue) -> <init>
    void run() -> run
com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback -> com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback:
    void onHandshakeCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> onHandshakeCompleted
com.koushikdutta.async.stream.InputStreamDataEmitter -> com.koushikdutta.async.stream.InputStreamDataEmitter:
    com.koushikdutta.async.callback.DataCallback callback -> callback
    com.koushikdutta.async.callback.CompletedCallback endCallback -> endCallback
    java.io.InputStream inputStream -> inputStream
    int mToAlloc -> mToAlloc
    boolean paused -> paused
    com.koushikdutta.async.ByteBufferList pending -> pending
    java.lang.Runnable pumper -> pumper
    com.koushikdutta.async.AsyncServer server -> server
    void report(java.lang.Exception) -> report
    void <init>(com.koushikdutta.async.AsyncServer,java.io.InputStream) -> <init>
    java.lang.String charset() -> charset
    void close() -> close
    void doResume() -> doResume
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    boolean isChunked() -> isChunked
    boolean isPaused() -> isPaused
    void pause() -> pause
    void resume() -> resume
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    void -wrap0(com.koushikdutta.async.stream.InputStreamDataEmitter,java.lang.Exception) -> -wrap0
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    long mActions -> mActions
    long mActiveItemId -> mActiveItemId
    long mBufferedPosition -> mBufferedPosition
    java.util.List mCustomActions -> mCustomActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    android.os.Bundle mExtras -> mExtras
    long mPosition -> mPosition
    float mRate -> mRate
    int mState -> mState
    long mUpdateTime -> mUpdateTime
    void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
    android.support.v4.media.session.PlaybackStateCompat build() -> build
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
com.koushikdutta.ion.builder.Builders$Any$B -> com.koushikdutta.ion.builder.Builders$Any$B:
android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1 -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1:
    android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator this$1 -> this$1
    void <init>(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> <init>
    void run() -> run
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    void <init>(android.support.v4.provider.DocumentFile) -> <init>
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    java.lang.String getName() -> getName
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    java.lang.String getType() -> getType
    android.net.Uri getUri() -> getUri
    boolean isDirectory() -> isDirectory
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.FragmentTabHost$SavedState$1:
    void <init>() -> <init>
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.koushikdutta.ion.ContextReference$NormalContextReference -> com.koushikdutta.ion.ContextReference$NormalContextReference:
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> getContext
    java.lang.String isAlive(android.content.Context) -> isAlive
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type upperBound -> upperBound
    void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    boolean equals(java.lang.Object) -> equals
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.koushikdutta.async.future.Future -> com.koushikdutta.async.future.Future:
    com.koushikdutta.async.future.Future setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
    com.koushikdutta.async.future.FutureCallback then(com.koushikdutta.async.future.FutureCallback) -> then
    java.lang.Object tryGet() -> tryGet
    java.lang.Exception tryGetException() -> tryGetException
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
com.koushikdutta.async.AsyncSSLSocketWrapper$4 -> com.koushikdutta.async.AsyncSSLSocketWrapper$4:
    com.koushikdutta.async.AsyncSSLSocketWrapper this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncSSLSocketWrapper) -> <init>
    void onWriteable() -> onWriteable
com.koushikdutta.async.http.body.StringPart -> com.koushikdutta.async.http.body.StringPart:
    java.lang.String value -> value
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.io.InputStream getInputStream() -> getInputStream
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat:
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl IMPL -> IMPL
    int TYPE_ACCESSIBILITY_OVERLAY -> TYPE_ACCESSIBILITY_OVERLAY
    int TYPE_APPLICATION -> TYPE_APPLICATION
    int TYPE_INPUT_METHOD -> TYPE_INPUT_METHOD
    int TYPE_SYSTEM -> TYPE_SYSTEM
    int UNDEFINED -> UNDEFINED
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    boolean equals(java.lang.Object) -> equals
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    int getChildCount() -> getChildCount
    int getId() -> getId
    int getLayer() -> getLayer
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    int getType() -> getType
    int hashCode() -> hashCode
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    boolean isActive() -> isActive
    boolean isFocused() -> isFocused
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    void recycle() -> recycle
    java.lang.String toString() -> toString
    java.lang.String typeToString(int) -> typeToString
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    void <clinit>() -> <clinit>
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void <clinit>() -> <clinit>
com.koushikdutta.async.future.Continuation$1 -> com.koushikdutta.async.future.Continuation$1:
    com.koushikdutta.async.future.Continuation this$0 -> this$0
    com.koushikdutta.async.future.Cancellable val$cancel -> val$cancel
    void <init>(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.future.Cancellable) -> <init>
    void run() -> run
com.koushikdutta.ion.ContextReference$ImageViewContextReference -> com.koushikdutta.ion.ContextReference$ImageViewContextReference:
    java.lang.String isAlive() -> isAlive
    void <init>(android.widget.ImageView) -> <init>
    android.content.Context getContext() -> getContext
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    void <init>(java.lang.String) -> <init>
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
com.koushikdutta.ion.gson.GsonSerializer -> com.koushikdutta.ion.gson.GsonSerializer:
    com.google.gson.Gson gson -> gson
    java.lang.reflect.Type type -> type
    void <init>(com.google.gson.Gson,java.lang.Class) -> <init>
    void <init>(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$enteringViews -> val$enteringViews
    void <init>(android.view.View,android.transition.Transition,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,java.util.ArrayList) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void <init>() -> <init>
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    boolean isIconified(android.view.View) -> isIconified
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setIconified(android.view.View,boolean) -> setIconified
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
com.koushikdutta.ion.builder.Builders$Any$BF -> com.koushikdutta.ion.builder.Builders$Any$BF:
com.koushikdutta.async.http.socketio.Acknowledge -> com.koushikdutta.async.http.socketio.Acknowledge:
    void acknowledge(org.json.JSONArray) -> acknowledge
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment) -> <init>
    android.view.View getView() -> getView
com.koushikdutta.ion.builder.Builders$Any -> com.koushikdutta.ion.builder.Builders$Any:
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    void <init>() -> <init>
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean -get0(com.google.gson.internal.bind.MapTypeAdapterFactory) -> -get0
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    void <init>() -> <init>
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
com.koushikdutta.async.http.filter.InflaterInputFilter -> com.koushikdutta.async.http.filter.InflaterInputFilter:
    java.util.zip.Inflater mInflater -> mInflater
    com.koushikdutta.async.ByteBufferList transformed -> transformed
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void <init>(java.util.zip.Inflater) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void report(java.lang.Exception) -> report
    void <clinit>() -> <clinit>
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    int hashCode -> hashCode
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    java.lang.Class getRawType() -> getRawType
    boolean equals(java.lang.Object) -> equals
    java.lang.reflect.Type getType() -> getType
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    void <init>() -> <init>
    void <init>(java.lang.reflect.Type) -> <init>
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    int hashCode() -> hashCode
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    java.lang.String toString() -> toString
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    com.google.gson.internal.Excluder this$0 -> this$0
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    com.google.gson.TypeAdapter delegate() -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1 -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$1:
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl this$0 -> this$0
    boolean val$isChunked -> val$isChunked
    void onCompleted(java.lang.Exception) -> onCompleted
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl,boolean) -> <init>
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void <init>() -> <init>
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerStateChanged(int) -> onDrawerStateChanged
com.koushikdutta.async.stream.InputStreamDataEmitter$1$2 -> com.koushikdutta.async.stream.InputStreamDataEmitter$1$2:
    com.koushikdutta.async.stream.InputStreamDataEmitter$1 this$1 -> this$1
    void <init>(com.koushikdutta.async.stream.InputStreamDataEmitter$1) -> <init>
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
com.koushikdutta.ion.FileCacheStore$2 -> com.koushikdutta.ion.FileCacheStore$2:
    com.koushikdutta.ion.FileCacheStore this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.parser.AsyncParser val$parser -> val$parser
    void <init>(com.koushikdutta.ion.FileCacheStore,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.parser.AsyncParser) -> <init>
    void run() -> run
com.koushikdutta.async.PushParser$6 -> com.koushikdutta.async.PushParser$6:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser) -> <init>
    void parsed(byte[]) -> parsed
    void parsed(java.lang.Object) -> parsed
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    void <init>(android.support.v4.content.Loader) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    void <init>() -> <init>
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    void <init>() -> <init>
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    void finish(java.lang.Object) -> finish
    boolean isFinished(java.lang.Object) -> isFinished
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onPull(java.lang.Object,float,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    void setSize(java.lang.Object,int,int) -> setSize
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    java.util.Map boundFields -> boundFields
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter) -> <init>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl:
    void <init>() -> <init>
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
com.koushikdutta.ion.loader.ContentLoader$1 -> com.koushikdutta.ion.loader.ContentLoader$1:
    com.koushikdutta.ion.loader.ContentLoader this$0 -> this$0
    com.koushikdutta.ion.Ion val$ion -> val$ion
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.ion.loader.InputStreamDataEmitterFuture val$ret -> val$ret
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.loader.ContentLoader,com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.loader.InputStreamDataEmitterFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
    void run() -> run
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$IconTabProvider -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$IconTabProvider:
    int getPageIconResId(int) -> getPageIconResId
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.koushikdutta.async.http.spdy.Header -> com.koushikdutta.async.http.spdy.Header:
    com.koushikdutta.async.http.spdy.ByteString TARGET_METHOD -> TARGET_METHOD
    com.koushikdutta.async.http.spdy.ByteString TARGET_PATH -> TARGET_PATH
    com.koushikdutta.async.http.spdy.ByteString VERSION -> VERSION
    com.koushikdutta.async.http.spdy.ByteString TARGET_HOST -> TARGET_HOST
    com.koushikdutta.async.http.spdy.ByteString TARGET_AUTHORITY -> TARGET_AUTHORITY
    com.koushikdutta.async.http.spdy.ByteString TARGET_SCHEME -> TARGET_SCHEME
    com.koushikdutta.async.http.spdy.ByteString name -> name
    com.koushikdutta.async.http.spdy.ByteString value -> value
    com.koushikdutta.async.http.spdy.ByteString RESPONSE_STATUS -> RESPONSE_STATUS
    int hpackSize -> hpackSize
    void <init>(com.koushikdutta.async.http.spdy.ByteString,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(com.koushikdutta.async.http.spdy.ByteString,com.koushikdutta.async.http.spdy.ByteString) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.HttpTransportMiddleware$1 -> com.koushikdutta.async.http.HttpTransportMiddleware$1:
    com.koushikdutta.async.http.Headers mRawHeaders -> mRawHeaders
    java.lang.String statusLine -> statusLine
    com.koushikdutta.async.http.HttpTransportMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData val$data -> val$data
    void <init>(com.koushikdutta.async.http.HttpTransportMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> <init>
    void onStringAvailable(java.lang.String) -> onStringAvailable
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
com.koushikdutta.async.parser.ByteBufferListParser$2 -> com.koushikdutta.async.parser.ByteBufferListParser$2:
    com.koushikdutta.async.parser.ByteBufferListParser this$0 -> this$0
    com.koushikdutta.async.ByteBufferList val$bb -> val$bb
    void <init>(com.koushikdutta.async.parser.ByteBufferListParser,com.koushikdutta.async.ByteBufferList) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int mBackStackId -> mBackStackId
    boolean mCancelable -> mCancelable
    android.app.Dialog mDialog -> mDialog
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    boolean mShowsDialog -> mShowsDialog
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mViewDestroyed -> mViewDestroyed
    void <init>() -> <init>
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    boolean getShowsDialog() -> getShowsDialog
    int getTheme() -> getTheme
    boolean isCancelable() -> isCancelable
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onAttach(android.app.Activity) -> onAttach
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDestroyView() -> onDestroyView
    void onDetach() -> onDetach
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void setCancelable(boolean) -> setCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    void setStyle(int,int) -> setStyle
    void setupDialog(android.app.Dialog,int) -> setupDialog
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
com.aokp.romcontrol.settings.GlobalSettingSwitchPreference -> com.aokp.romcontrol.settings.GlobalSettingSwitchPreference:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    boolean isPersisted() -> isPersisted
    boolean persistBoolean(boolean) -> persistBoolean
com.koushikdutta.ion.Response -> com.koushikdutta.ion.Response:
    java.lang.Exception exception -> exception
    com.koushikdutta.ion.HeadersResponse headers -> headers
    com.koushikdutta.async.http.AsyncHttpRequest request -> request
    java.lang.Object result -> result
    com.koushikdutta.ion.ResponseServedFrom servedFrom -> servedFrom
    void <init>(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.ResponseServedFrom,com.koushikdutta.ion.HeadersResponse,java.lang.Exception,java.lang.Object) -> <init>
    java.lang.Exception getException() -> getException
    com.koushikdutta.ion.HeadersResponse getHeaders() -> getHeaders
    com.koushikdutta.async.http.AsyncHttpRequest getRequest() -> getRequest
    java.lang.Object getResult() -> getResult
    com.koushikdutta.ion.ResponseServedFrom getServedFrom() -> getServedFrom
com.aokp.romcontrol.fragments.HardwareKeysFragment -> com.aokp.romcontrol.fragments.HardwareKeysFragment:
    android.content.Context mContext -> mContext
    void <init>() -> <init>
    void handleTimeoutUpdate(int) -> handleTimeoutUpdate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    void <init>() -> <init>
    void destroyLoader(int) -> destroyLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    android.support.v4.content.Loader getLoader(int) -> getLoader
    boolean hasRunningLoaders() -> hasRunningLoaders
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
com.google.gson.reflect.package-info -> com.google.gson.reflect.package-info:
com.koushikdutta.ion.ContextReference$ActivityContextReference -> com.koushikdutta.ion.ContextReference$ActivityContextReference:
    void <init>(android.app.Activity) -> <init>
    java.lang.String isAlive() -> isAlive
    java.lang.String isAlive(android.app.Activity) -> isAlive
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    boolean delete() -> delete
    boolean exists() -> exists
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.net.Uri getUri() -> getUri
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
com.koushikdutta.ion.loader.HttpLoader$1 -> com.koushikdutta.ion.loader.HttpLoader$1:
    com.koushikdutta.ion.loader.HttpLoader this$0 -> this$0
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.loader.HttpLoader,com.koushikdutta.async.future.FutureCallback) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
com.koushikdutta.async.AsyncServer$Scheduler -> com.koushikdutta.async.AsyncServer$Scheduler:
    com.koushikdutta.async.AsyncServer$Scheduler INSTANCE -> INSTANCE
    void <init>() -> <init>
    int compare(com.koushikdutta.async.AsyncServer$Scheduled,com.koushikdutta.async.AsyncServer$Scheduled) -> compare
    void <clinit>() -> <clinit>
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$1 -> this$1
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    void run() -> run
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter) -> <init>
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    void <init>() -> <init>
com.koushikdutta.async.http.spdy.HpackDraft08$Reader -> com.koushikdutta.async.http.spdy.HpackDraft08$Reader:
    java.util.List emittedHeaders -> emittedHeaders
    com.koushikdutta.async.http.spdy.BitArray emittedReferencedHeaders -> emittedReferencedHeaders
    int headerCount -> headerCount
    com.koushikdutta.async.http.spdy.Header[] headerTable -> headerTable
    int headerTableByteCount -> headerTableByteCount
    int maxHeaderTableByteCount -> maxHeaderTableByteCount
    int maxHeaderTableByteCountSetting -> maxHeaderTableByteCountSetting
    int nextHeaderIndex -> nextHeaderIndex
    com.koushikdutta.async.http.spdy.BitArray referencedHeaders -> referencedHeaders
    com.koushikdutta.async.ByteBufferList source -> source
    void <init>(int) -> <init>
    void adjustHeaderTableByteCount() -> adjustHeaderTableByteCount
    void clearHeaderTable() -> clearHeaderTable
    void clearReferenceSet() -> clearReferenceSet
    void emitReferenceSet() -> emitReferenceSet
    int evictToRecoverBytes(int) -> evictToRecoverBytes
    java.util.List getAndReset() -> getAndReset
    com.koushikdutta.async.http.spdy.ByteString getName(int) -> getName
    int headerTableIndex(int) -> headerTableIndex
    void insertIntoHeaderTable(int,com.koushikdutta.async.http.spdy.Header) -> insertIntoHeaderTable
    boolean isStaticHeader(int) -> isStaticHeader
    int maxHeaderTableByteCount() -> maxHeaderTableByteCount
    void maxHeaderTableByteCountSetting(int) -> maxHeaderTableByteCountSetting
    int readByte() -> readByte
    com.koushikdutta.async.http.spdy.ByteString readByteString() -> readByteString
    void readHeaders() -> readHeaders
    void readIndexedHeader(int) -> readIndexedHeader
    int readInt(int,int) -> readInt
    void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
    void refill(com.koushikdutta.async.ByteBufferList) -> refill
com.koushikdutta.async.http.AsyncSocketMiddleware$1$2$1 -> com.koushikdutta.async.http.AsyncSocketMiddleware$1$2$1:
    com.koushikdutta.async.http.AsyncSocketMiddleware$1$2 this$2 -> this$2
    java.lang.String val$inetSockAddress -> val$inetSockAddress
    com.koushikdutta.async.callback.CompletedCallback val$next -> val$next
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware$1$2,java.lang.String,com.koushikdutta.async.callback.CompletedCallback,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSocket) -> onConnectCompleted
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC:
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean isTracking(android.view.KeyEvent) -> isTracking
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    void startTracking(android.view.KeyEvent) -> startTracking
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    android.support.v4.app.Fragment getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    void <init>() -> <init>
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    android.support.v4.util.MapCollections getCollection() -> getCollection
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Set entrySet() -> entrySet
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    float getElevation(android.view.View) -> getElevation
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    int getLabelFor(android.view.View) -> getLabelFor
    int getLayerType(android.view.View) -> getLayerType
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    int getPaddingStart(android.view.View) -> getPaddingStart
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getTranslationZ(android.view.View) -> getTranslationZ
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getZ(android.view.View) -> getZ
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean hasTransientState(android.view.View) -> hasTransientState
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean isOpaque(android.view.View) -> isOpaque
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setActivated(android.view.View,boolean) -> setActivated
    void setAlpha(android.view.View,float) -> setAlpha
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    void setElevation(android.view.View,float) -> setElevation
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
com.koushikdutta.ion.ImageViewFutureImpl$2 -> com.koushikdutta.ion.ImageViewFutureImpl$2:
    com.koushikdutta.ion.ImageViewFutureImpl this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.ImageViewFutureImpl,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void onCompleted(java.lang.Exception,android.widget.ImageView) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    void <init>() -> <init>
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Rect mBounds -> mBounds
    android.graphics.RectF mClipRect -> mClipRect
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    long mFinishTime -> mFinishTime
    android.graphics.Paint mPaint -> mPaint
    android.view.View mParent -> mParent
    boolean mRunning -> mRunning
    long mStartTime -> mStartTime
    float mTriggerPercentage -> mTriggerPercentage
    void <init>(android.view.View) -> <init>
    void draw(android.graphics.Canvas) -> draw
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    boolean isRunning() -> isRunning
    void setBounds(int,int,int,int) -> setBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.server.AsyncHttpServer$1$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$1$1:
    java.lang.String fullPath -> fullPath
    boolean hasContinued -> hasContinued
    com.koushikdutta.async.http.server.HttpServerRequestCallback match -> match
    java.lang.String path -> path
    boolean requestComplete -> requestComplete
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl res -> res
    boolean responseComplete -> responseComplete
    com.koushikdutta.async.http.server.AsyncHttpServer$1 this$1 -> this$1
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    void onHeadersReceived() -> onHeadersReceived
    void onCompleted(java.lang.Exception) -> onCompleted
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$1,com.koushikdutta.async.AsyncSocket) -> <init>
    java.lang.String getPath() -> getPath
    com.koushikdutta.async.http.Multimap getQuery() -> getQuery
    void handleOnCompleted() -> handleOnCompleted
    com.koushikdutta.async.http.body.AsyncHttpRequestBody onUnknownBody(com.koushikdutta.async.http.Headers) -> onUnknownBody
    void -wrap0(com.koushikdutta.async.http.server.AsyncHttpServer$1$1) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.server.AsyncHttpServer$1$1,java.lang.Exception) -> -wrap1
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void <init>(android.support.v4.widget.MaterialProgressDrawable) -> <init>
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.ion.RequestBodyUploadObserver -> com.koushikdutta.ion.RequestBodyUploadObserver:
    com.koushikdutta.async.http.body.AsyncHttpRequestBody body -> body
    com.koushikdutta.ion.ProgressCallback callback -> callback
    void <init>(com.koushikdutta.async.http.body.AsyncHttpRequestBody,com.koushikdutta.ion.ProgressCallback) -> <init>
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    void <init>() -> <init>
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    java.lang.Object obtain(android.view.View,int) -> obtain
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
    void <init>() -> <init>
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.DragSortController$1:
    com.mobeta.android.dslv.DragSortController this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortController) -> <init>
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.aokp.romcontrol.settings.BaseSetting -> com.aokp.romcontrol.settings.BaseSetting:
    java.lang.String NAMESPACE_ANDROID -> NAMESPACE_ANDROID
    android.view.ViewGroup mRootView -> mRootView
    java.lang.String NAMESPACE_RC -> NAMESPACE_RC
    java.lang.String TAG -> TAG
    java.lang.String aDefaultValue -> aDefaultValue
    java.lang.String aKey -> aKey
    java.lang.String aSummary -> aSummary
    java.lang.String aTable -> aTable
    java.lang.String aTitle -> aTitle
    android.widget.TextView mDescriptionTextView -> mDescriptionTextView
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    com.aokp.romcontrol.settings.BaseSetting$OnSettingChangedListener mOnSettingChangedListener -> mOnSettingChangedListener
    java.util.ArrayList mRegisteredClickListeners -> mRegisteredClickListeners
    java.lang.String mSummary -> mSummary
    android.widget.TextView mTitleTextView -> mTitleTextView
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    java.lang.String getTitle() -> getTitle
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
    java.lang.String getDefaultValue() -> getDefaultValue
    void setSummary(java.lang.String) -> setSummary
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.String getCurrentSummary() -> getCurrentSummary
    java.lang.String getDefaultSummary() -> getDefaultSummary
    java.lang.String getKey() -> getKey
    java.lang.String getTable() -> getTable
    java.lang.String readAttrStringResource(android.content.res.Resources,int) -> readAttrStringResource
    void setDefaultValue(java.lang.String) -> setDefaultValue
    void setKey(java.lang.String) -> setKey
    void setOnSettingChangedListener(com.aokp.romcontrol.settings.BaseSetting$OnSettingChangedListener) -> setOnSettingChangedListener
    void setTitle(java.lang.String) -> setTitle
    void <clinit>() -> <clinit>
    java.util.ArrayList -get0(com.aokp.romcontrol.settings.BaseSetting) -> -get0
com.aokp.romcontrol.settings.SecureSettingSwitchPreference -> com.aokp.romcontrol.settings.SecureSettingSwitchPreference:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    boolean isPersisted() -> isPersisted
    boolean persistBoolean(boolean) -> persistBoolean
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
com.koushikdutta.ion.Ion$Config$1 -> com.koushikdutta.ion.Ion$Config$1:
    com.koushikdutta.ion.Ion$Config this$1 -> this$1
    void <init>(com.koushikdutta.ion.Ion$Config) -> <init>
    com.koushikdutta.async.http.AsyncHttpRequest createAsyncHttpRequest(android.net.Uri,java.lang.String,com.koushikdutta.async.http.Headers) -> createAsyncHttpRequest
com.koushikdutta.async.http.AsyncSocketMiddleware$3 -> com.koushikdutta.async.http.AsyncSocketMiddleware$3:
    com.koushikdutta.async.http.AsyncSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.AsyncSocket) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.DragSortListView$AdapterWrapper:
    android.widget.ListAdapter mAdapter -> mAdapter
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,android.widget.ListAdapter) -> <init>
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.koushikdutta.async.stream.OutputStreamDataCallback -> com.koushikdutta.async.stream.OutputStreamDataCallback:
    java.io.OutputStream mOutput -> mOutput
    void <init>(java.io.OutputStream) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void close() -> close
    java.io.OutputStream getOutputStream() -> getOutputStream
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    void <init>() -> <init>
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    int getIcon() -> getIcon
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    java.lang.CharSequence getTitle() -> getTitle
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void <init>() -> <init>
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationStart(android.view.View) -> onAnimationStart
com.koushikdutta.async.http.AsyncHttpRequest$1 -> com.koushikdutta.async.http.AsyncHttpRequest$1:
    com.koushikdutta.async.http.AsyncHttpRequest this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncHttpRequest) -> <init>
    java.lang.String getMethod() -> getMethod
    com.koushikdutta.async.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.koushikdutta.async.http.cache.RawHeaders -> com.koushikdutta.async.http.cache.RawHeaders:
    java.util.Comparator FIELD_NAME_COMPARATOR -> FIELD_NAME_COMPARATOR
    int httpMinorVersion -> httpMinorVersion
    java.util.List namesAndValues -> namesAndValues
    int responseCode -> responseCode
    java.lang.String responseMessage -> responseMessage
    java.lang.String statusLine -> statusLine
    int length() -> length
    java.lang.String getFieldName(int) -> getFieldName
    java.lang.String getValue(int) -> getValue
    void removeAll(java.lang.String) -> removeAll
    void add(java.lang.String,java.lang.String) -> add
    void addAll(java.lang.String,java.util.List) -> addAll
    int getResponseCode() -> getResponseCode
    void <init>() -> <init>
    java.lang.String get(java.lang.String) -> get
    void addLine(java.lang.String) -> addLine
    void setStatusLine(java.lang.String) -> setStatusLine
    java.lang.String getStatusLine() -> getStatusLine
    java.util.Map toMultimap() -> toMultimap
    com.koushikdutta.async.http.cache.RawHeaders fromMultimap(java.util.Map) -> fromMultimap
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String toHeaderString() -> toHeaderString
    java.lang.String getResponseMessage() -> getResponseMessage
    com.koushikdutta.async.http.cache.RawHeaders getAll(java.util.Set) -> getAll
    void <init>(com.koushikdutta.async.http.cache.RawHeaders) -> <init>
    void copy(com.koushikdutta.async.http.cache.RawHeaders) -> copy
    int getHttpMinorVersion() -> getHttpMinorVersion
    com.koushikdutta.async.http.cache.RawHeaders parse(java.lang.String) -> parse
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.socketio.SocketIOConnection$11$1 -> com.koushikdutta.async.http.socketio.SocketIOConnection$11$1:
    com.koushikdutta.async.http.socketio.SocketIOConnection$11 this$1 -> this$1
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection$11,java.lang.Exception) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
com.koushikdutta.async.AsyncDatagramSocket$1 -> com.koushikdutta.async.AsyncDatagramSocket$1:
    com.koushikdutta.async.AsyncDatagramSocket this$0 -> this$0
    java.lang.String val$host -> val$host
    int val$port -> val$port
    java.nio.ByteBuffer val$buffer -> val$buffer
    void <init>(com.koushikdutta.async.AsyncDatagramSocket,java.lang.String,int,java.nio.ByteBuffer) -> <init>
    void run() -> run
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
    void <init>() -> <init>
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void <init>(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> <init>
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.graphics.drawable.DrawableWrapperHoneycomb:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int SCROLL_AXIS_VERTICAL -> SCROLL_AXIS_VERTICAL
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int SCROLL_AXIS_NONE -> SCROLL_AXIS_NONE
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    int SCROLL_AXIS_HORIZONTAL -> SCROLL_AXIS_HORIZONTAL
    java.lang.String TAG -> TAG
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setElevation(android.view.View,float) -> setElevation
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    float getElevation(android.view.View) -> getElevation
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    int getMeasuredState(android.view.View) -> getMeasuredState
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    boolean isOpaque(android.view.View) -> isOpaque
    int getLayerType(android.view.View) -> getLayerType
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    float getAlpha(android.view.View) -> getAlpha
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    float getScaleX(android.view.View) -> getScaleX
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    void <init>() -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    int getLabelFor(android.view.View) -> getLabelFor
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    int getPaddingStart(android.view.View) -> getPaddingStart
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleY(android.view.View) -> getScaleY
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getTranslationZ(android.view.View) -> getTranslationZ
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getZ(android.view.View) -> getZ
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean hasTransientState(android.view.View) -> hasTransientState
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setActivated(android.view.View,boolean) -> setActivated
    void setAlpha(android.view.View,float) -> setAlpha
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void <clinit>() -> <clinit>
android.support.v4.os.OperationCanceledException -> android.support.v4.os.OperationCanceledException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.koushikdutta.async.http.HybiParser$4 -> com.koushikdutta.async.http.HybiParser$4:
    com.koushikdutta.async.http.HybiParser this$0 -> this$0
    void <init>(com.koushikdutta.async.http.HybiParser) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.http.AsyncHttpPost -> com.koushikdutta.async.http.AsyncHttpPost:
    java.lang.String METHOD -> METHOD
    void <init>(java.lang.String) -> <init>
    void <init>(android.net.Uri) -> <init>
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet,com.google.gson.internal.LinkedTreeMap) -> <init>
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.koushikdutta.async.future.FutureCallback -> com.koushikdutta.async.future.FutureCallback:
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.bitmap.Transform -> com.koushikdutta.ion.bitmap.Transform:
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.String key() -> key
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    int CONTENT_CHANGE_TYPE_SUBTREE -> CONTENT_CHANGE_TYPE_SUBTREE
    int CONTENT_CHANGE_TYPE_TEXT -> CONTENT_CHANGE_TYPE_TEXT
    int CONTENT_CHANGE_TYPE_UNDEFINED -> CONTENT_CHANGE_TYPE_UNDEFINED
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    void <init>(android.app.ActivityOptions) -> <init>
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1 -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1:
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2 this$1 -> this$1
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    android.net.Uri val$uri -> val$uri
    int val$port -> val$port
    void onCompleted(java.lang.Exception) -> onCompleted
    void <init>(com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2,com.koushikdutta.async.callback.ConnectCallback,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int) -> <init>
com.koushikdutta.async.PushParser$1 -> com.koushikdutta.async.PushParser$1:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.ion.loader.VideoLoader$1 -> com.koushikdutta.ion.loader.VideoLoader$1:
    com.koushikdutta.ion.loader.VideoLoader this$0 -> this$0
    java.lang.String val$uri -> val$uri
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    int val$resizeWidth -> val$resizeWidth
    int val$resizeHeight -> val$resizeHeight
    java.lang.String val$key -> val$key
    com.koushikdutta.ion.loader.MediaFile$MediaFileType val$type -> val$type
    void <init>(com.koushikdutta.ion.loader.VideoLoader,java.lang.String,com.koushikdutta.async.future.SimpleFuture,int,int,java.lang.String,com.koushikdutta.ion.loader.MediaFile$MediaFileType) -> <init>
    void run() -> run
android.support.v4.animation.AnimatorUpdateListenerCompat -> android.support.v4.animation.AnimatorUpdateListenerCompat:
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$MyDataSetObserver) -> <init>
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    void <clinit>() -> <clinit>
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v4.os.CancellationSignal -> android.support.v4.os.CancellationSignal:
    boolean mCancelInProgress -> mCancelInProgress
    java.lang.Object mCancellationSignalObj -> mCancellationSignalObj
    boolean mIsCanceled -> mIsCanceled
    android.support.v4.os.CancellationSignal$OnCancelListener mOnCancelListener -> mOnCancelListener
    void <init>() -> <init>
    void cancel() -> cancel
    java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    boolean isCanceled() -> isCanceled
    void setOnCancelListener(android.support.v4.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    void throwIfCanceled() -> throwIfCanceled
    void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    java.lang.CharSequence[] mChoices -> mChoices
    android.os.Bundle mExtras -> mExtras
    java.lang.CharSequence mLabel -> mLabel
    java.lang.String mResultKey -> mResultKey
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.RemoteInput build() -> build
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
com.koushikdutta.ion.IonBitmapRequestBuilder$1 -> com.koushikdutta.ion.IonBitmapRequestBuilder$1:
    void <init>() -> <init>
com.aokp.romcontrol.fragments.GeneralSettingsFragment -> com.aokp.romcontrol.fragments.GeneralSettingsFragment:
    java.lang.String FORCE_HIGHEND_GFX_PERSIST_PROP -> FORCE_HIGHEND_GFX_PERSIST_PROP
    com.aokp.romcontrol.settings.CheckboxSetting mCheckProximity -> mCheckProximity
    com.aokp.romcontrol.settings.CheckboxSetting mForceHighEndGfx -> mForceHighEndGfx
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) -> <init>
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_HEART -> RATING_HEART
    int RATING_NONE -> RATING_NONE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    java.lang.String TAG -> TAG
    java.lang.Object mRatingObj -> mRatingObj
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    void <init>(int,float) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    float getPercentRating() -> getPercentRating
    java.lang.Object getRating() -> getRating
    int getRatingStyle() -> getRatingStyle
    float getStarRating() -> getStarRating
    boolean hasHeart() -> hasHeart
    boolean isRated() -> isRated
    boolean isThumbUp() -> isThumbUp
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(int,float,android.support.v4.media.RatingCompat) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.LongSerializationPolicy[] values() -> values
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy) -> <init>
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    java.lang.Object mData -> mData
    boolean mDeliveredData -> mDeliveredData
    boolean mDestroyed -> mDestroyed
    boolean mHaveData -> mHaveData
    int mId -> mId
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.content.Loader mLoader -> mLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    boolean mReportNextStart -> mReportNextStart
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mStarted -> mStarted
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> <init>
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    void cancel() -> cancel
    void destroy() -> destroy
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void finishRetain() -> finishRetain
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void reportStart() -> reportStart
    void retain() -> retain
    void start() -> start
    void stop() -> stop
    java.lang.String toString() -> toString
com.koushikdutta.async.future.SimpleCancellable$1 -> com.koushikdutta.async.future.SimpleCancellable$1:
    void <init>() -> <init>
com.koushikdutta.ion.IonRequestBuilder$2$1 -> com.koushikdutta.ion.IonRequestBuilder$2$1:
    com.koushikdutta.ion.IonRequestBuilder$2 this$1 -> this$1
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform val$ret -> val$ret
    long val$downloaded -> val$downloaded
    long val$total -> val$total
    void <init>(com.koushikdutta.ion.IonRequestBuilder$2,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,long,long) -> <init>
    void run() -> run
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    void <init>(android.support.v4.app.ActivityOptionsCompat21) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    java.util.List mActionExtrasList -> mActionExtrasList
    android.os.Bundle mExtras -> mExtras
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$1 -> this$1
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    void <init>(android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> <init>
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl -> android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl:
    void <init>() -> <init>
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    void <init>(android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl) -> <init>
com.koushikdutta.async.http.AsyncHttpClient$FileCallback -> com.koushikdutta.async.http.AsyncHttpClient$FileCallback:
    void <init>() -> <init>
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.graphics.drawable.DrawableWrapperKitKat:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    boolean isAutoMirrored() -> isAutoMirrored
    void setAutoMirrored(boolean) -> setAutoMirrored
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void <init>() -> <init>
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void <init>() -> <init>
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
com.koushikdutta.async.http.body.MultipartFormDataBody$5 -> com.koushikdutta.async.http.body.MultipartFormDataBody$5:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.DataSink val$sink -> val$sink
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.DataSink) -> <init>
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
com.koushikdutta.async.AsyncServer$8$2 -> com.koushikdutta.async.AsyncServer$8$2:
    com.koushikdutta.async.AsyncServer$8 this$1 -> this$1
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.async.AsyncServer$8,com.koushikdutta.async.future.SimpleFuture,java.lang.Exception) -> <init>
    void run() -> run
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <init>() -> <init>
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.util.List stack -> stack
    void <init>(com.google.gson.JsonElement) -> <init>
    void promoteNameToValue() -> promoteNameToValue
    void beginArray() -> beginArray
    void beginObject() -> beginObject
    void close() -> close
    void endArray() -> endArray
    void endObject() -> endObject
    void expect(com.google.gson.stream.JsonToken) -> expect
    boolean hasNext() -> hasNext
    boolean nextBoolean() -> nextBoolean
    double nextDouble() -> nextDouble
    int nextInt() -> nextInt
    long nextLong() -> nextLong
    java.lang.String nextName() -> nextName
    void nextNull() -> nextNull
    java.lang.String nextString() -> nextString
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.cache.ResponseHeaders$1 -> com.koushikdutta.async.http.cache.ResponseHeaders$1:
    com.koushikdutta.async.http.cache.ResponseHeaders this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.ResponseHeaders) -> <init>
    void handle(java.lang.String,java.lang.String) -> handle
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void <init>(android.support.v4.app.NotificationCompatSideChannelService) -> <init>
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void <init>(android.support.v4.app.NotificationCompatSideChannelService,android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub) -> <init>
com.koushikdutta.async.http.spdy.SpdyTransport -> com.koushikdutta.async.http.spdy.SpdyTransport:
    java.util.List HTTP_2_PROHIBITED_HEADERS -> HTTP_2_PROHIBITED_HEADERS
    java.util.List SPDY_3_PROHIBITED_HEADERS -> SPDY_3_PROHIBITED_HEADERS
    void <init>() -> <init>
    boolean isProhibitedHeader(com.koushikdutta.async.http.Protocol,java.lang.String) -> isProhibitedHeader
    void <clinit>() -> <clinit>
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl$2 -> com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl$2:
    com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> <init>
    void onStringAvailable(java.lang.String) -> onStringAvailable
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    void <init>() -> <init>
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    void <init>(com.google.gson.Gson) -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 -> android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetLayoutDirectionMethod -> sGetLayoutDirectionMethod
    boolean sGetLayoutDirectionMethodFetched -> sGetLayoutDirectionMethodFetched
    java.lang.reflect.Method sSetLayoutDirectionMethod -> sSetLayoutDirectionMethod
    boolean sSetLayoutDirectionMethodFetched -> sSetLayoutDirectionMethodFetched
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
com.koushikdutta.async.http.body.UrlEncodedFormBody$1 -> com.koushikdutta.async.http.body.UrlEncodedFormBody$1:
    com.koushikdutta.async.http.body.UrlEncodedFormBody this$0 -> this$0
    com.koushikdutta.async.ByteBufferList val$data -> val$data
    void <init>(com.koushikdutta.async.http.body.UrlEncodedFormBody,com.koushikdutta.async.ByteBufferList) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.aokp.romcontrol.fragments.about.AboutFragment$1 -> com.aokp.romcontrol.fragments.about.AboutFragment$1:
    com.aokp.romcontrol.fragments.about.AboutFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.about.AboutFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.koushikdutta.async.AsyncServer$1 -> com.koushikdutta.async.AsyncServer$1:
    com.koushikdutta.async.SelectorWrapper val$selector -> val$selector
    void <init>(com.koushikdutta.async.SelectorWrapper) -> <init>
    void run() -> run
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void <init>(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> <init>
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    void <init>() -> <init>
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    void <clinit>() -> <clinit>
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -get0() -> -get0
com.koushikdutta.async.future.SimpleFuture -> com.koushikdutta.async.future.SimpleFuture:
    com.koushikdutta.async.future.FutureCallback callback -> callback
    java.lang.Exception exception -> exception
    java.lang.Object result -> result
    boolean silent -> silent
    com.koushikdutta.async.AsyncSemaphore waiter -> waiter
    void <init>() -> <init>
    com.koushikdutta.async.future.SimpleFuture setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
    boolean setComplete(java.lang.Exception) -> setComplete
    boolean setComplete(java.lang.Exception,java.lang.Object) -> setComplete
    boolean setComplete(java.lang.Object) -> setComplete
    java.lang.Exception tryGetException() -> tryGetException
    java.lang.Object tryGet() -> tryGet
    com.koushikdutta.async.future.FutureCallback then(com.koushikdutta.async.future.FutureCallback) -> then
    com.koushikdutta.async.future.SimpleFuture setParent(com.koushikdutta.async.future.Cancellable) -> setParent
    com.koushikdutta.async.future.SimpleFuture setComplete(com.koushikdutta.async.future.Future) -> setComplete
    com.koushikdutta.async.future.FutureCallback getCompletionCallback() -> getCompletionCallback
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Exception) -> <init>
    boolean cancel() -> cancel
    boolean cancel(boolean) -> cancel
    boolean cancelInternal(boolean) -> cancelInternal
    boolean cancelSilently() -> cancelSilently
    com.koushikdutta.async.AsyncSemaphore ensureWaiterLocked() -> ensureWaiterLocked
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.koushikdutta.async.future.FutureCallback getCallback() -> getCallback
    java.lang.Object getResultOrThrow() -> getResultOrThrow
    void handleCallbackUnlocked(com.koushikdutta.async.future.FutureCallback) -> handleCallbackUnlocked
    com.koushikdutta.async.future.FutureCallback handleCompleteLocked() -> handleCompleteLocked
    void releaseWaiterLocked() -> releaseWaiterLocked
    com.koushikdutta.async.future.SimpleFuture reset() -> reset
    boolean setComplete() -> setComplete
    com.koushikdutta.async.future.Cancellable reset() -> reset
    com.koushikdutta.async.future.Future setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
    com.koushikdutta.async.future.SimpleCancellable setParent(com.koushikdutta.async.future.Cancellable) -> setParent
com.koushikdutta.async.stream.InputStreamDataEmitter$2 -> com.koushikdutta.async.stream.InputStreamDataEmitter$2:
    com.koushikdutta.async.stream.InputStreamDataEmitter this$0 -> this$0
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.async.stream.InputStreamDataEmitter,java.lang.Exception) -> <init>
    void run() -> run
com.koushikdutta.async.wrapper.DataEmitterWrapper -> com.koushikdutta.async.wrapper.DataEmitterWrapper:
    com.koushikdutta.async.DataEmitter getDataEmitter() -> getDataEmitter
com.koushikdutta.async.Util$2 -> com.koushikdutta.async.Util$2:
    com.koushikdutta.async.util.Allocator allocator -> allocator
    com.koushikdutta.async.ByteBufferList pending -> pending
    int totalRead -> totalRead
    com.koushikdutta.async.DataSink val$ds -> val$ds
    java.io.InputStream val$is -> val$is
    long val$max -> val$max
    com.koushikdutta.async.callback.CompletedCallback val$wrapper -> val$wrapper
    void <init>(com.koushikdutta.async.DataSink,java.io.InputStream,long,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void cleanup() -> cleanup
    void onWriteable() -> onWriteable
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat localFormat -> localFormat
    void <init>() -> <init>
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    void <clinit>() -> <clinit>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.AsyncServer$Scheduled -> com.koushikdutta.async.AsyncServer$Scheduled:
    java.lang.Runnable runnable -> runnable
    long time -> time
    void <init>(java.lang.Runnable,long) -> <init>
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_DELAY -> MIN_DELAY
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    boolean mDismissed -> mDismissed
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    long mStartTime -> mStartTime
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void hide() -> hide
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void show() -> show
    boolean -get0(android.support.v4.widget.ContentLoadingProgressBar) -> -get0
    boolean -set0(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> -set0
    boolean -set1(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> -set1
    long -set2(android.support.v4.widget.ContentLoadingProgressBar,long) -> -set2
android.support.v4.content.PermissionChecker -> android.support.v4.content.PermissionChecker:
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int PERMISSION_DENIED_APP_OP -> PERMISSION_DENIED_APP_OP
    int PERMISSION_GRANTED -> PERMISSION_GRANTED
    void <init>() -> <init>
    int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
com.koushikdutta.async.util.Charsets -> com.koushikdutta.async.util.Charsets:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    boolean mAttached -> mAttached
    int mContainerId -> mContainerId
    android.content.Context mContext -> mContext
    android.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    java.util.ArrayList mTabs -> mTabs
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> doTabChanged
    void ensureContent() -> ensureContent
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void setup() -> setup
    void setup(android.content.Context,android.app.FragmentManager) -> setup
    void setup(android.content.Context,android.app.FragmentManager,int) -> setup
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
com.koushikdutta.async.http.spdy.Http20Draft13$Reader$2 -> com.koushikdutta.async.http.spdy.Http20Draft13$Reader$2:
    com.koushikdutta.async.http.spdy.Http20Draft13$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String TAG -> TAG
    int mColor -> mColor
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    int getColor() -> getColor
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    void <init>(android.content.Context,android.os.Handler) -> <init>
    void run() -> run
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    android.content.Intent mIntent -> mIntent
    java.util.ArrayList mStreams -> mStreams
    java.util.ArrayList mToAddresses -> mToAddresses
    void <init>(android.app.Activity) -> <init>
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.app.Activity getActivity() -> getActivity
    android.content.Intent getIntent() -> getIntent
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    void startChooser() -> startChooser
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$PendingDismissData -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$PendingDismissData:
    int position -> position
    android.view.View view -> view
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener this$0 -> this$0
    void <init>(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,int,android.view.View) -> <init>
    int compareTo(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$PendingDismissData) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void <init>() -> <init>
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl:
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.CharSequence mDescription -> mDescription
    android.os.Bundle mExtras -> mExtras
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    java.lang.String mMediaId -> mMediaId
    android.net.Uri mMediaUri -> mMediaUri
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mTitle -> mTitle
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat build() -> build
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    void <init>() -> <init>
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    com.google.gson.JsonObject deepCopy() -> deepCopy
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    boolean has(java.lang.String) -> has
    int hashCode() -> hashCode
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.koushikdutta.async.http.server.BoundaryEmitter -> com.koushikdutta.async.http.server.BoundaryEmitter:
    byte[] boundary -> boundary
    int state -> state
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getBoundaryEnd() -> getBoundaryEnd
    java.lang.String getBoundaryStart() -> getBoundaryStart
    void onBoundaryEnd() -> onBoundaryEnd
    void onBoundaryStart() -> onBoundaryStart
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void setBoundary(java.lang.String) -> setBoundary
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.spdy.HeaderReader$1 -> com.koushikdutta.async.http.spdy.HeaderReader$1:
    com.koushikdutta.async.http.spdy.HeaderReader this$0 -> this$0
    void <init>(com.koushikdutta.async.http.spdy.HeaderReader) -> <init>
    int inflate(byte[],int,int) -> inflate
com.koushikdutta.ion.BitmapInfoToBitmap -> com.koushikdutta.ion.BitmapInfoToBitmap:
    com.koushikdutta.ion.ContextReference contextReference -> contextReference
    void <init>(com.koushikdutta.ion.ContextReference) -> <init>
    void transform(com.koushikdutta.ion.bitmap.BitmapInfo) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$1 -> this$1
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.koushikdutta.async.http.AsyncSocketMiddleware$ConnectionInfo -> com.koushikdutta.async.http.AsyncSocketMiddleware$ConnectionInfo:
    int openCount -> openCount
    com.koushikdutta.async.ArrayDeque queue -> queue
    com.koushikdutta.async.ArrayDeque sockets -> sockets
    void <init>() -> <init>
com.koushikdutta.async.AsyncServer$8$1 -> com.koushikdutta.async.AsyncServer$8$1:
    com.koushikdutta.async.AsyncServer$8 this$1 -> this$1
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    java.net.InetAddress[] val$result -> val$result
    void <init>(com.koushikdutta.async.AsyncServer$8,com.koushikdutta.async.future.SimpleFuture,java.net.InetAddress[]) -> <init>
    void run() -> run
com.koushikdutta.async.http.socketio.ExceptionCallback -> com.koushikdutta.async.http.socketio.ExceptionCallback:
    void onException(java.lang.Exception) -> onException
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
com.koushikdutta.ion.IonDrawable$IonDrawableCallback -> com.koushikdutta.ion.IonDrawable$IonDrawableCallback:
    java.lang.String bitmapKey -> bitmapKey
    com.koushikdutta.ion.Ion ion -> ion
    java.lang.ref.WeakReference ionDrawableRef -> ionDrawableRef
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.ion.IonDrawable) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.bitmap.BitmapInfo) -> onCompleted
    void register(com.koushikdutta.ion.Ion,java.lang.String) -> register
    void unregister(com.koushikdutta.ion.Ion,java.lang.String) -> unregister
    void <clinit>() -> <clinit>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void <init>(android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2) -> <init>
com.koushikdutta.ion.Ion -> com.koushikdutta.ion.Ion:
    com.koushikdutta.async.util.HashList bitmapsPending -> bitmapsPending
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware responseCache -> responseCache
    android.os.Handler mainHandler -> mainHandler
    com.koushikdutta.ion.bitmap.IonBitmapCache bitmapCache -> bitmapCache
    java.util.Comparator DEFERRED_COMPARATOR -> DEFERRED_COMPARATOR
    com.koushikdutta.ion.loader.AssetLoader assetLoader -> assetLoader
    int availableProcessors -> availableProcessors
    com.koushikdutta.ion.IonImageViewRequestBuilder bitmapBuilder -> bitmapBuilder
    java.util.concurrent.ExecutorService bitmapExecutorService -> bitmapExecutorService
    com.koushikdutta.ion.Ion$Config config -> config
    com.koushikdutta.ion.conscrypt.ConscryptMiddleware conscryptMiddleware -> conscryptMiddleware
    com.koushikdutta.ion.loader.ContentLoader contentLoader -> contentLoader
    android.content.Context context -> context
    com.koushikdutta.ion.cookie.CookieMiddleware cookieMiddleware -> cookieMiddleware
    com.koushikdutta.ion.loader.FileLoader fileLoader -> fileLoader
    com.google.gson.Gson gson -> gson
    com.koushikdutta.async.http.AsyncHttpClient httpClient -> httpClient
    com.koushikdutta.ion.loader.HttpLoader httpLoader -> httpLoader
    java.util.WeakHashMap inFlight -> inFlight
    java.util.HashMap instances -> instances
    java.util.concurrent.ExecutorService ioExecutorService -> ioExecutorService
    java.util.ArrayList loaders -> loaders
    int logLevel -> logLevel
    java.lang.String logtag -> logtag
    java.lang.String name -> name
    com.koushikdutta.ion.loader.PackageIconLoader packageIconLoader -> packageIconLoader
    java.lang.Runnable processDeferred -> processDeferred
    com.koushikdutta.ion.loader.ResourceLoader resourceLoader -> resourceLoader
    com.koushikdutta.async.util.FileCache storeCache -> storeCache
    java.lang.String userAgent -> userAgent
    com.koushikdutta.ion.loader.VideoLoader videoLoader -> videoLoader
    com.koushikdutta.ion.Ion$Config configure() -> configure
    java.util.concurrent.ExecutorService getBitmapLoadExecutorService() -> getBitmapLoadExecutorService
    com.koushikdutta.ion.bitmap.IonBitmapCache getBitmapCache() -> getBitmapCache
    com.koushikdutta.async.http.AsyncHttpClient getHttpClient() -> getHttpClient
    android.content.Context getContext() -> getContext
    void processDeferred() -> processDeferred
    void <init>(android.content.Context,java.lang.String) -> <init>
    void addCookieMiddleware() -> addCookieMiddleware
    void addFutureInFlight(com.koushikdutta.async.future.Future,java.lang.Object) -> addFutureInFlight
    com.koushikdutta.ion.builder.LoadBuilder build(android.content.Context) -> build
    com.koushikdutta.ion.builder.LoadBuilder build(android.app.Fragment) -> build
    com.koushikdutta.ion.builder.LoadBuilder build(android.support.v4.app.Fragment) -> build
    com.koushikdutta.ion.builder.Builders$IV$F build(android.widget.ImageView) -> build
    com.koushikdutta.ion.FileCacheStore cache(java.lang.String) -> cache
    void cancelAll() -> cancelAll
    void cancelAll(java.lang.Object) -> cancelAll
    void cancelAll(android.content.Context) -> cancelAll
    void dump() -> dump
    com.koushikdutta.async.util.FileCache getCache() -> getCache
    com.koushikdutta.ion.conscrypt.ConscryptMiddleware getConscryptMiddleware() -> getConscryptMiddleware
    com.koushikdutta.ion.cookie.CookieMiddleware getCookieMiddleware() -> getCookieMiddleware
    com.koushikdutta.ion.Ion getDefault(android.content.Context) -> getDefault
    com.koushikdutta.ion.Ion getInstance(android.content.Context,java.lang.String) -> getInstance
    java.util.concurrent.ExecutorService getIoExecutorService() -> getIoExecutorService
    java.lang.String getName() -> getName
    int getPendingRequestCount(java.lang.Object) -> getPendingRequestCount
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.util.FileCache getStore() -> getStore
    int groupCount(java.lang.Object) -> groupCount
    com.koushikdutta.ion.FileCacheStore store(java.lang.String) -> store
    com.koushikdutta.ion.builder.LoadBuilder with(android.content.Context) -> with
    com.koushikdutta.ion.builder.LoadBuilder with(android.app.Fragment) -> with
    com.koushikdutta.ion.builder.LoadBuilder with(android.support.v4.app.Fragment) -> with
    com.koushikdutta.ion.builder.Builders$IV$F with(android.widget.ImageView) -> with
    void <clinit>() -> <clinit>
    java.util.Comparator -get0() -> -get0
com.koushikdutta.async.http.spdy.Http20Draft13 -> com.koushikdutta.async.http.spdy.Http20Draft13:
    com.koushikdutta.async.http.spdy.ByteString CONNECTION_PREFACE -> CONNECTION_PREFACE
    byte FLAG_ACK -> FLAG_ACK
    byte FLAG_COMPRESSED -> FLAG_COMPRESSED
    byte FLAG_END_HEADERS -> FLAG_END_HEADERS
    byte FLAG_END_PUSH_PROMISE -> FLAG_END_PUSH_PROMISE
    byte FLAG_END_SEGMENT -> FLAG_END_SEGMENT
    byte FLAG_END_STREAM -> FLAG_END_STREAM
    byte FLAG_NONE -> FLAG_NONE
    byte FLAG_PADDED -> FLAG_PADDED
    byte FLAG_PRIORITY -> FLAG_PRIORITY
    int MAX_FRAME_SIZE -> MAX_FRAME_SIZE
    byte TYPE_CONTINUATION -> TYPE_CONTINUATION
    byte TYPE_DATA -> TYPE_DATA
    byte TYPE_GOAWAY -> TYPE_GOAWAY
    byte TYPE_HEADERS -> TYPE_HEADERS
    byte TYPE_PING -> TYPE_PING
    byte TYPE_PRIORITY -> TYPE_PRIORITY
    byte TYPE_PUSH_PROMISE -> TYPE_PUSH_PROMISE
    byte TYPE_RST_STREAM -> TYPE_RST_STREAM
    byte TYPE_SETTINGS -> TYPE_SETTINGS
    byte TYPE_WINDOW_UPDATE -> TYPE_WINDOW_UPDATE
    java.util.logging.Logger logger -> logger
    void <init>() -> <init>
    com.koushikdutta.async.http.Protocol getProtocol() -> getProtocol
    java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> illegalArgument
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
    short lengthWithoutPadding(short,byte,short) -> lengthWithoutPadding
    int maxFrameSize() -> maxFrameSize
    com.koushikdutta.async.http.spdy.FrameReader newReader(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.spdy.FrameReader$Handler,boolean) -> newReader
    com.koushikdutta.async.http.spdy.FrameWriter newWriter(com.koushikdutta.async.BufferedDataSink,boolean) -> newWriter
    void <clinit>() -> <clinit>
    com.koushikdutta.async.http.spdy.ByteString -get0() -> -get0
    java.util.logging.Logger -get1() -> -get1
    java.io.IOException -wrap0(java.lang.String,java.lang.Object[]) -> -wrap0
    java.lang.IllegalArgumentException -wrap1(java.lang.String,java.lang.Object[]) -> -wrap1
    short -wrap2(short,byte,short) -> -wrap2
com.koushikdutta.ion.IonRequestBuilder -> com.koushikdutta.ion.IonRequestBuilder:
    com.koushikdutta.ion.Ion ion -> ion
    com.koushikdutta.ion.ContextReference contextReference -> contextReference
    boolean noCache -> noCache
    java.lang.String uri -> uri
    com.koushikdutta.ion.IonRequestBuilder$LoadRequestCallback loadRequestCallback -> loadRequestCallback
    com.koushikdutta.async.http.body.AsyncHttpRequestBody body -> body
    com.koushikdutta.async.http.Multimap bodyParameters -> bodyParameters
    boolean followRedirect -> followRedirect
    java.util.ArrayList groups -> groups
    android.os.Handler handler -> handler
    com.koushikdutta.async.http.Headers headers -> headers
    com.koushikdutta.ion.HeadersCallback headersCallback -> headersCallback
    int logLevel -> logLevel
    java.lang.String logTag -> logTag
    java.lang.String method -> method
    boolean methodWasSet -> methodWasSet
    com.koushikdutta.async.http.body.MultipartFormDataBody multipartBody -> multipartBody
    com.koushikdutta.ion.ProgressCallback progress -> progress
    java.lang.ref.WeakReference progressBar -> progressBar
    java.lang.ref.WeakReference progressDialog -> progressDialog
    com.koushikdutta.ion.ProgressCallback progressHandler -> progressHandler
    java.lang.String proxyHost -> proxyHost
    int proxyPort -> proxyPort
    com.koushikdutta.async.http.Multimap query -> query
    int timeoutMilliseconds -> timeoutMilliseconds
    com.koushikdutta.ion.ProgressCallback uploadProgress -> uploadProgress
    android.widget.ProgressBar uploadProgressBar -> uploadProgressBar
    android.app.ProgressDialog uploadProgressDialog -> uploadProgressDialog
    com.koushikdutta.ion.ProgressCallback uploadProgressHandler -> uploadProgressHandler
    boolean -assertionsDisabled -> -assertionsDisabled
    com.koushikdutta.ion.IonRequestBuilder setHandler(android.os.Handler) -> setHandler
    com.koushikdutta.ion.future.ResponseFuture execute(com.koushikdutta.async.parser.AsyncParser,java.lang.Runnable) -> execute
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform write(java.io.File) -> write
    void <init>(com.koushikdutta.ion.ContextReference,com.koushikdutta.ion.Ion) -> <init>
    void postExecute(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,java.lang.Exception,java.lang.Object) -> postExecute
    void getLoaderEmitter(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,com.koushikdutta.async.http.AsyncHttpRequest) -> getLoaderEmitter
    void resolveAndLoadRequest(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> resolveAndLoadRequest
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform execute(com.koushikdutta.async.DataSink,boolean,java.lang.Object,java.lang.Runnable) -> execute
    com.koushikdutta.ion.future.ResponseFuture asByteArray() -> asByteArray
    com.koushikdutta.ion.IonRequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    com.koushikdutta.ion.IonRequestBuilder addHeaders(java.util.Map) -> addHeaders
    com.koushikdutta.ion.IonRequestBuilder addMultipartParts(java.lang.Iterable) -> addMultipartParts
    com.koushikdutta.ion.builder.Builders$Any$M addMultipartParts(com.koushikdutta.async.http.body.Part[]) -> addMultipartParts
    com.koushikdutta.ion.IonRequestBuilder addQueries(java.util.Map) -> addQueries
    com.koushikdutta.ion.IonRequestBuilder addQuery(java.lang.String,java.lang.String) -> addQuery
    com.koushikdutta.ion.future.ResponseFuture as(com.koushikdutta.async.parser.AsyncParser) -> as
    com.koushikdutta.ion.future.ResponseFuture as(java.lang.Class) -> as
    com.koushikdutta.ion.future.ResponseFuture as(com.google.gson.reflect.TypeToken) -> as
    com.koushikdutta.async.future.Future asBitmap() -> asBitmap
    com.koushikdutta.ion.bitmap.BitmapInfo asCachedBitmap() -> asCachedBitmap
    com.koushikdutta.ion.future.ResponseFuture asDataEmitter() -> asDataEmitter
    com.koushikdutta.ion.future.ResponseFuture asDocument() -> asDocument
    com.koushikdutta.ion.future.ResponseFuture asInputStream() -> asInputStream
    com.koushikdutta.ion.future.ResponseFuture asJsonArray() -> asJsonArray
    com.koushikdutta.ion.future.ResponseFuture asJsonArray(java.nio.charset.Charset) -> asJsonArray
    com.koushikdutta.ion.future.ResponseFuture asJsonObject() -> asJsonObject
    com.koushikdutta.ion.future.ResponseFuture asJsonObject(java.nio.charset.Charset) -> asJsonObject
    com.koushikdutta.ion.future.ResponseFuture asString() -> asString
    com.koushikdutta.ion.future.ResponseFuture asString(java.nio.charset.Charset) -> asString
    com.koushikdutta.ion.IonRequestBuilder basicAuthentication(java.lang.String,java.lang.String) -> basicAuthentication
    com.koushikdutta.ion.future.ResponseFuture execute(com.koushikdutta.async.parser.AsyncParser) -> execute
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform execute(com.koushikdutta.async.DataSink,boolean,java.lang.Object) -> execute
    com.koushikdutta.ion.IonRequestBuilder followRedirect(boolean) -> followRedirect
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    void getLoaderEmitter(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> getLoaderEmitter
    com.koushikdutta.ion.builder.FutureBuilder group(java.lang.Object) -> group
    com.koushikdutta.ion.future.ImageViewFuture intoImageView(android.widget.ImageView) -> intoImageView
    void invokeLoadRequest(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> invokeLoadRequest
    com.koushikdutta.ion.bitmap.LocallyCachedStatus isLocallyCached() -> isLocallyCached
    com.koushikdutta.ion.IonRequestBuilder load(java.lang.String) -> load
    com.koushikdutta.ion.IonRequestBuilder load(java.io.File) -> load
    com.koushikdutta.ion.IonRequestBuilder load(java.lang.String,java.lang.String) -> load
    com.koushikdutta.ion.IonRequestBuilder loadInternal(java.lang.String,java.lang.String) -> loadInternal
    void loadRequest(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> loadRequest
    com.koushikdutta.ion.builder.Builders$Any$B noCache() -> noCache
    com.koushikdutta.ion.builder.Builders$Any$B onHeaders(com.koushikdutta.ion.HeadersCallback) -> onHeaders
    com.koushikdutta.async.http.AsyncHttpRequest prepareRequest(android.net.Uri) -> prepareRequest
    android.net.Uri prepareURI() -> prepareURI
    com.koushikdutta.ion.IonRequestBuilder progress(com.koushikdutta.ion.ProgressCallback) -> progress
    com.koushikdutta.ion.IonRequestBuilder progressBar(android.widget.ProgressBar) -> progressBar
    com.koushikdutta.ion.IonRequestBuilder progressDialog(android.app.ProgressDialog) -> progressDialog
    com.koushikdutta.ion.IonRequestBuilder progressHandler(com.koushikdutta.ion.ProgressCallback) -> progressHandler
    com.koushikdutta.ion.IonRequestBuilder proxy(java.lang.String,int) -> proxy
    com.koushikdutta.async.future.Future resolveRequest(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> resolveRequest
    com.koushikdutta.ion.IonRequestBuilder setBody(com.koushikdutta.async.http.body.AsyncHttpRequestBody) -> setBody
    com.koushikdutta.ion.IonRequestBuilder setBodyParameter(java.lang.String,java.lang.String) -> setBodyParameter
    com.koushikdutta.ion.IonRequestBuilder setBodyParameters(java.util.Map) -> setBodyParameters
    com.koushikdutta.ion.builder.Builders$Any$F setByteArrayBody(byte[]) -> setByteArrayBody
    com.koushikdutta.ion.builder.Builders$Any$F setDocumentBody(org.w3c.dom.Document) -> setDocumentBody
    com.koushikdutta.ion.builder.Builders$Any$F setFileBody(java.io.File) -> setFileBody
    com.koushikdutta.ion.builder.Builders$Any$B setHeader(org.apache.http.NameValuePair[]) -> setHeader
    com.koushikdutta.ion.IonRequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    com.koushikdutta.ion.IonRequestBuilder setJsonArrayBody(com.google.gson.JsonArray) -> setJsonArrayBody
    com.koushikdutta.ion.IonRequestBuilder setJsonObjectBody(com.google.gson.JsonObject) -> setJsonObjectBody
    com.koushikdutta.ion.IonRequestBuilder setJsonPojoBody(java.lang.Object) -> setJsonPojoBody
    com.koushikdutta.ion.IonRequestBuilder setJsonPojoBody(java.lang.Object,com.google.gson.reflect.TypeToken) -> setJsonPojoBody
    com.koushikdutta.ion.IonRequestBuilder setLogging(java.lang.String,int) -> setLogging
    com.koushikdutta.ion.IonRequestBuilder setMultipartContentType(java.lang.String) -> setMultipartContentType
    com.koushikdutta.ion.IonRequestBuilder setMultipartFile(java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.IonRequestBuilder setMultipartFile(java.lang.String,java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.IonRequestBuilder setMultipartParameter(java.lang.String,java.lang.String) -> setMultipartParameter
    com.koushikdutta.ion.IonRequestBuilder setMultipartParameters(java.util.Map) -> setMultipartParameters
    com.koushikdutta.ion.builder.Builders$Any$F setStreamBody(java.io.InputStream) -> setStreamBody
    com.koushikdutta.ion.builder.Builders$Any$F setStreamBody(java.io.InputStream,int) -> setStreamBody
    com.koushikdutta.ion.IonRequestBuilder setStringBody(java.lang.String) -> setStringBody
    com.koushikdutta.ion.IonRequestBuilder setTimeout(int) -> setTimeout
    com.koushikdutta.ion.builder.Builders$Any$B uploadProgress(com.koushikdutta.ion.ProgressCallback) -> uploadProgress
    com.koushikdutta.ion.builder.Builders$Any$B uploadProgressBar(android.widget.ProgressBar) -> uploadProgressBar
    com.koushikdutta.ion.builder.Builders$Any$B uploadProgressDialog(android.app.ProgressDialog) -> uploadProgressDialog
    com.koushikdutta.ion.builder.Builders$Any$B uploadProgressHandler(com.koushikdutta.ion.ProgressCallback) -> uploadProgressHandler
    com.koushikdutta.ion.IonRequestBuilder userAgent(java.lang.String) -> userAgent
    com.koushikdutta.ion.IonImageViewRequestBuilder withBitmap() -> withBitmap
    com.koushikdutta.ion.future.ResponseFuture write(java.io.OutputStream) -> write
    com.koushikdutta.ion.future.ResponseFuture write(java.io.OutputStream,boolean) -> write
    void <clinit>() -> <clinit>
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartFile(java.lang.String,java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartFile(java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.builder.RequestBuilder setLogging(java.lang.String,int) -> setLogging
    com.koushikdutta.ion.builder.RequestBuilder setTimeout(int) -> setTimeout
    java.lang.Object setDocumentBody(org.w3c.dom.Document) -> setDocumentBody
    com.koushikdutta.ion.builder.RequestBuilder basicAuthentication(java.lang.String,java.lang.String) -> basicAuthentication
    com.koushikdutta.ion.builder.RequestBuilder proxy(java.lang.String,int) -> proxy
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressDialog(android.app.ProgressDialog) -> uploadProgressDialog
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartContentType(java.lang.String) -> setMultipartContentType
    com.koushikdutta.ion.builder.RequestBuilder addHeaders(java.util.Map) -> addHeaders
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressHandler(com.koushikdutta.ion.ProgressCallback) -> uploadProgressHandler
    com.koushikdutta.ion.builder.Builders$Any$BF withBitmap() -> withBitmap
    java.lang.Object setFileBody(java.io.File) -> setFileBody
    com.koushikdutta.ion.builder.UrlEncodedBuilder setBodyParameter(java.lang.String,java.lang.String) -> setBodyParameter
    com.koushikdutta.ion.builder.RequestBuilder progressHandler(com.koushikdutta.ion.ProgressCallback) -> progressHandler
    java.lang.Object setStringBody(java.lang.String) -> setStringBody
    com.koushikdutta.ion.builder.RequestBuilder userAgent(java.lang.String) -> userAgent
    com.koushikdutta.ion.builder.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    com.koushikdutta.ion.builder.RequestBuilder setHeader(org.apache.http.NameValuePair[]) -> setHeader
    java.lang.Object setByteArrayBody(byte[]) -> setByteArrayBody
    com.koushikdutta.ion.builder.RequestBuilder noCache() -> noCache
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartParameter(java.lang.String,java.lang.String) -> setMultipartParameter
    java.lang.Object setJsonArrayBody(com.google.gson.JsonArray) -> setJsonArrayBody
    com.koushikdutta.ion.builder.RequestBuilder uploadProgressBar(android.widget.ProgressBar) -> uploadProgressBar
    com.koushikdutta.ion.builder.RequestBuilder onHeaders(com.koushikdutta.ion.HeadersCallback) -> onHeaders
    com.koushikdutta.ion.builder.RequestBuilder uploadProgress(com.koushikdutta.ion.ProgressCallback) -> uploadProgress
    com.koushikdutta.ion.builder.RequestBuilder setHandler(android.os.Handler) -> setHandler
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartParameters(java.util.Map) -> setMultipartParameters
    java.lang.Object load(java.lang.String,java.lang.String) -> load
    java.lang.Object load(java.io.File) -> load
    java.lang.Object load(java.lang.String) -> load
    com.koushikdutta.ion.builder.RequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    com.koushikdutta.ion.builder.UrlEncodedBuilder setBodyParameters(java.util.Map) -> setBodyParameters
    com.koushikdutta.ion.builder.RequestBuilder addQueries(java.util.Map) -> addQueries
    com.koushikdutta.ion.builder.RequestBuilder progressDialog(android.app.ProgressDialog) -> progressDialog
    com.koushikdutta.ion.builder.RequestBuilder progressBar(android.widget.ProgressBar) -> progressBar
    com.koushikdutta.ion.builder.MultipartBodyBuilder addMultipartParts(com.koushikdutta.async.http.body.Part[]) -> addMultipartParts
    com.koushikdutta.ion.builder.MultipartBodyBuilder addMultipartParts(java.lang.Iterable) -> addMultipartParts
    com.koushikdutta.ion.builder.RequestBuilder followRedirect(boolean) -> followRedirect
    java.lang.Object setJsonObjectBody(com.google.gson.JsonObject) -> setJsonObjectBody
    com.koushikdutta.ion.builder.RequestBuilder progress(com.koushikdutta.ion.ProgressCallback) -> progress
    com.koushikdutta.ion.future.ResponseFuture write(java.io.File) -> write
    java.lang.Object setJsonPojoBody(java.lang.Object,com.google.gson.reflect.TypeToken) -> setJsonPojoBody
    java.lang.Object setJsonPojoBody(java.lang.Object) -> setJsonPojoBody
    com.koushikdutta.ion.builder.RequestBuilder addQuery(java.lang.String,java.lang.String) -> addQuery
    void -wrap0(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,java.lang.Exception,java.lang.Object) -> -wrap0
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    void <init>() -> <init>
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    void <clinit>() -> <clinit>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken STRING -> STRING
    void <init>(java.lang.String,int) -> <init>
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    com.google.gson.stream.JsonToken[] values() -> values
    void <clinit>() -> <clinit>
com.koushikdutta.async.wrapper.AsyncSocketWrapper -> com.koushikdutta.async.wrapper.AsyncSocketWrapper:
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    void <init>() -> <init>
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    void <init>() -> <init>
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void <init>() -> <init>
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    boolean isEditable(java.lang.Object) -> isEditable
    boolean refresh(java.lang.Object) -> refresh
    void setEditable(java.lang.Object,boolean) -> setEditable
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.util.ArrayList mActive -> mActive
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    java.util.ArrayList mAdded -> mAdded
    int mCurState -> mCurState
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    android.support.v4.app.FragmentController mController -> mController
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean mDestroyed -> mDestroyed
    java.lang.Runnable mExecCommit -> mExecCommit
    boolean mExecutingActions -> mExecutingActions
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    android.support.v4.app.Fragment mParent -> mParent
    java.util.ArrayList mPendingActions -> mPendingActions
    android.util.SparseArray mStateArray -> mStateArray
    android.os.Bundle mStateBundle -> mStateBundle
    boolean mStateSaved -> mStateSaved
    java.lang.Runnable[] mTmpActions -> mTmpActions
    void dispatchResume() -> dispatchResume
    void dispatchStart() -> dispatchStart
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchCreate() -> dispatchCreate
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> getLayoutInflaterFactory
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void <init>() -> <init>
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    void noteStateNotSaved() -> noteStateNotSaved
    void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    boolean execPendingActions() -> execPendingActions
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    android.os.Parcelable saveAllState() -> saveAllState
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    void moveToState(int,int,int,boolean) -> moveToState
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    int reverseTransit(int) -> reverseTransit
    void freeBackStackIndex(int) -> freeBackStackIndex
    void popBackStack() -> popBackStack
    void popBackStack(java.lang.String,int) -> popBackStack
    void popBackStack(int,int) -> popBackStack
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    void checkStateLoss() -> checkStateLoss
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    boolean isDestroyed() -> isDestroyed
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    boolean modifiesAlpha(android.view.animation.Animation) -> modifiesAlpha
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    boolean popBackStackImmediate() -> popBackStackImmediate
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void reportBackStackChanged() -> reportBackStackChanged
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation) -> setHWLayerAnimListenerIfAlpha
    void setRetainLoader(boolean) -> setRetainLoader
    boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation) -> shouldRunOnHWLayer
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void throwException(java.lang.RuntimeException) -> throwException
    java.lang.String toString() -> toString
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    void <clinit>() -> <clinit>
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.DragSortListView$DragScrollProfile:
    float getSpeed(float,long) -> getSpeed
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    void <init>() -> <init>
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
com.koushikdutta.async.AsyncServer$4 -> com.koushikdutta.async.AsyncServer$4:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.SelectorWrapper val$currentSelector -> val$currentSelector
    java.util.concurrent.Semaphore val$semaphore -> val$semaphore
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.SelectorWrapper,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.koushikdutta.ion.BitmapDrawableFactory$1 -> com.koushikdutta.ion.BitmapDrawableFactory$1:
    void <init>() -> <init>
    android.graphics.drawable.Drawable fromBitmap(android.content.res.Resources,android.graphics.Bitmap) -> fromBitmap
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void <init>(android.support.v4.widget.ContentLoadingProgressBar) -> <init>
    void run() -> run
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.DragSortListView$SmoothAnimator:
    float mA -> mA
    float mAlpha -> mAlpha
    float mB -> mB
    float mC -> mC
    boolean mCanceled -> mCanceled
    float mD -> mD
    float mDurationF -> mDurationF
    long mStartTime -> mStartTime
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    void cancel() -> cancel
    void onStart() -> onStart
    void onStop() -> onStop
    void onUpdate(float,float) -> onUpdate
    void run() -> run
    void start() -> start
    float transform(float) -> transform
com.aokp.romcontrol.widgets.DeveloperPreference$1 -> com.aokp.romcontrol.widgets.DeveloperPreference$1:
    com.aokp.romcontrol.widgets.DeveloperPreference this$0 -> this$0
    void <init>(com.aokp.romcontrol.widgets.DeveloperPreference) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    void <init>() -> <init>
    boolean isConnecting(java.lang.Object) -> isConnecting
com.koushikdutta.async.stream.OutputStreamDataSink -> com.koushikdutta.async.stream.OutputStreamDataSink:
    java.lang.Exception closeException -> closeException
    boolean closeReported -> closeReported
    com.koushikdutta.async.callback.CompletedCallback mClosedCallback -> mClosedCallback
    java.io.OutputStream mStream -> mStream
    com.koushikdutta.async.callback.WritableCallback mWritable -> mWritable
    com.koushikdutta.async.callback.WritableCallback outputStreamCallback -> outputStreamCallback
    com.koushikdutta.async.AsyncServer server -> server
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    java.io.OutputStream getOutputStream() -> getOutputStream
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    void <init>(com.koushikdutta.async.AsyncServer,java.io.OutputStream) -> <init>
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isOpen() -> isOpen
    void reportClose(java.lang.Exception) -> reportClose
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setOutputStreamWritableCallback(com.koushikdutta.async.callback.WritableCallback) -> setOutputStreamWritableCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void write(com.koushikdutta.async.ByteBufferList) -> write
com.koushikdutta.async.http.AsyncSocketMiddleware$1$2 -> com.koushikdutta.async.http.AsyncSocketMiddleware$1$2:
    com.koushikdutta.async.http.AsyncSocketMiddleware$1 this$1 -> this$1
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    java.lang.String val$inetSockAddress -> val$inetSockAddress
    java.net.InetAddress val$address -> val$address
    int val$port -> val$port
    android.net.Uri val$uri -> val$uri
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware$1,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,java.net.InetAddress,int,android.net.Uri) -> <init>
com.aokp.romcontrol.settings.BaseSetting$OnSettingChangedListener -> com.aokp.romcontrol.settings.BaseSetting$OnSettingChangedListener:
    void onSettingChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onSettingChanged
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23:
    void <init>(java.lang.Object) -> <init>
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    android.support.v4.app.Fragment val$fragment -> val$fragment
    void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    int ID_HOME -> ID_HOME
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    int mDrawerImageResource -> mDrawerImageResource
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int) -> <init>
    void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,boolean,int,int,int) -> <init>
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setActionBarDescription(int) -> setActionBarDescription
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void syncState() -> syncState
    void <clinit>() -> <clinit>
    android.app.Activity -get0(android.support.v4.app.ActionBarDrawerToggle) -> -get0
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.koushikdutta.ion.conscrypt.ConscryptMiddleware -> com.koushikdutta.ion.conscrypt.ConscryptMiddleware:
    java.lang.String GMS_PROVIDER -> GMS_PROVIDER
    java.lang.String LOGTAG -> LOGTAG
    android.content.Context context -> context
    boolean enabled -> enabled
    boolean initialized -> initialized
    boolean instanceInitialized -> instanceInitialized
    java.lang.Object lock -> lock
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware middleware -> middleware
    boolean success -> success
    void <init>(android.content.Context,com.koushikdutta.async.http.AsyncSSLSocketMiddleware) -> <init>
    void enable(boolean) -> enable
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    void initialize() -> initialize
    void initialize(android.content.Context) -> initialize
    void <clinit>() -> <clinit>
net.margaritov.preference.colorpicker.ColorPickerPanelView -> net.margaritov.preference.colorpicker.ColorPickerPanelView:
    float BORDER_WIDTH_PX -> BORDER_WIDTH_PX
    net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern -> mAlphaPattern
    int mBorderColor -> mBorderColor
    android.graphics.Paint mBorderPaint -> mBorderPaint
    int mColor -> mColor
    android.graphics.Paint mColorPaint -> mColorPaint
    android.graphics.RectF mColorRect -> mColorRect
    float mDensity -> mDensity
    android.graphics.RectF mDrawingRect -> mDrawingRect
    void setColor(int) -> setColor
    int getColor() -> getColor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getBorderColor() -> getBorderColor
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setBorderColor(int) -> setBorderColor
    void setUpColorRect() -> setUpColorRect
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void fastForward() -> fastForward
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    java.lang.String getTag() -> getTag
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    void next() -> next
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void previous() -> previous
    void rate(android.support.v4.media.RatingCompat) -> rate
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    void <init>() -> <init>
    void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.AsyncSocketMiddleware$2 -> com.koushikdutta.async.http.AsyncSocketMiddleware$2:
    com.koushikdutta.async.http.AsyncSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.ArrayDeque val$sockets -> val$sockets
    com.koushikdutta.async.http.AsyncSocketMiddleware$IdleSocketHolder val$idleSocketHolder -> val$idleSocketHolder
    java.lang.String val$lookup -> val$lookup
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.ArrayDeque,com.koushikdutta.async.http.AsyncSocketMiddleware$IdleSocketHolder,java.lang.String) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB:
    void <init>() -> <init>
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl$1 -> com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl$1:
    com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.http.Protocol$1 -> com.koushikdutta.async.http.Protocol$1:
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    boolean needsSpdyConnection() -> needsSpdyConnection
com.koushikdutta.async.Util$4 -> com.koushikdutta.async.Util$4:
    com.koushikdutta.async.DataEmitter val$emitter -> val$emitter
    void <init>(com.koushikdutta.async.DataEmitter) -> <init>
    void onWriteable() -> onWriteable
com.koushikdutta.ion.gson.GsonParser -> com.koushikdutta.ion.gson.GsonParser:
    java.lang.Class clazz -> clazz
    java.nio.charset.Charset forcedCharset -> forcedCharset
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void <init>(java.lang.Class) -> <init>
    void <init>(java.lang.Class,java.nio.charset.Charset) -> <init>
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,com.google.gson.JsonElement,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
com.koushikdutta.async.http.socketio.SocketIOClient -> com.koushikdutta.async.http.socketio.SocketIOClient:
    java.lang.String endpoint -> endpoint
    boolean disconnected -> disconnected
    boolean connected -> connected
    com.koushikdutta.async.http.socketio.ConnectCallback connectCallback -> connectCallback
    com.koushikdutta.async.http.socketio.ReconnectCallback reconnectCallback -> reconnectCallback
    com.koushikdutta.async.http.socketio.JSONCallback jsonCallback -> jsonCallback
    com.koushikdutta.async.http.socketio.StringCallback stringCallback -> stringCallback
    com.koushikdutta.async.http.socketio.ErrorCallback errorCallback -> errorCallback
    com.koushikdutta.async.http.socketio.ExceptionCallback exceptionCallback -> exceptionCallback
    com.koushikdutta.async.http.socketio.SocketIOConnection connection -> connection
    com.koushikdutta.async.http.socketio.DisconnectCallback disconnectCallback -> disconnectCallback
    com.koushikdutta.async.http.socketio.DisconnectCallback getDisconnectCallback() -> getDisconnectCallback
    boolean isConnected() -> isConnected
    com.koushikdutta.async.future.Future connect(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.socketio.SocketIORequest,com.koushikdutta.async.http.socketio.ConnectCallback) -> connect
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,com.koushikdutta.async.http.socketio.ConnectCallback) -> <init>
    com.koushikdutta.async.future.Future connect(com.koushikdutta.async.http.AsyncHttpClient,java.lang.String,com.koushikdutta.async.http.socketio.ConnectCallback) -> connect
    void disconnect() -> disconnect
    void emit(java.lang.String) -> emit
    void emit(org.json.JSONObject) -> emit
    void emit(java.lang.String,org.json.JSONArray) -> emit
    void emit(java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> emit
    void emit(org.json.JSONObject,com.koushikdutta.async.http.socketio.Acknowledge) -> emit
    void emit(java.lang.String,org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> emit
    void emitEvent(java.lang.String) -> emitEvent
    void emitEvent(java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> emitEvent
    void emitRaw(int,java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> emitRaw
    com.koushikdutta.async.http.socketio.ErrorCallback getErrorCallback() -> getErrorCallback
    com.koushikdutta.async.http.socketio.ExceptionCallback getExceptionCallback() -> getExceptionCallback
    com.koushikdutta.async.http.socketio.JSONCallback getJSONCallback() -> getJSONCallback
    com.koushikdutta.async.http.socketio.ReconnectCallback getReconnectCallback() -> getReconnectCallback
    com.koushikdutta.async.http.socketio.StringCallback getStringCallback() -> getStringCallback
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport getTransport() -> getTransport
    void of(java.lang.String,com.koushikdutta.async.http.socketio.ConnectCallback) -> of
    void reconnect() -> reconnect
    void setDisconnectCallback(com.koushikdutta.async.http.socketio.DisconnectCallback) -> setDisconnectCallback
    void setErrorCallback(com.koushikdutta.async.http.socketio.ErrorCallback) -> setErrorCallback
    void setExceptionCallback(com.koushikdutta.async.http.socketio.ExceptionCallback) -> setExceptionCallback
    void setJSONCallback(com.koushikdutta.async.http.socketio.JSONCallback) -> setJSONCallback
    void setReconnectCallback(com.koushikdutta.async.http.socketio.ReconnectCallback) -> setReconnectCallback
    void setStringCallback(com.koushikdutta.async.http.socketio.StringCallback) -> setStringCallback
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.content.SharedPreferencesCompat$EditorCompat -> android.support.v4.content.SharedPreferencesCompat$EditorCompat:
    android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> mHelper
    android.support.v4.content.SharedPreferencesCompat$EditorCompat sInstance -> sInstance
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
    android.support.v4.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
com.koushikdutta.async.http.AsyncHttpClient$1 -> com.koushikdutta.async.http.AsyncHttpClient$1:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    int val$redirectCount -> val$redirectCount
    com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse val$cancel -> val$cancel
    com.koushikdutta.async.http.callback.HttpConnectCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback) -> <init>
    void run() -> run
com.koushikdutta.async.http.spdy.SpdyMiddleware$3 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$3:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    java.lang.String val$key -> val$key
    com.koushikdutta.async.callback.ConnectCallback val$superCallback -> val$superCallback
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware,java.lang.String,com.koushikdutta.async.callback.ConnectCallback) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSocket) -> onConnectCompleted
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean,android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal) -> <init>
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject:
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    java.security.Signature mSignature -> mSignature
    void <init>(java.security.Signature) -> <init>
    void <init>(javax.crypto.Cipher) -> <init>
    void <init>(javax.crypto.Mac) -> <init>
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
    java.security.Signature getSignature() -> getSignature
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Object mInner -> mInner
    java.lang.Object getToken() -> getToken
    void <init>(java.lang.Object) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.aokp.romcontrol.settings.MultiChoiceSetting$1 -> com.aokp.romcontrol.settings.MultiChoiceSetting$1:
    com.aokp.romcontrol.settings.MultiChoiceSetting this$0 -> this$0
    void <init>(com.aokp.romcontrol.settings.MultiChoiceSetting) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.koushikdutta.async.stream.InputStreamDataEmitter$1 -> com.koushikdutta.async.stream.InputStreamDataEmitter$1:
    com.koushikdutta.async.stream.InputStreamDataEmitter this$0 -> this$0
    void run() -> run
    void <init>(com.koushikdutta.async.stream.InputStreamDataEmitter) -> <init>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    void <init>() -> <init>
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.koushikdutta.async.AsyncServer$10 -> com.koushikdutta.async.AsyncServer$10:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    java.lang.String val$host -> val$host
    int val$port -> val$port
    com.koushikdutta.async.AsyncDatagramSocket val$handler -> val$handler
    java.nio.channels.DatagramChannel val$socket -> val$socket
    void <init>(com.koushikdutta.async.AsyncServer,java.lang.String,int,com.koushikdutta.async.AsyncDatagramSocket,java.nio.channels.DatagramChannel) -> <init>
    void run() -> run
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
com.koushikdutta.ion.future.ResponseFuture -> com.koushikdutta.ion.future.ResponseFuture:
    com.koushikdutta.async.future.Future withResponse() -> withResponse
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$1 -> this$1
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    void <init>(android.support.v4.print.PrintHelper$PrintHelperKitkatImpl,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> <init>
    void onFinish() -> onFinish
com.koushikdutta.async.http.socketio.DisconnectCallback -> com.koushikdutta.async.http.socketio.DisconnectCallback:
    void onDisconnect(java.lang.Exception) -> onDisconnect
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform:
    java.lang.Runnable cancelCallback -> cancelCallback
    com.koushikdutta.async.DataEmitter emitter -> emitter
    com.koushikdutta.async.http.AsyncHttpRequest finalRequest -> finalRequest
    com.koushikdutta.ion.HeadersResponse headers -> headers
    com.koushikdutta.async.http.AsyncHttpRequest initialRequest -> initialRequest
    com.koushikdutta.ion.ResponseServedFrom servedFrom -> servedFrom
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    boolean $assertionsDisabled -> $assertionsDisabled
    com.koushikdutta.async.future.Future withResponse() -> withResponse
    void transform(com.koushikdutta.ion.Loader$LoaderEmitter) -> transform
    void <init>(com.koushikdutta.ion.IonRequestBuilder,java.lang.Runnable) -> <init>
    void cancelCleanup() -> cancelCleanup
    void error(java.lang.Exception) -> error
    com.koushikdutta.ion.Response getResponse(java.lang.Exception,java.lang.Object) -> getResponse
    void transform(java.lang.Object) -> transform
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    boolean filter(android.view.View) -> filter
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    void colClear() -> colClear
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    java.util.Map colGetMap() -> colGetMap
    int colGetSize() -> colGetSize
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    void colRemoveAt(int) -> colRemoveAt
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
com.aokp.romcontrol.R$layout -> com.aokp.romcontrol.R$layout:
    int fragment_powermenu_settings -> fragment_powermenu_settings
    int fragment_navbar_arrange -> fragment_navbar_arrange
    int setting_category -> setting_category
    int setting_colorpicker -> setting_colorpicker
    int activity_main -> activity_main
    int fragment_statusbar_settings -> fragment_statusbar_settings
    int fragment_notificationsdrawer_settings -> fragment_notificationsdrawer_settings
    int setting_base -> setting_base
    int setting_checkbox -> setting_checkbox
    int dev_card -> dev_card
    int fragment_navbar_settings -> fragment_navbar_settings
    int row_navigation_drawer -> row_navigation_drawer
    int fragment_navigation_drawer -> fragment_navigation_drawer
    int fragment_animations_settings -> fragment_animations_settings
    int fragment_about_main -> fragment_about_main
    int fragment_about_aokp_crew -> fragment_about_aokp_crew
    int fragment_sound_settings -> fragment_sound_settings
    int dialog_color_picker -> dialog_color_picker
    int fragment_lockscreen_settings -> fragment_lockscreen_settings
    int fragment_general_settings -> fragment_general_settings
    int fragment_about_aokp -> fragment_about_aokp
    int fragment_navring_settings -> fragment_navring_settings
    int setting_switch -> setting_switch
    int alpha_seekbar -> alpha_seekbar
    int fragment_hardware_keys -> fragment_hardware_keys
    int fragment_window_settings -> fragment_window_settings
    int order_power_widget_button_list_item -> order_power_widget_button_list_item
    int order_power_widget_buttons_activity -> order_power_widget_buttons_activity
    void <init>() -> <init>
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    void <init>() -> <init>
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.koushikdutta.ion.loader.AssetLoader -> com.koushikdutta.ion.loader.AssetLoader:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    java.io.InputStream getInputStream(android.content.Context,java.lang.String) -> getInputStream
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
    void <init>() -> <init>
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    void <init>() -> <init>
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    void <init>() -> <init>
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse:
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry entry -> entry
    java.io.FileInputStream snapshot -> snapshot
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry,java.io.FileInputStream) -> <init>
    java.io.FileInputStream getBody() -> getBody
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getBody() -> getBody
com.koushikdutta.async.http.filter.GZIPInputFilter$1$1 -> com.koushikdutta.async.http.filter.GZIPInputFilter$1$1:
    com.koushikdutta.async.http.filter.GZIPInputFilter$1 this$1 -> this$1
    com.koushikdutta.async.PushParser val$parser -> val$parser
    void parsed(byte[]) -> parsed
    void <init>(com.koushikdutta.async.http.filter.GZIPInputFilter$1,com.koushikdutta.async.PushParser) -> <init>
    void parsed(java.lang.Object) -> parsed
com.koushikdutta.async.AsyncServer$6 -> com.koushikdutta.async.AsyncServer$6:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.AsyncServer$ConnectFuture val$cancel -> val$cancel
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    java.net.InetSocketAddress val$address -> val$address
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.AsyncServer$ConnectFuture,com.koushikdutta.async.callback.ConnectCallback,java.net.InetSocketAddress) -> <init>
    void run() -> run
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
    void <init>() -> <init>
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    void <init>() -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    void <init>() -> <init>
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
    void <clinit>() -> <clinit>
com.koushikdutta.ion.BitmapFetcher -> com.koushikdutta.ion.BitmapFetcher:
    int MAX_IMAGEVIEW_LOAD -> MAX_IMAGEVIEW_LOAD
    boolean animateGif -> animateGif
    java.lang.String bitmapKey -> bitmapKey
    com.koushikdutta.ion.IonRequestBuilder builder -> builder
    java.lang.String decodeKey -> decodeKey
    boolean deepZoom -> deepZoom
    boolean hasTransforms -> hasTransforms
    com.koushikdutta.ion.bitmap.BitmapInfo info -> info
    java.util.ArrayList postProcess -> postProcess
    int sampleHeight -> sampleHeight
    int sampleWidth -> sampleWidth
    java.util.ArrayList transforms -> transforms
    boolean fastLoad(java.lang.String) -> fastLoad
    void execute() -> execute
    void <init>() -> <init>
    com.koushikdutta.ion.DeferredLoadBitmap defer() -> defer
    void executeTransforms(com.koushikdutta.ion.Ion) -> executeTransforms
    boolean loadRequest(com.koushikdutta.async.http.AsyncHttpRequest) -> loadRequest
    void recomputeDecodeKey() -> recomputeDecodeKey
    boolean shouldDeferImageView(com.koushikdutta.ion.Ion) -> shouldDeferImageView
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int DEFAULT -> DEFAULT
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    java.lang.String capabilityToString(int) -> capabilityToString
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    void <clinit>() -> <clinit>
android.support.annotation.RawRes -> android.support.annotation.RawRes:
com.koushikdutta.ion.HeadersCallback -> com.koushikdutta.ion.HeadersCallback:
    void onHeaders(com.koushikdutta.ion.HeadersResponse) -> onHeaders
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void <init>() -> <init>
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    java.lang.String TAG -> TAG
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.ref.WeakReference mView -> mView
    void <init>(android.view.View) -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    void cancel() -> cancel
    long getDuration() -> getDuration
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    android.support.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
    void <clinit>() -> <clinit>
    java.lang.Runnable -get0(android.support.v4.view.ViewPropertyAnimatorCompat) -> -get0
    int -get1(android.support.v4.view.ViewPropertyAnimatorCompat) -> -get1
    java.lang.Runnable -get2(android.support.v4.view.ViewPropertyAnimatorCompat) -> -get2
    java.lang.Runnable -set0(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> -set0
    int -set1(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> -set1
    java.lang.Runnable -set2(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> -set2
android.support.v4.media.session.MediaSessionCompatApi14$Callback -> android.support.v4.media.session.MediaSessionCompatApi14$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onStop() -> onStop
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_COLLAPSE -> ACTION_COLLAPSE
    int ACTION_COPY -> ACTION_COPY
    int ACTION_CUT -> ACTION_CUT
    int ACTION_DISMISS -> ACTION_DISMISS
    int ACTION_EXPAND -> ACTION_EXPAND
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int FOCUS_INPUT -> FOCUS_INPUT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setParent(android.view.View) -> setParent
    void recycle() -> recycle
    void setClassName(java.lang.CharSequence) -> setClassName
    void setFocusable(boolean) -> setFocusable
    void setFocused(boolean) -> setFocused
    boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    void addChild(android.view.View) -> addChild
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isFocusable() -> isFocusable
    boolean isFocused() -> isFocused
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    int getActions() -> getActions
    void addAction(int) -> addAction
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    int getMovementGranularities() -> getMovementGranularities
    void setMovementGranularities(int) -> setMovementGranularities
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    void addChild(android.view.View,int) -> addChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    java.lang.CharSequence getText() -> getText
    void setSource(android.view.View,int) -> setSource
    void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    boolean canOpenPopup() -> canOpenPopup
    boolean equals(java.lang.Object) -> equals
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    java.util.List getActionList() -> getActionList
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    java.lang.CharSequence getError() -> getError
    android.os.Bundle getExtras() -> getExtras
    int getInputType() -> getInputType
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    int getLiveRegion() -> getLiveRegion
    int getMaxTextLength() -> getMaxTextLength
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    int getTextSelectionEnd() -> getTextSelectionEnd
    int getTextSelectionStart() -> getTextSelectionStart
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    int getWindowId() -> getWindowId
    int hashCode() -> hashCode
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isContentInvalid() -> isContentInvalid
    boolean isDismissable() -> isDismissable
    boolean isEditable() -> isEditable
    boolean isMultiLine() -> isMultiLine
    boolean isPassword() -> isPassword
    boolean isScrollable() -> isScrollable
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    boolean refresh() -> refresh
    boolean removeChild(android.view.View) -> removeChild
    boolean removeChild(android.view.View,int) -> removeChild
    void setCanOpenPopup(boolean) -> setCanOpenPopup
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(boolean) -> setContentInvalid
    void setDismissable(boolean) -> setDismissable
    void setEditable(boolean) -> setEditable
    void setError(java.lang.CharSequence) -> setError
    void setInputType(int) -> setInputType
    void setLabelFor(android.view.View) -> setLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLabeledBy(android.view.View) -> setLabeledBy
    void setLabeledBy(android.view.View,int) -> setLabeledBy
    void setLiveRegion(int) -> setLiveRegion
    void setMaxTextLength(int) -> setMaxTextLength
    void setMultiLine(boolean) -> setMultiLine
    void setParent(android.view.View,int) -> setParent
    void setPassword(boolean) -> setPassword
    void setRangeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    void setScrollable(boolean) -> setScrollable
    void setText(java.lang.CharSequence) -> setText
    void setTextSelection(int,int) -> setTextSelection
    void setTraversalAfter(android.view.View) -> setTraversalAfter
    void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    void setTraversalBefore(android.view.View) -> setTraversalBefore
    void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -get0() -> -get0
com.koushikdutta.async.PushParser$4 -> com.koushikdutta.async.PushParser$4:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int scrollPosition -> scrollPosition
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    boolean mEntryValid -> mEntryValid
    int mIndex -> mIndex
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean hasNext() -> hasNext
    int hashCode() -> hashCode
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void <init>() -> <init>
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    void <init>(android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl) -> <init>
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
    void <init>() -> <init>
com.koushikdutta.async.http.body.FilePart$1 -> com.koushikdutta.async.http.body.FilePart$1:
    java.io.File val$file -> val$file
    void <init>(java.io.File) -> <init>
com.koushikdutta.async.http.AsyncSSLSocketMiddleware$1 -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware$1:
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.AsyncSSLSocketMiddleware,com.koushikdutta.async.callback.ConnectCallback) -> <init>
    void onHandshakeCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> onHandshakeCompleted
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    void <clinit>() -> <clinit>
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    android.widget.ListAdapter mAdapter -> mAdapter
    java.lang.CharSequence mEmptyText -> mEmptyText
    android.view.View mEmptyView -> mEmptyView
    android.os.Handler mHandler -> mHandler
    android.widget.ListView mList -> mList
    android.view.View mListContainer -> mListContainer
    boolean mListShown -> mListShown
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.view.View mProgressContainer -> mProgressContainer
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    void <init>() -> <init>
    void ensureList() -> ensureList
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    android.widget.ListView getListView() -> getListView
    long getSelectedItemId() -> getSelectedItemId
    int getSelectedItemPosition() -> getSelectedItemPosition
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setListShown(boolean) -> setListShown
    void setListShown(boolean,boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setSelection(int) -> setSelection
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    boolean mAttached -> mAttached
    int mContainerId -> mContainerId
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    java.util.ArrayList mTabs -> mTabs
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
    void ensureContent() -> ensureContent
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22:
    void <init>() -> <init>
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.view.ViewPropertyAnimatorCompatLollipop -> android.support.v4.view.ViewPropertyAnimatorCompatLollipop:
    void <init>() -> <init>
    void translationZ(android.view.View,float) -> translationZ
    void translationZBy(android.view.View,float) -> translationZBy
    void z(android.view.View,float) -> z
    void zBy(android.view.View,float) -> zBy
com.koushikdutta.async.http.socketio.SocketIOConnection$11 -> com.koushikdutta.async.http.socketio.SocketIOConnection$11:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    java.lang.String val$endpoint -> val$endpoint
    java.lang.String val$messageId -> val$messageId
    void acknowledge(org.json.JSONArray) -> acknowledge
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,java.lang.String) -> <init>
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.graphics.drawable.DrawableCompatApi23 -> android.support.v4.graphics.drawable.DrawableCompatApi23:
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
com.koushikdutta.async.http.AsyncHttpClient$8 -> com.koushikdutta.async.http.AsyncHttpClient$8:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse val$cancel -> val$cancel
    java.io.OutputStream val$fout -> val$fout
    java.io.File val$file -> val$file
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,java.io.OutputStream,java.io.File) -> <init>
    void cancelCleanup() -> cancelCleanup
com.koushikdutta.async.http.socketio.SocketIOConnection$12 -> com.koushikdutta.async.http.socketio.SocketIOConnection$12:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void <clinit>() -> <clinit>
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$1 -> this$1
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> <init>
    boolean onClose() -> onClose
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    void <init>() -> <init>
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.koushikdutta.async.ArrayDeque -> com.koushikdutta.async.ArrayDeque:
    int MIN_INITIAL_CAPACITY -> MIN_INITIAL_CAPACITY
    java.lang.Object[] elements -> elements
    int head -> head
    long serialVersionUID -> serialVersionUID
    int tail -> tail
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    boolean add(java.lang.Object) -> add
    boolean isEmpty() -> isEmpty
    java.lang.Object pop() -> pop
    java.lang.Object peekLast() -> peekLast
    void push(java.lang.Object) -> push
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    java.lang.Object remove() -> remove
    java.lang.Object peek() -> peek
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    void addFirst(java.lang.Object) -> addFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object getFirst() -> getFirst
    void <init>(int) -> <init>
    void <init>(java.util.Collection) -> <init>
    void addLast(java.lang.Object) -> addLast
    void allocateElements(int) -> allocateElements
    void checkInvariants() -> checkInvariants
    com.koushikdutta.async.ArrayDeque clone() -> clone
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] copyElements(java.lang.Object[]) -> copyElements
    boolean delete(int) -> delete
    java.util.Iterator descendingIterator() -> descendingIterator
    void doubleCapacity() -> doubleCapacity
    java.lang.Object element() -> element
    java.util.Iterator iterator() -> iterator
    boolean offer(java.lang.Object) -> offer
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object poll() -> poll
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object removeFirst() -> removeFirst
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    java.lang.Object removeLast() -> removeLast
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    java.lang.Object[] toArray() -> toArray
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void <clinit>() -> <clinit>
    java.lang.Object clone() -> clone
    java.lang.Object[] -get0(com.koushikdutta.async.ArrayDeque) -> -get0
    int -get1(com.koushikdutta.async.ArrayDeque) -> -get1
    int -get2(com.koushikdutta.async.ArrayDeque) -> -get2
    boolean -wrap0(com.koushikdutta.async.ArrayDeque,int) -> -wrap0
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$2 -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$2:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> this$0
    int val$position -> val$position
    void <init>(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int) -> <init>
    void onClick(android.view.View) -> onClick
com.koushikdutta.async.http.spdy.SpdyMiddleware$1 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$1:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware) -> <init>
    void configureEngine(javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> configureEngine
com.koushikdutta.async.http.AsyncHttpClient$9 -> com.koushikdutta.async.http.AsyncHttpClient$9:
    long mDownloaded -> mDownloaded
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    java.io.OutputStream val$fout -> val$fout
    java.io.File val$file -> val$file
    com.koushikdutta.async.http.AsyncHttpClient$FileCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,java.io.OutputStream,java.io.File,com.koushikdutta.async.http.AsyncHttpClient$FileCallback,com.koushikdutta.async.future.SimpleFuture) -> <init>
com.koushikdutta.async.http.body.JSONArrayBody$1 -> com.koushikdutta.async.http.body.JSONArrayBody$1:
    com.koushikdutta.async.http.body.JSONArrayBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    void <init>(com.koushikdutta.async.http.body.JSONArrayBody,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception,org.json.JSONArray) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.parser.JSONObjectParser$1 -> com.koushikdutta.async.parser.JSONObjectParser$1:
    com.koushikdutta.async.parser.JSONObjectParser this$0 -> this$0
    void <init>(com.koushikdutta.async.parser.JSONObjectParser) -> <init>
    void transform(java.lang.String) -> transform
    void transform(java.lang.Object) -> transform
com.koushikdutta.async.AsyncSSLSocketWrapper$2 -> com.koushikdutta.async.AsyncSSLSocketWrapper$2:
    com.koushikdutta.async.util.Allocator allocator -> allocator
    com.koushikdutta.async.ByteBufferList buffered -> buffered
    com.koushikdutta.async.AsyncSSLSocketWrapper this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncSSLSocketWrapper) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.ion.future.ImageViewFuture -> com.koushikdutta.ion.future.ImageViewFuture:
    com.koushikdutta.async.future.Future withBitmapInfo() -> withBitmapInfo
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
com.koushikdutta.async.parser.DocumentParser -> com.koushikdutta.async.parser.DocumentParser:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,org.w3c.dom.Document,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl:
    void <init>() -> <init>
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    int getId(java.lang.Object) -> getId
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    int getType(java.lang.Object) -> getType
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void <init>(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl) -> <init>
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    void <init>() -> <init>
    long getLatestTimestamp() -> getLatestTimestamp
    java.lang.String[] getMessages() -> getMessages
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getParticipants() -> getParticipants
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
com.koushikdutta.ion.IonRequestBuilder$7 -> com.koushikdutta.ion.IonRequestBuilder$7:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void <init>(com.koushikdutta.ion.IonRequestBuilder) -> <init>
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,byte[],com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    void popBackStack(int,int) -> popBackStack
    void <init>() -> <init>
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    boolean isDestroyed() -> isDestroyed
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    void popBackStack() -> popBackStack
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
com.koushikdutta.async.http.socketio.EventEmitter$OnceCallback -> com.koushikdutta.async.http.socketio.EventEmitter$OnceCallback:
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    void <clinit>() -> <clinit>
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> mDelegateFactory
    void <init>(android.support.v4.view.LayoutInflaterFactory) -> <init>
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnBodyDataOnRequestSentData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnBodyDataOnRequestSentData:
    com.koushikdutta.async.DataEmitter bodyEmitter -> bodyEmitter
    void <init>() -> <init>
com.koushikdutta.async.http.spdy.Util -> com.koushikdutta.async.http.spdy.Util:
    java.util.List immutableList(java.lang.Object[]) -> immutableList
    void <init>() -> <init>
    void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    java.util.List immutableList(java.util.List) -> immutableList
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    void <init>() -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$1 -> this$1
    void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    void run() -> run
com.koushikdutta.async.util.FileCache$1 -> com.koushikdutta.async.util.FileCache$1:
    com.koushikdutta.async.util.FileCache this$0 -> this$0
    void <init>(com.koushikdutta.async.util.FileCache) -> <init>
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    void <init>() -> <init>
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void bindTempDetach() -> bindTempDetach
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollHorizontally
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollVertically
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    float getElevation(android.view.View) -> getElevation
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    int getLabelFor(android.view.View) -> getLabelFor
    int getLayerType(android.view.View) -> getLayerType
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    int getPaddingStart(android.view.View) -> getPaddingStart
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getTranslationZ(android.view.View) -> getTranslationZ
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getZ(android.view.View) -> getZ
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean hasTransientState(android.view.View) -> hasTransientState
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean isOpaque(android.view.View) -> isOpaque
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setActivated(android.view.View,boolean) -> setActivated
    void setAlpha(android.view.View,float) -> setAlpha
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    void setElevation(android.view.View,float) -> setElevation
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    void <init>() -> <init>
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    void <init>() -> <init>
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
com.koushikdutta.async.http.WebSocketImpl -> com.koushikdutta.async.http.WebSocketImpl:
    java.lang.String MAGIC -> MAGIC
    com.koushikdutta.async.callback.DataCallback mDataCallback -> mDataCallback
    com.koushikdutta.async.callback.CompletedCallback mExceptionCallback -> mExceptionCallback
    com.koushikdutta.async.http.HybiParser mParser -> mParser
    com.koushikdutta.async.http.WebSocket$PingCallback mPingCallback -> mPingCallback
    com.koushikdutta.async.http.WebSocket$PongCallback mPongCallback -> mPongCallback
    com.koushikdutta.async.BufferedDataSink mSink -> mSink
    com.koushikdutta.async.AsyncSocket mSocket -> mSocket
    com.koushikdutta.async.http.WebSocket$StringCallback mStringCallback -> mStringCallback
    java.util.LinkedList pending -> pending
    void setupParser(boolean,boolean) -> setupParser
    void <init>(com.koushikdutta.async.AsyncSocket) -> <init>
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> <init>
    java.lang.String SHA1(java.lang.String) -> SHA1
    void addAndEmit(com.koushikdutta.async.ByteBufferList) -> addAndEmit
    void addWebSocketUpgradeHeaders(com.koushikdutta.async.http.AsyncHttpRequest,java.lang.String) -> addWebSocketUpgradeHeaders
    java.lang.String charset() -> charset
    void close() -> close
    void end() -> end
    com.koushikdutta.async.http.WebSocket finishHandshake(com.koushikdutta.async.http.Headers,com.koushikdutta.async.http.AsyncHttpResponse) -> finishHandshake
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    com.koushikdutta.async.http.WebSocket$PongCallback getPongCallback() -> getPongCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    com.koushikdutta.async.http.WebSocket$StringCallback getStringCallback() -> getStringCallback
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isBuffering() -> isBuffering
    boolean isChunked() -> isChunked
    boolean isOpen() -> isOpen
    boolean isPaused() -> isPaused
    void pause() -> pause
    void ping(java.lang.String) -> ping
    void resume() -> resume
    void send(byte[]) -> send
    void send(java.lang.String) -> send
    void send(byte[],int,int) -> send
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    void setPingCallback(com.koushikdutta.async.http.WebSocket$PingCallback) -> setPingCallback
    void setPongCallback(com.koushikdutta.async.http.WebSocket$PongCallback) -> setPongCallback
    void setStringCallback(com.koushikdutta.async.http.WebSocket$StringCallback) -> setStringCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    byte[] toByteArray(java.util.UUID) -> toByteArray
    void write(com.koushikdutta.async.ByteBufferList) -> write
    com.koushikdutta.async.http.WebSocket$PingCallback -get0(com.koushikdutta.async.http.WebSocketImpl) -> -get0
    com.koushikdutta.async.http.WebSocket$PongCallback -get1(com.koushikdutta.async.http.WebSocketImpl) -> -get1
    com.koushikdutta.async.AsyncSocket -get2(com.koushikdutta.async.http.WebSocketImpl) -> -get2
    com.koushikdutta.async.http.WebSocket$StringCallback -get3(com.koushikdutta.async.http.WebSocketImpl) -> -get3
    void -wrap0(com.koushikdutta.async.http.WebSocketImpl,com.koushikdutta.async.ByteBufferList) -> -wrap0
com.koushikdutta.ion.IonBitmapRequestBuilder -> com.koushikdutta.ion.IonBitmapRequestBuilder:
    com.koushikdutta.ion.Ion ion -> ion
    com.koushikdutta.async.future.SimpleFuture FUTURE_BITMAP_NULL_URI -> FUTURE_BITMAP_NULL_URI
    com.koushikdutta.ion.builder.AnimateGifMode animateGifMode -> animateGifMode
    com.koushikdutta.ion.IonRequestBuilder builder -> builder
    boolean deepZoom -> deepZoom
    java.util.ArrayList postProcess -> postProcess
    int resizeHeight -> resizeHeight
    int resizeWidth -> resizeWidth
    com.koushikdutta.ion.ScaleMode scaleMode -> scaleMode
    java.util.ArrayList transforms -> transforms
    boolean -assertionsDisabled -> -assertionsDisabled
    java.lang.String computeDecodeKey(com.koushikdutta.ion.IonRequestBuilder,int,int,boolean,boolean) -> computeDecodeKey
    java.lang.String computeBitmapKey(java.lang.String,java.util.List) -> computeBitmapKey
    com.koushikdutta.ion.bitmap.BitmapInfo asCachedBitmap() -> asCachedBitmap
    com.koushikdutta.ion.bitmap.LocallyCachedStatus isLocallyCached() -> isLocallyCached
    com.koushikdutta.async.future.Future asBitmap() -> asBitmap
    void doAnimation(android.widget.ImageView,android.view.animation.Animation,int) -> doAnimation
    void <init>(com.koushikdutta.ion.IonRequestBuilder) -> <init>
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    void addDefaultTransform() -> addDefaultTransform
    com.koushikdutta.ion.IonBitmapRequestBuilder animateGif(com.koushikdutta.ion.builder.AnimateGifMode) -> animateGif
    com.koushikdutta.ion.IonBitmapRequestBuilder centerCrop() -> centerCrop
    com.koushikdutta.ion.IonBitmapRequestBuilder centerInside() -> centerInside
    void checkNoTransforms(java.lang.String) -> checkNoTransforms
    java.lang.String computeBitmapKey(java.lang.String) -> computeBitmapKey
    java.lang.String computeDecodeKey() -> computeDecodeKey
    com.koushikdutta.ion.IonBitmapRequestBuilder deepZoom() -> deepZoom
    com.koushikdutta.ion.IonRequestBuilder ensureBuilder() -> ensureBuilder
    com.koushikdutta.ion.BitmapFetcher executeCache() -> executeCache
    com.koushikdutta.ion.BitmapFetcher executeCache(int,int) -> executeCache
    com.koushikdutta.ion.IonBitmapRequestBuilder fitCenter() -> fitCenter
    com.koushikdutta.ion.IonBitmapRequestBuilder fitXY() -> fitXY
    boolean hasTransforms() -> hasTransforms
    com.koushikdutta.ion.IonBitmapRequestBuilder postProcess(com.koushikdutta.ion.bitmap.PostProcess) -> postProcess
    void reset() -> reset
    com.koushikdutta.ion.IonBitmapRequestBuilder resize(int,int) -> resize
    com.koushikdutta.ion.IonBitmapRequestBuilder resizeHeight(int) -> resizeHeight
    com.koushikdutta.ion.IonBitmapRequestBuilder resizeWidth(int) -> resizeWidth
    com.koushikdutta.ion.IonBitmapRequestBuilder smartSize(boolean) -> smartSize
    com.koushikdutta.ion.IonBitmapRequestBuilder transform(com.koushikdutta.ion.bitmap.Transform) -> transform
    void <clinit>() -> <clinit>
    com.koushikdutta.ion.builder.BitmapBuilder resizeHeight(int) -> resizeHeight
    com.koushikdutta.ion.builder.BitmapBuilder smartSize(boolean) -> smartSize
    com.koushikdutta.ion.builder.BitmapBuilder fitCenter() -> fitCenter
    com.koushikdutta.ion.builder.BitmapBuilder transform(com.koushikdutta.ion.bitmap.Transform) -> transform
    com.koushikdutta.ion.builder.BitmapBuilder centerInside() -> centerInside
    com.koushikdutta.ion.builder.BitmapBuilder resizeWidth(int) -> resizeWidth
    com.koushikdutta.ion.builder.ImageViewBuilder deepZoom() -> deepZoom
    com.koushikdutta.ion.builder.BitmapBuilder resize(int,int) -> resize
    com.koushikdutta.ion.builder.BitmapBuilder centerCrop() -> centerCrop
    com.koushikdutta.ion.builder.BitmapBuilder fitXY() -> fitXY
    com.koushikdutta.ion.builder.BitmapBuilder postProcess(com.koushikdutta.ion.bitmap.PostProcess) -> postProcess
    com.koushikdutta.ion.builder.ImageViewBuilder animateGif(com.koushikdutta.ion.builder.AnimateGifMode) -> animateGif
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    int charIndex -> charIndex
    boolean isHtml -> isHtml
    char lastChar -> lastChar
    int length -> length
    java.lang.String text -> text
    void <init>(java.lang.String,boolean) -> <init>
    byte dirTypeBackward() -> dirTypeBackward
    byte dirTypeForward() -> dirTypeForward
    byte getCachedDirectionality(char) -> getCachedDirectionality
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte skipEntityBackward() -> skipEntityBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipTagBackward() -> skipTagBackward
    byte skipTagForward() -> skipTagForward
    void <clinit>() -> <clinit>
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    java.util.WeakHashMap sInstances -> sInstances
    void <init>() -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.filter.PrematureDataEndException -> com.koushikdutta.async.http.filter.PrematureDataEndException:
    void <init>(java.lang.String) -> <init>
com.koushikdutta.async.DataTrackingEmitter -> com.koushikdutta.async.DataTrackingEmitter:
    int getBytesRead() -> getBytesRead
    com.koushikdutta.async.DataTrackingEmitter$DataTracker getDataTracker() -> getDataTracker
    void setDataEmitter(com.koushikdutta.async.DataEmitter) -> setDataEmitter
    void setDataTracker(com.koushikdutta.async.DataTrackingEmitter$DataTracker) -> setDataTracker
android.support.v4.app.BundleCompat -> android.support.v4.app.BundleCompat:
    void <init>() -> <init>
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
com.koushikdutta.ion.gson.GsonParser$1 -> com.koushikdutta.ion.gson.GsonParser$1:
    com.koushikdutta.ion.gson.GsonParser this$0 -> this$0
    java.lang.String val$charset -> val$charset
    void <init>(com.koushikdutta.ion.gson.GsonParser,java.lang.String) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
com.koushikdutta.ion.loader.MediaFile -> com.koushikdutta.ion.loader.MediaFile:
    int FILE_TYPE_3GPA -> FILE_TYPE_3GPA
    int FILE_TYPE_3GPP -> FILE_TYPE_3GPP
    int FILE_TYPE_3GPP2 -> FILE_TYPE_3GPP2
    int FILE_TYPE_AAC -> FILE_TYPE_AAC
    int FILE_TYPE_AC3 -> FILE_TYPE_AC3
    int FILE_TYPE_AMR -> FILE_TYPE_AMR
    int FILE_TYPE_ASF -> FILE_TYPE_ASF
    int FILE_TYPE_AVI -> FILE_TYPE_AVI
    int FILE_TYPE_AWB -> FILE_TYPE_AWB
    int FILE_TYPE_BMP -> FILE_TYPE_BMP
    int FILE_TYPE_DIVX -> FILE_TYPE_DIVX
    int FILE_TYPE_DTS -> FILE_TYPE_DTS
    int FILE_TYPE_EC3 -> FILE_TYPE_EC3
    int FILE_TYPE_FL -> FILE_TYPE_FL
    int FILE_TYPE_FLAC -> FILE_TYPE_FLAC
    int FILE_TYPE_GIF -> FILE_TYPE_GIF
    int FILE_TYPE_HTML -> FILE_TYPE_HTML
    int FILE_TYPE_HTTPLIVE -> FILE_TYPE_HTTPLIVE
    int FILE_TYPE_IMY -> FILE_TYPE_IMY
    int FILE_TYPE_JPEG -> FILE_TYPE_JPEG
    int FILE_TYPE_M3U -> FILE_TYPE_M3U
    int FILE_TYPE_M4A -> FILE_TYPE_M4A
    int FILE_TYPE_M4V -> FILE_TYPE_M4V
    int FILE_TYPE_MID -> FILE_TYPE_MID
    int FILE_TYPE_MKA -> FILE_TYPE_MKA
    int FILE_TYPE_MKV -> FILE_TYPE_MKV
    int FILE_TYPE_MP2PS -> FILE_TYPE_MP2PS
    int FILE_TYPE_MP2TS -> FILE_TYPE_MP2TS
    int FILE_TYPE_MP3 -> FILE_TYPE_MP3
    int FILE_TYPE_MP4 -> FILE_TYPE_MP4
    int FILE_TYPE_MS_EXCEL -> FILE_TYPE_MS_EXCEL
    int FILE_TYPE_MS_POWERPOINT -> FILE_TYPE_MS_POWERPOINT
    int FILE_TYPE_MS_WORD -> FILE_TYPE_MS_WORD
    int FILE_TYPE_OGG -> FILE_TYPE_OGG
    int FILE_TYPE_PCM -> FILE_TYPE_PCM
    int FILE_TYPE_PDF -> FILE_TYPE_PDF
    int FILE_TYPE_PLS -> FILE_TYPE_PLS
    int FILE_TYPE_PNG -> FILE_TYPE_PNG
    int FILE_TYPE_QCP -> FILE_TYPE_QCP
    int FILE_TYPE_SMF -> FILE_TYPE_SMF
    int FILE_TYPE_TEXT -> FILE_TYPE_TEXT
    int FILE_TYPE_WAV -> FILE_TYPE_WAV
    int FILE_TYPE_WBMP -> FILE_TYPE_WBMP
    int FILE_TYPE_WEBM -> FILE_TYPE_WEBM
    int FILE_TYPE_WEBMA -> FILE_TYPE_WEBMA
    int FILE_TYPE_WEBP -> FILE_TYPE_WEBP
    int FILE_TYPE_WMA -> FILE_TYPE_WMA
    int FILE_TYPE_WMV -> FILE_TYPE_WMV
    int FILE_TYPE_WPL -> FILE_TYPE_WPL
    int FILE_TYPE_XML -> FILE_TYPE_XML
    int FILE_TYPE_ZIP -> FILE_TYPE_ZIP
    int FIRST_AUDIO_FILE_TYPE -> FIRST_AUDIO_FILE_TYPE
    int FIRST_AUDIO_FILE_TYPE2 -> FIRST_AUDIO_FILE_TYPE2
    int FIRST_DRM_FILE_TYPE -> FIRST_DRM_FILE_TYPE
    int FIRST_IMAGE_FILE_TYPE -> FIRST_IMAGE_FILE_TYPE
    int FIRST_MIDI_FILE_TYPE -> FIRST_MIDI_FILE_TYPE
    int FIRST_PLAYLIST_FILE_TYPE -> FIRST_PLAYLIST_FILE_TYPE
    int FIRST_VIDEO_FILE_TYPE -> FIRST_VIDEO_FILE_TYPE
    int FIRST_VIDEO_FILE_TYPE2 -> FIRST_VIDEO_FILE_TYPE2
    int LAST_AUDIO_FILE_TYPE -> LAST_AUDIO_FILE_TYPE
    int LAST_AUDIO_FILE_TYPE2 -> LAST_AUDIO_FILE_TYPE2
    int LAST_DRM_FILE_TYPE -> LAST_DRM_FILE_TYPE
    int LAST_IMAGE_FILE_TYPE -> LAST_IMAGE_FILE_TYPE
    int LAST_MIDI_FILE_TYPE -> LAST_MIDI_FILE_TYPE
    int LAST_PLAYLIST_FILE_TYPE -> LAST_PLAYLIST_FILE_TYPE
    int LAST_VIDEO_FILE_TYPE -> LAST_VIDEO_FILE_TYPE
    int LAST_VIDEO_FILE_TYPE2 -> LAST_VIDEO_FILE_TYPE2
    java.util.HashMap sFileTypeMap -> sFileTypeMap
    java.util.HashMap sFileTypeToFormatMap -> sFileTypeToFormatMap
    java.util.HashMap sFormatToMimeTypeMap -> sFormatToMimeTypeMap
    java.util.HashMap sMimeTypeMap -> sMimeTypeMap
    java.util.HashMap sMimeTypeToExtensionMap -> sMimeTypeToExtensionMap
    java.util.HashMap sMimeTypeToFormatMap -> sMimeTypeToFormatMap
    com.koushikdutta.ion.loader.MediaFile$MediaFileType getFileType(java.lang.String) -> getFileType
    boolean isVideoFileType(int) -> isVideoFileType
    void <init>() -> <init>
    void addFileType(java.lang.String,int,java.lang.String) -> addFileType
    void addFileType(java.lang.String,int,java.lang.String,int) -> addFileType
    java.lang.String getExtensionForMimeType(java.lang.String) -> getExtensionForMimeType
    java.lang.String getFileTitle(java.lang.String) -> getFileTitle
    int getFileTypeForMimeType(java.lang.String) -> getFileTypeForMimeType
    int getFormatCode(java.lang.String,java.lang.String) -> getFormatCode
    java.lang.String getMimeTypeForFile(java.lang.String) -> getMimeTypeForFile
    java.lang.String getMimeTypeForFormatCode(int) -> getMimeTypeForFormatCode
    boolean isAudioFileType(int) -> isAudioFileType
    boolean isDrmFileType(int) -> isDrmFileType
    boolean isImageFileType(int) -> isImageFileType
    boolean isMimeTypeMedia(java.lang.String) -> isMimeTypeMedia
    boolean isPlayListFileType(int) -> isPlayListFileType
    void <clinit>() -> <clinit>
com.koushikdutta.async.AsyncSocket -> com.koushikdutta.async.AsyncSocket:
    com.koushikdutta.async.AsyncServer getServer() -> getServer
com.koushikdutta.async.callback.ConnectCallback -> com.koushikdutta.async.callback.ConnectCallback:
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSocket) -> onConnectCompleted
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.TextViewCompatJbMr2:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper:
    android.support.v4.animation.ValueAnimatorCompat mValueAnimatorCompat -> mValueAnimatorCompat
    android.support.v4.animation.AnimatorListenerCompat mWrapped -> mWrapped
    void <init>(android.support.v4.animation.AnimatorListenerCompat,android.support.v4.animation.ValueAnimatorCompat) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.koushikdutta.async.future.FutureThread -> com.koushikdutta.async.future.FutureThread:
    void <init>(java.util.concurrent.ExecutorService,com.koushikdutta.async.future.FutureRunnable) -> <init>
    void <init>(com.koushikdutta.async.future.FutureRunnable,java.lang.String) -> <init>
    void <init>(com.koushikdutta.async.future.FutureRunnable) -> <init>
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData:
    void <init>() -> <init>
com.koushikdutta.async.http.AsyncHttpClient$2 -> com.koushikdutta.async.http.AsyncHttpClient$2:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData val$data -> val$data
    com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse val$cancel -> val$cancel
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.async.http.callback.HttpConnectCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.callback.HttpConnectCallback) -> <init>
    void run() -> run
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    void <init>() -> <init>
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    void <init>() -> <init>
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    void <init>() -> <init>
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,android.graphics.Bitmap,int,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> <init>
    void onFinish() -> onFinish
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    void <init>(java.lang.String,int) -> <init>
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
android.support.v4.media.session.PlaybackStateCompat$State -> android.support.v4.media.session.PlaybackStateCompat$State:
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
com.koushikdutta.async.PushParser$5 -> com.koushikdutta.async.PushParser$5:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.aokp.romcontrol.fragments.about.AboutFragment -> com.aokp.romcontrol.fragments.about.AboutFragment:
    java.lang.String MGERRIT -> MGERRIT
    java.lang.String MGERRIT_AOKP_CHANGELOG -> MGERRIT_AOKP_CHANGELOG
    java.lang.String MGERRIT_MAIN_ENTRY -> MGERRIT_MAIN_ENTRY
    java.lang.String MGERRIT_PLAYSTORE -> MGERRIT_PLAYSTORE
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void launchActivity(java.lang.String,java.lang.String) -> launchActivity
    void launchUrl(java.lang.String) -> launchUrl
    void -wrap0(com.aokp.romcontrol.fragments.about.AboutFragment,java.lang.String,java.lang.String) -> -wrap0
    void -wrap1(com.aokp.romcontrol.fragments.about.AboutFragment,java.lang.String) -> -wrap1
com.koushikdutta.async.http.body.MultipartFormDataBody$MultipartCallback -> com.koushikdutta.async.http.body.MultipartFormDataBody$MultipartCallback:
    void onPart(com.koushikdutta.async.http.body.Part) -> onPart
com.koushikdutta.async.http.filter.DataRemainingException -> com.koushikdutta.async.http.filter.DataRemainingException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediator) -> <init>
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
com.koushikdutta.async.BufferedDataEmitter$1 -> com.koushikdutta.async.BufferedDataEmitter$1:
    com.koushikdutta.async.BufferedDataEmitter this$0 -> this$0
    void <init>(com.koushikdutta.async.BufferedDataEmitter) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.reflect.Type) -> <init>
    boolean equals(java.lang.Object) -> equals
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.koushikdutta.async.ArrayDeque$DeqIterator -> com.koushikdutta.async.ArrayDeque$DeqIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.koushikdutta.async.ArrayDeque this$0 -> this$0
    void <init>(com.koushikdutta.async.ArrayDeque) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void <init>(com.koushikdutta.async.ArrayDeque,com.koushikdutta.async.ArrayDeque$DeqIterator) -> <init>
com.koushikdutta.async.PushParser$ByteArrayWaiter -> com.koushikdutta.async.PushParser$ByteArrayWaiter:
    com.koushikdutta.async.PushParser$ParseCallback callback -> callback
    void <init>(int,com.koushikdutta.async.PushParser$ParseCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    void <init>() -> <init>
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
com.koushikdutta.async.http.Headers -> com.koushikdutta.async.http.Headers:
    com.koushikdutta.async.http.Multimap map -> map
    java.lang.String get(java.lang.String) -> get
    com.koushikdutta.async.http.Headers set(java.lang.String,java.lang.String) -> set
    com.koushikdutta.async.http.Multimap getMultiMap() -> getMultiMap
    void <init>() -> <init>
    com.koushikdutta.async.http.Headers add(java.lang.String,java.lang.String) -> add
    java.lang.String remove(java.lang.String) -> remove
    java.lang.String toPrefixString(java.lang.String) -> toPrefixString
    void <init>(java.util.Map) -> <init>
    com.koushikdutta.async.http.Headers addAll(java.util.Map) -> addAll
    com.koushikdutta.async.http.Headers addAll(com.koushikdutta.async.http.Headers) -> addAll
    com.koushikdutta.async.http.Headers addAll(java.lang.String,java.util.List) -> addAll
    com.koushikdutta.async.http.Headers addLine(java.lang.String) -> addLine
    java.util.List getAll(java.lang.String) -> getAll
    com.koushikdutta.async.http.Headers parse(java.lang.String) -> parse
    java.util.List removeAll(java.lang.String) -> removeAll
    com.koushikdutta.async.http.Headers removeAll(java.util.Collection) -> removeAll
    java.lang.String toString() -> toString
    java.lang.StringBuilder toStringBuilder() -> toStringBuilder
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    void <init>() -> <init>
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getAlpha(android.view.View) -> getAlpha
    long getFrameTime() -> getFrameTime
    int getLayerType(android.view.View) -> getLayerType
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void setActivated(android.view.View,boolean) -> setActivated
    void setAlpha(android.view.View,float) -> setAlpha
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
com.koushikdutta.ion.bitmap.MarkableInputStream -> com.koushikdutta.ion.bitmap.MarkableInputStream:
    long defaultMark -> defaultMark
    java.io.InputStream in -> in
    long limit -> limit
    long offset -> offset
    long reset -> reset
    void <init>(java.io.InputStream) -> <init>
    void mark(int) -> mark
    int read(byte[]) -> read
    void reset() -> reset
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    void reset(long) -> reset
    long savePosition(int) -> savePosition
    void setLimit(long) -> setLimit
    long skip(long) -> skip
    void skip(long,long) -> skip
android.support.annotation.RequiresPermission$Write -> android.support.annotation.RequiresPermission$Write:
    android.support.annotation.RequiresPermission value() -> value
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    void <init>() -> <init>
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
com.koushikdutta.async.http.spdy.AsyncSpdyConnection -> com.koushikdutta.async.http.spdy.AsyncSpdyConnection:
    com.koushikdutta.async.http.Protocol protocol -> protocol
    com.koushikdutta.async.AsyncSocket socket -> socket
    int OKHTTP_CLIENT_WINDOW_SIZE -> OKHTTP_CLIENT_WINDOW_SIZE
    com.koushikdutta.async.BufferedDataSink bufferedSocket -> bufferedSocket
    long bytesLeftInWriteWindow -> bytesLeftInWriteWindow
    boolean client -> client
    int lastGoodStreamId -> lastGoodStreamId
    int nextPingId -> nextPingId
    int nextStreamId -> nextStreamId
    com.koushikdutta.async.http.spdy.Settings okHttpSettings -> okHttpSettings
    com.koushikdutta.async.http.spdy.Settings peerSettings -> peerSettings
    java.util.Map pings -> pings
    com.koushikdutta.async.http.spdy.FrameReader reader -> reader
    boolean receivedInitialPeerSettings -> receivedInitialPeerSettings
    boolean shutdown -> shutdown
    java.util.Hashtable sockets -> sockets
    int totalWindowRead -> totalWindowRead
    com.koushikdutta.async.http.spdy.Variant variant -> variant
    com.koushikdutta.async.http.spdy.FrameWriter writer -> writer
    void <init>(com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.Protocol) -> <init>
    void settings(boolean,com.koushikdutta.async.http.spdy.Settings) -> settings
    void sendConnectionPreface() -> sendConnectionPreface
    com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket newStream(java.util.List,boolean,boolean) -> newStream
    void ackSettings() -> ackSettings
    void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    void alternateService(int,java.lang.String,com.koushikdutta.async.http.spdy.ByteString,java.lang.String,int,long) -> alternateService
    void data(boolean,int,com.koushikdutta.async.ByteBufferList) -> data
    void error(java.lang.Exception) -> error
    void goAway(int,com.koushikdutta.async.http.spdy.ErrorCode,com.koushikdutta.async.http.spdy.ByteString) -> goAway
    void headers(boolean,boolean,int,int,java.util.List,com.koushikdutta.async.http.spdy.HeadersMode) -> headers
    com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket newStream(int,java.util.List,boolean,boolean) -> newStream
    void ping(boolean,int,int) -> ping
    void priority(int,int,int,boolean) -> priority
    void pushPromise(int,int,java.util.List) -> pushPromise
    boolean pushedStream(int) -> pushedStream
    com.koushikdutta.async.http.spdy.Ping removePing(int) -> removePing
    void rstStream(int,com.koushikdutta.async.http.spdy.ErrorCode) -> rstStream
    void updateWindowRead(int) -> updateWindowRead
    void windowUpdate(int,long) -> windowUpdate
    void writePing(boolean,int,int,com.koushikdutta.async.http.spdy.Ping) -> writePing
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    void <init>() -> <init>
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean isDismissable(java.lang.Object) -> isDismissable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    void setInputType(java.lang.Object,int) -> setInputType
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
    void <init>() -> <init>
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int volumeType -> volumeType
    int audioStream -> audioStream
    int controlType -> controlType
    int maxVolume -> maxVolume
    int currentVolume -> currentVolume
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(int,int,int,int,int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.HttpDate$1 -> com.koushikdutta.async.http.HttpDate$1:
    void <init>() -> <init>
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.koushikdutta.ion.LoadBitmapEmitter -> com.koushikdutta.ion.LoadBitmapEmitter:
    boolean animateGif -> animateGif
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,boolean,boolean) -> <init>
android.support.v4.text.ICUCompatApi23 -> android.support.v4.text.ICUCompatApi23:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    void <clinit>() -> <clinit>
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    java.lang.String TAG -> TAG
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinStripHeight -> mMinStripHeight
    int mMinTextSpacing -> mMinTextSpacing
    int mTabAlpha -> mTabAlpha
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTouchSlop -> mTouchSlop
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    int getTabIndicatorColor() -> getTabIndicatorColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    void setPadding(int,int,int,int) -> setPadding
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    void setTextSpacing(int) -> setTextSpacing
    void updateTextPositions(int,float,boolean) -> updateTextPositions
com.koushikdutta.async.FilteredDataEmitter$1 -> com.koushikdutta.async.FilteredDataEmitter$1:
    com.koushikdutta.async.FilteredDataEmitter this$0 -> this$0
    void <init>(com.koushikdutta.async.FilteredDataEmitter) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.v13.app.FragmentCompat$OnRequestPermissionsResultCallback -> android.support.v13.app.FragmentCompat$OnRequestPermissionsResultCallback:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    boolean onClose() -> onClose
com.koushikdutta.async.http.server.AsyncHttpServer$6$2 -> com.koushikdutta.async.http.server.AsyncHttpServer$6$2:
    com.koushikdutta.async.http.server.AsyncHttpServer$6 this$1 -> this$1
    com.koushikdutta.async.http.server.AsyncHttpServerResponse val$response -> val$response
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$6,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.FieldNamingPolicy[] values() -> values
    void <clinit>() -> <clinit>
    java.lang.String -wrap0(java.lang.String,java.lang.String) -> -wrap0
    java.lang.String -wrap1(java.lang.String) -> -wrap1
    void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy) -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    void <init>() -> <init>
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
com.koushikdutta.async.http.server.AsyncHttpServer$1$1$3 -> com.koushikdutta.async.http.server.AsyncHttpServer$1$1$3:
    com.koushikdutta.async.http.server.AsyncHttpServer$1$1 this$2 -> this$2
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$1$1) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.BufferedDataSink -> com.koushikdutta.async.BufferedDataSink:
    boolean endPending -> endPending
    com.koushikdutta.async.DataSink mDataSink -> mDataSink
    int mMaxBuffer -> mMaxBuffer
    com.koushikdutta.async.ByteBufferList mPendingWrites -> mPendingWrites
    com.koushikdutta.async.callback.WritableCallback mWritable -> mWritable
    boolean -assertionsDisabled -> -assertionsDisabled
    void write(com.koushikdutta.async.ByteBufferList) -> write
    void <init>(com.koushikdutta.async.DataSink) -> <init>
    int remaining() -> remaining
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    void setMaxBuffer(int) -> setMaxBuffer
    void end() -> end
    void setDataSink(com.koushikdutta.async.DataSink) -> setDataSink
    void write(com.koushikdutta.async.ByteBufferList,boolean) -> write
    com.koushikdutta.async.DataSink getDataSink() -> getDataSink
    int getMaxBuffer() -> getMaxBuffer
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    boolean isBuffering() -> isBuffering
    boolean isOpen() -> isOpen
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void writePending() -> writePending
    void <clinit>() -> <clinit>
    void -wrap0(com.koushikdutta.async.BufferedDataSink) -> -wrap0
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
    void <init>() -> <init>
    void <init>(android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags) -> <init>
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBackupName -> mBackupName
    java.io.File mBaseName -> mBaseName
    void <init>(java.io.File) -> <init>
    void delete() -> delete
    void failWrite(java.io.FileOutputStream) -> failWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    java.io.File getBaseFile() -> getBaseFile
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    java.io.FileOutputStream startWrite() -> startWrite
    boolean sync(java.io.FileOutputStream) -> sync
com.astuetz.viewpager.extensions.PagerSlidingTabStrip -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip:
    int[] ATTRS -> ATTRS
    boolean checkedTabWidths -> checkedTabWidths
    int currentPosition -> currentPosition
    float currentPositionOffset -> currentPositionOffset
    android.widget.LinearLayout$LayoutParams defaultTabLayoutParams -> defaultTabLayoutParams
    android.support.v4.view.ViewPager$OnPageChangeListener delegatePageListener -> delegatePageListener
    int dividerColor -> dividerColor
    int dividerPadding -> dividerPadding
    android.graphics.Paint dividerPaint -> dividerPaint
    int dividerWidth -> dividerWidth
    android.widget.LinearLayout$LayoutParams expandedTabLayoutParams -> expandedTabLayoutParams
    int indicatorColor -> indicatorColor
    int indicatorHeight -> indicatorHeight
    int lastScrollX -> lastScrollX
    java.util.Locale locale -> locale
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener pageListener -> pageListener
    android.support.v4.view.ViewPager pager -> pager
    android.graphics.Paint rectPaint -> rectPaint
    int scrollOffset -> scrollOffset
    boolean shouldExpand -> shouldExpand
    int tabBackgroundResId -> tabBackgroundResId
    int tabCount -> tabCount
    int tabPadding -> tabPadding
    int tabTextColor -> tabTextColor
    int tabTextSize -> tabTextSize
    android.graphics.Typeface tabTypeface -> tabTypeface
    int tabTypefaceStyle -> tabTypefaceStyle
    android.widget.LinearLayout tabsContainer -> tabsContainer
    boolean textAllCaps -> textAllCaps
    int underlineColor -> underlineColor
    int underlineHeight -> underlineHeight
    void notifyDataSetChanged() -> notifyDataSetChanged
    void addTextTab(int,java.lang.String) -> addTextTab
    void addIconTab(int,int) -> addIconTab
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getDividerColor() -> getDividerColor
    int getDividerPadding() -> getDividerPadding
    int getIndicatorColor() -> getIndicatorColor
    int getIndicatorHeight() -> getIndicatorHeight
    int getScrollOffset() -> getScrollOffset
    boolean getShouldExpand() -> getShouldExpand
    int getTabBackground() -> getTabBackground
    int getTabPaddingLeftRight() -> getTabPaddingLeftRight
    int getTextColor() -> getTextColor
    int getTextSize() -> getTextSize
    int getUnderlineColor() -> getUnderlineColor
    int getUnderlineHeight() -> getUnderlineHeight
    boolean isTextAllCaps() -> isTextAllCaps
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void scrollToChild(int,int) -> scrollToChild
    void setAllCaps(boolean) -> setAllCaps
    void setDividerColor(int) -> setDividerColor
    void setDividerColorResource(int) -> setDividerColorResource
    void setDividerPadding(int) -> setDividerPadding
    void setIndicatorColor(int) -> setIndicatorColor
    void setIndicatorColorResource(int) -> setIndicatorColorResource
    void setIndicatorHeight(int) -> setIndicatorHeight
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setScrollOffset(int) -> setScrollOffset
    void setShouldExpand(boolean) -> setShouldExpand
    void setTabBackground(int) -> setTabBackground
    void setTabPaddingLeftRight(int) -> setTabPaddingLeftRight
    void setTextColor(int) -> setTextColor
    void setTextColorResource(int) -> setTextColorResource
    void setTextSize(int) -> setTextSize
    void setTypeface(android.graphics.Typeface,int) -> setTypeface
    void setUnderlineColor(int) -> setUnderlineColor
    void setUnderlineColorResource(int) -> setUnderlineColorResource
    void setUnderlineHeight(int) -> setUnderlineHeight
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void updateTabStyles() -> updateTabStyles
    void <clinit>() -> <clinit>
    int -get0(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> -get0
    android.support.v4.view.ViewPager -get1(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> -get1
    android.widget.LinearLayout -get2(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> -get2
    int -set0(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int) -> -set0
    float -set1(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,float) -> -set1
    void -wrap0(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int,int) -> -wrap0
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    java.util.ArrayList mActions -> mActions
    java.lang.String mCategory -> mCategory
    int mColor -> mColor
    java.lang.CharSequence mContentInfo -> mContentInfo
    android.app.PendingIntent mContentIntent -> mContentIntent
    java.lang.CharSequence mContentText -> mContentText
    java.lang.CharSequence mContentTitle -> mContentTitle
    android.content.Context mContext -> mContext
    android.os.Bundle mExtras -> mExtras
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    boolean mLocalOnly -> mLocalOnly
    android.app.Notification mNotification -> mNotification
    int mNumber -> mNumber
    java.util.ArrayList mPeople -> mPeople
    int mPriority -> mPriority
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    int mProgressMax -> mProgressMax
    android.app.Notification mPublicVersion -> mPublicVersion
    boolean mShowWhen -> mShowWhen
    java.lang.String mSortKey -> mSortKey
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    android.widget.RemoteViews mTickerView -> mTickerView
    boolean mUseChronometer -> mUseChronometer
    int mVisibility -> mVisibility
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.app.Notification build() -> build
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
    android.os.Bundle getExtras() -> getExtras
    android.app.Notification getNotification() -> getNotification
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    boolean complexMapKeySerialization -> complexMapKeySerialization
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    boolean escapeHtmlChars -> escapeHtmlChars
    com.google.gson.internal.Excluder excluder -> excluder
    java.util.List factories -> factories
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    boolean generateNonExecutableJson -> generateNonExecutableJson
    java.util.List hierarchyFactories -> hierarchyFactories
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    boolean prettyPrinting -> prettyPrinting
    boolean serializeNulls -> serializeNulls
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    int timeStyle -> timeStyle
    void <init>() -> <init>
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
    com.google.gson.Gson create() -> create
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediator) -> <init>
    long getPlaybackPosition() -> getPlaybackPosition
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    void handleKey(android.view.KeyEvent) -> handleKey
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
com.koushikdutta.ion.gif.GifFrame -> com.koushikdutta.ion.gif.GifFrame:
    int delay -> delay
    android.graphics.Bitmap image -> image
    void <init>(android.graphics.Bitmap,int) -> <init>
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    void <init>() -> <init>
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.LayoutInflaterCompatBase:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
com.google.gson.package-info -> com.google.gson.package-info:
android.support.v13.app.FragmentTabHost$DummyTabFactory -> android.support.v13.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    android.view.View createTabContent(java.lang.String) -> createTabContent
com.koushikdutta.async.http.Multimap$1 -> com.koushikdutta.async.http.Multimap$1:
    void <init>() -> <init>
    java.lang.String decode(java.lang.String) -> decode
com.aokp.romcontrol.fragments.about.AboutCrewFragment -> com.aokp.romcontrol.fragments.about.AboutCrewFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    void <init>(android.support.v4.app.ActivityOptionsCompatJB) -> <init>
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
com.koushikdutta.async.http.spdy.Spdy3$Reader$2 -> com.koushikdutta.async.http.spdy.Spdy3$Reader$2:
    com.koushikdutta.async.http.spdy.Spdy3$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.http.RedirectLimitExceededException -> com.koushikdutta.async.http.RedirectLimitExceededException:
    void <init>(java.lang.String) -> <init>
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void <init>(android.support.v4.content.LocalBroadcastManager,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.koushikdutta.async.http.server.AsyncHttpServer$4 -> com.koushikdutta.async.http.server.AsyncHttpServer$4:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    android.content.Context val$_context -> val$_context
    java.lang.String val$assetPath -> val$assetPath
    void onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer,android.content.Context,java.lang.String) -> <init>
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    int[] $SWITCH_TABLE$com$google$gson$stream$JsonToken -> $SWITCH_TABLE$com$google$gson$stream$JsonToken
    int[] -com_google_gson_stream_JsonTokenSwitchesValues -> -com_google_gson_stream_JsonTokenSwitchesValues
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    int[] -getcom_google_gson_stream_JsonTokenSwitchesValues() -> -getcom_google_gson_stream_JsonTokenSwitchesValues
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23:
    android.support.v4.media.session.MediaSessionCompat$Callback this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23) -> <init>
android.support.v4.view.InputDeviceCompat -> android.support.v4.view.InputDeviceCompat:
    int SOURCE_ANY -> SOURCE_ANY
    int SOURCE_CLASS_BUTTON -> SOURCE_CLASS_BUTTON
    int SOURCE_CLASS_JOYSTICK -> SOURCE_CLASS_JOYSTICK
    int SOURCE_CLASS_MASK -> SOURCE_CLASS_MASK
    int SOURCE_CLASS_NONE -> SOURCE_CLASS_NONE
    int SOURCE_CLASS_POINTER -> SOURCE_CLASS_POINTER
    int SOURCE_CLASS_POSITION -> SOURCE_CLASS_POSITION
    int SOURCE_CLASS_TRACKBALL -> SOURCE_CLASS_TRACKBALL
    int SOURCE_DPAD -> SOURCE_DPAD
    int SOURCE_GAMEPAD -> SOURCE_GAMEPAD
    int SOURCE_HDMI -> SOURCE_HDMI
    int SOURCE_JOYSTICK -> SOURCE_JOYSTICK
    int SOURCE_KEYBOARD -> SOURCE_KEYBOARD
    int SOURCE_MOUSE -> SOURCE_MOUSE
    int SOURCE_STYLUS -> SOURCE_STYLUS
    int SOURCE_TOUCHPAD -> SOURCE_TOUCHPAD
    int SOURCE_TOUCHSCREEN -> SOURCE_TOUCHSCREEN
    int SOURCE_TOUCH_NAVIGATION -> SOURCE_TOUCH_NAVIGATION
    int SOURCE_TRACKBALL -> SOURCE_TRACKBALL
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    void <init>() -> <init>
com.koushikdutta.async.http.socketio.SocketIOConnection$4 -> com.koushikdutta.async.http.socketio.SocketIOConnection$4:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void run() -> run
com.aokp.romcontrol.fragments.PowerMenuSettingsFragment -> com.aokp.romcontrol.fragments.PowerMenuSettingsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.aokp.romcontrol.LauncherActivity -> com.aokp.romcontrol.LauncherActivity:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle mArguments -> mArguments
    java.lang.String mClassName -> mClassName
    int mContainerId -> mContainerId
    boolean mDetached -> mDetached
    int mFragmentId -> mFragmentId
    boolean mFromLayout -> mFromLayout
    int mIndex -> mIndex
    android.support.v4.app.Fragment mInstance -> mInstance
    boolean mRetainInstance -> mRetainInstance
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    java.lang.String mTag -> mTag
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment) -> instantiate
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.koushikdutta.ion.builder.LoadBuilder -> com.koushikdutta.ion.builder.LoadBuilder:
    java.lang.Object load(java.lang.String) -> load
    java.lang.Object load(java.io.File) -> load
    java.lang.Object load(java.lang.String,java.lang.String) -> load
com.aokp.romcontrol.fragments.NavigationDrawerFragment$2 -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$2:
    com.aokp.romcontrol.fragments.NavigationDrawerFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.NavigationDrawerFragment,android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int) -> <init>
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int MSG_ADJUST_VOLUME -> MSG_ADJUST_VOLUME
    int MSG_COMMAND -> MSG_COMMAND
    int MSG_CUSTOM_ACTION -> MSG_CUSTOM_ACTION
    int MSG_FAST_FORWARD -> MSG_FAST_FORWARD
    int MSG_MEDIA_BUTTON -> MSG_MEDIA_BUTTON
    int MSG_NEXT -> MSG_NEXT
    int MSG_PAUSE -> MSG_PAUSE
    int MSG_PLAY -> MSG_PLAY
    int MSG_PLAY_MEDIA_ID -> MSG_PLAY_MEDIA_ID
    int MSG_PLAY_SEARCH -> MSG_PLAY_SEARCH
    int MSG_PLAY_URI -> MSG_PLAY_URI
    int MSG_PREVIOUS -> MSG_PREVIOUS
    int MSG_RATE -> MSG_RATE
    int MSG_REWIND -> MSG_REWIND
    int MSG_SEEK_TO -> MSG_SEEK_TO
    int MSG_SET_VOLUME -> MSG_SET_VOLUME
    int MSG_SKIP_TO_ITEM -> MSG_SKIP_TO_ITEM
    int MSG_STOP -> MSG_STOP
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void onMediaButtonEvent(android.view.KeyEvent) -> onMediaButtonEvent
    void post(int) -> post
    void post(int,java.lang.Object) -> post
    void post(int,java.lang.Object,android.os.Bundle) -> post
    void post(int,java.lang.Object,int) -> post
android.support.v4.media.session.MediaControllerCompatApi23 -> android.support.v4.media.session.MediaControllerCompatApi23:
    void <init>() -> <init>
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$1 -> this$1
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    void <init>(android.support.v4.print.PrintHelper$PrintHelperKitkatImpl,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> <init>
    void onFinish() -> onFinish
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void adjustVolume(int,int) -> adjustVolume
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    java.lang.Object getMediaController() -> getMediaController
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void setVolumeTo(int,int) -> setVolumeTo
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
com.koushikdutta.async.AsyncServer$2 -> com.koushikdutta.async.AsyncServer$2:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$callback -> val$callback
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.callback.CompletedCallback,java.lang.Exception) -> <init>
    void run() -> run
android.support.v4.view.animation.PathInterpolatorDonut -> android.support.v4.view.animation.PathInterpolatorDonut:
    float PRECISION -> PRECISION
    float[] mX -> mX
    float[] mY -> mY
    void <init>(android.graphics.Path) -> <init>
    void <init>(float,float) -> <init>
    void <init>(float,float,float,float) -> <init>
    android.graphics.Path createCubic(float,float,float,float) -> createCubic
    android.graphics.Path createQuad(float,float) -> createQuad
    float getInterpolation(float) -> getInterpolation
com.koushikdutta.async.util.UntypedHashtable -> com.koushikdutta.async.util.UntypedHashtable:
    java.util.Hashtable hash -> hash
    void <init>() -> <init>
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
com.koushikdutta.ion.IonDrawable -> com.koushikdutta.ion.IonDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    long FADE_DURATION -> FADE_DURATION
    double LOG_2 -> LOG_2
    android.graphics.drawable.Drawable NULL_BITMAPINFO -> NULL_BITMAPINFO
    android.graphics.drawable.Drawable NULL_ERROR -> NULL_ERROR
    android.graphics.drawable.Drawable NULL_PLACEHOLDER -> NULL_PLACEHOLDER
    int TILE_DIM -> TILE_DIM
    android.graphics.drawable.Drawable bitmapDrawable -> bitmapDrawable
    com.koushikdutta.ion.BitmapDrawableFactory bitmapDrawableFactory -> bitmapDrawableFactory
    com.koushikdutta.ion.BitmapFetcher bitmapFetcher -> bitmapFetcher
    com.koushikdutta.ion.IonDrawable$IonDrawableCallback callback -> callback
    android.graphics.drawable.Drawable error -> error
    int errorResource -> errorResource
    boolean fadeIn -> fadeIn
    com.koushikdutta.ion.IonDrawable$IonGifDecoder gifDecoder -> gifDecoder
    com.koushikdutta.ion.bitmap.BitmapInfo info -> info
    com.koushikdutta.ion.Ion ion -> ion
    com.koushikdutta.async.future.FutureCallback loadCallback -> loadCallback
    int maxLevel -> maxLevel
    android.graphics.Paint paint -> paint
    android.graphics.drawable.Drawable placeholder -> placeholder
    int placeholderResource -> placeholderResource
    boolean repeatAnimation -> repeatAnimation
    int resizeHeight -> resizeHeight
    int resizeWidth -> resizeWidth
    android.content.res.Resources resources -> resources
    com.koushikdutta.ion.ResponseServedFrom servedFrom -> servedFrom
    int textureDim -> textureDim
    com.koushikdutta.async.future.FutureCallback tileCallback -> tileCallback
    void <init>(android.content.res.Resources) -> <init>
    void cancel() -> cancel
    void draw(android.graphics.Canvas) -> draw
    void drawDeepZoom(android.graphics.Canvas) -> drawDeepZoom
    com.koushikdutta.ion.bitmap.BitmapInfo getBitmapInfo() -> getBitmapInfo
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    com.koushikdutta.async.future.FutureCallback getLoadCallback() -> getLoadCallback
    int getOpacity() -> getOpacity
    com.koushikdutta.ion.IonDrawable getOrCreateIonDrawable(android.widget.ImageView) -> getOrCreateIonDrawable
    com.koushikdutta.ion.IonDrawable ion(com.koushikdutta.ion.Ion) -> ion
    void setAlpha(int) -> setAlpha
    com.koushikdutta.ion.IonDrawable setBitmap(com.koushikdutta.ion.bitmap.BitmapInfo,com.koushikdutta.ion.ResponseServedFrom) -> setBitmap
    com.koushikdutta.ion.IonDrawable setBitmapDrawableFactory(com.koushikdutta.ion.BitmapDrawableFactory) -> setBitmapDrawableFactory
    com.koushikdutta.ion.IonDrawable setBitmapFetcher(com.koushikdutta.ion.BitmapFetcher) -> setBitmapFetcher
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    com.koushikdutta.ion.IonDrawable setError(int,android.graphics.drawable.Drawable) -> setError
    com.koushikdutta.ion.IonDrawable setFadeIn(boolean) -> setFadeIn
    com.koushikdutta.ion.IonDrawable setLoadCallback(com.koushikdutta.async.future.FutureCallback) -> setLoadCallback
    com.koushikdutta.ion.IonDrawable setPlaceholder(int,android.graphics.drawable.Drawable) -> setPlaceholder
    com.koushikdutta.ion.IonDrawable setRepeatAnimation(boolean) -> setRepeatAnimation
    com.koushikdutta.ion.IonDrawable setSize(int,int) -> setSize
    android.graphics.drawable.Drawable tryGetBitmapResource() -> tryGetBitmapResource
    android.graphics.drawable.Drawable tryGetErrorResource() -> tryGetErrorResource
    android.graphics.drawable.Drawable tryGetPlaceholderResource() -> tryGetPlaceholderResource
    com.koushikdutta.ion.IonDrawable updateLayers() -> updateLayers
    void <clinit>() -> <clinit>
    com.koushikdutta.async.future.FutureCallback -get0(com.koushikdutta.ion.IonDrawable) -> -get0
    boolean -get1(com.koushikdutta.ion.IonDrawable) -> -get1
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
com.koushikdutta.async.http.filter.ContentLengthFilter -> com.koushikdutta.async.http.filter.ContentLengthFilter:
    long contentLength -> contentLength
    long totalRead -> totalRead
    com.koushikdutta.async.ByteBufferList transformed -> transformed
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(long) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void report(java.lang.Exception) -> report
    void <clinit>() -> <clinit>
com.koushikdutta.async.future.DependentFuture -> com.koushikdutta.async.future.DependentFuture:
com.aokp.romcontrol.R$string -> com.aokp.romcontrol.R$string:
    int toggles_display_close -> toggles_display_close
    int navigation_drawer_open -> navigation_drawer_open
    int navigation_drawer_close -> navigation_drawer_close
    int app_name -> app_name
    int android_open_kang_project -> android_open_kang_project
    int kanglings -> kanglings
    int dialog_color_picker -> dialog_color_picker
    int url_aokp_gerrit -> url_aokp_gerrit
    int navbar_tab_arrange -> navbar_tab_arrange
    int navring_tab_settings -> navring_tab_settings
    int navbar_tab_settings -> navbar_tab_settings
    int about_aokp -> about_aokp
    int about_aokp_summary -> about_aokp_summary
    int action_double -> action_double
    int action_icon -> action_icon
    int action_long -> action_long
    int action_long_save -> action_long_save
    int action_short -> action_short
    int activity_close_title -> activity_close_title
    int activity_open_title -> activity_open_title
    int adb_notify -> adb_notify
    int adb_notify_summary -> adb_notify_summary
    int add_app -> add_app
    int add_button -> add_button
    int add_heads_up_blacklist_summary -> add_heads_up_blacklist_summary
    int add_heads_up_dnd_summary -> add_heads_up_dnd_summary
    int add_ribbon -> add_ribbon
    int add_toggles -> add_toggles
    int airplane_mode_options -> airplane_mode_options
    int animation_duration_default -> animation_duration_default
    int animation_duration_title -> animation_duration_title
    int animation_exit_only_title -> animation_exit_only_title
    int animation_reverse_exit_title -> animation_reverse_exit_title
    int animation_type_title -> animation_type_title
    int aokp -> aokp
    int aokp_irc_summary -> aokp_irc_summary
    int aokp_irc_title -> aokp_irc_title
    int aokp_review_summary -> aokp_review_summary
    int aokp_review_title -> aokp_review_title
    int aokp_website_summary -> aokp_website_summary
    int aokp_website_title -> aokp_website_title
    int arrow_down -> arrow_down
    int arrow_right -> arrow_right
    int backlight_timeout_unlimited -> backlight_timeout_unlimited
    int battery_arc_lockscreen_handle -> battery_arc_lockscreen_handle
    int battery_arc_lockscreen_handle_summary -> battery_arc_lockscreen_handle_summary
    int battery_bar -> battery_bar
    int battery_bar_percent -> battery_bar_percent
    int battery_circle -> battery_circle
    int battery_circle_percent -> battery_circle_percent
    int battery_percentage_indicator_plugged_summary -> battery_percentage_indicator_plugged_summary
    int battery_percentage_indicator_plugged_title -> battery_percentage_indicator_plugged_title
    int battery_percentage_indicator_summary -> battery_percentage_indicator_summary
    int battery_percentage_indicator_title -> battery_percentage_indicator_title
    int battery_status_icon_title -> battery_status_icon_title
    int bottom -> bottom
    int brightness_slider_summary -> brightness_slider_summary
    int brightness_slider_title -> brightness_slider_title
    int buttons_backlight_timeout -> buttons_backlight_timeout
    int buttons_brightness -> buttons_brightness
    int cancel -> cancel
    int category_about_aokp -> category_about_aokp
    int category_advanced -> category_advanced
    int category_animations -> category_animations
    int category_backlight -> category_backlight
    int category_general -> category_general
    int category_hardware_keys -> category_hardware_keys
    int category_heads_up -> category_heads_up
    int category_lockscreen -> category_lockscreen
    int category_navbar -> category_navbar
    int category_notifications_drawer -> category_notifications_drawer
    int category_power_menu -> category_power_menu
    int category_signalbars -> category_signalbars
    int category_sound -> category_sound
    int category_statusbar -> category_statusbar
    int category_statusbar_battery -> category_statusbar_battery
    int category_statusbar_clock -> category_statusbar_clock
    int category_statusbar_notification -> category_statusbar_notification
    int center -> center
    int center_clock -> center_clock
    int choose_action_long_title -> choose_action_long_title
    int choose_action_short_title -> choose_action_short_title
    int choose_action_title -> choose_action_title
    int crt_title -> crt_title
    int custom_app_icon_successfully -> custom_app_icon_successfully
    int default_color -> default_color
    int description_direction_down -> description_direction_down
    int description_direction_left -> description_direction_left
    int description_direction_right -> description_direction_right
    int description_direction_up -> description_direction_up
    int description_target_unlock -> description_target_unlock
    int devs -> devs
    int dismiss_all -> dismiss_all
    int dismiss_all_summary -> dismiss_all_summary
    int display_lockscreen_rotation_title -> display_lockscreen_rotation_title
    int donate_aokp -> donate_aokp
    int dont_show -> dont_show
    int enable_charging_led_summary -> enable_charging_led_summary
    int enable_charging_led_title -> enable_charging_led_title
    int enable_navigation_bar_summary -> enable_navigation_bar_summary
    int enable_navigation_bar_title -> enable_navigation_bar_title
    int enable_navring_summary -> enable_navring_summary
    int enable_navring_title -> enable_navring_title
    int enable_ribbon_summary -> enable_ribbon_summary
    int enable_ribbon_title -> enable_ribbon_title
    int enable_ribbon_vibrate_summary -> enable_ribbon_vibrate_summary
    int enable_ribbon_vibrate_title -> enable_ribbon_vibrate_title
    int excluded_apps_summary -> excluded_apps_summary
    int excluded_apps_title -> excluded_apps_title
    int expanded_view -> expanded_view
    int expanded_view_summary -> expanded_view_summary
    int five_targets -> five_targets
    int force_expanded_view -> force_expanded_view
    int force_expanded_view_summary -> force_expanded_view_summary
    int force_highend_gfx_summary -> force_highend_gfx_summary
    int force_highend_gfx_title -> force_highend_gfx_title
    int four_targets -> four_targets
    int github_DAGr8 -> github_DAGr8
    int github_adam -> github_adam
    int github_akellar -> github_akellar
    int github_aokp -> github_aokp
    int github_bajee11 -> github_bajee11
    int github_birdman -> github_birdman
    int github_bmc08gt -> github_bmc08gt
    int github_bytecodeme -> github_bytecodeme
    int github_championswimmer -> github_championswimmer
    int github_dhacker29 -> github_dhacker29
    int github_elelinux -> github_elelinux
    int github_graffixnyc -> github_graffixnyc
    int github_hashcode -> github_hashcode
    int github_jbirdvegas -> github_jbirdvegas
    int github_k900 -> github_k900
    int github_kecinzer -> github_kecinzer
    int github_khasmek -> github_khasmek
    int github_kwes -> github_kwes
    int github_marclandis -> github_marclandis
    int github_protekk -> github_protekk
    int github_qnhoang81 -> github_qnhoang81
    int github_rohan32 -> github_rohan32
    int github_roman -> github_roman
    int github_scar45 -> github_scar45
    int github_sethyx -> github_sethyx
    int github_sixstringsg -> github_sixstringsg
    int github_stelix -> github_stelix
    int github_stevespear -> github_stevespear
    int github_tdm -> github_tdm
    int github_whitehawk -> github_whitehawk
    int github_willdeberry -> github_willdeberry
    int github_xoom -> github_xoom
    int github_zaph -> github_zaph
    int group_applications -> group_applications
    int heads_up_blacklist_title -> heads_up_blacklist_title
    int heads_up_dnd_title -> heads_up_dnd_title
    int hex -> hex
    int hex_hint -> hex_hint
    int hide_battery_icon_summary -> hide_battery_icon_summary
    int hide_battery_icon_title -> hide_battery_icon_title
    int hide_low_priority -> hide_low_priority
    int hide_low_priority_summary -> hide_low_priority_summary
    int hide_non_clearable -> hide_non_clearable
    int hide_non_clearable_summary -> hide_non_clearable_summary
    int hide_option -> hide_option
    int hide_ribbon_timeout_10000 -> hide_ribbon_timeout_10000
    int hide_ribbon_timeout_1500 -> hide_ribbon_timeout_1500
    int hide_ribbon_timeout_15000 -> hide_ribbon_timeout_15000
    int hide_ribbon_timeout_3000 -> hide_ribbon_timeout_3000
    int hide_ribbon_timeout_30000 -> hide_ribbon_timeout_30000
    int hide_ribbon_timeout_5000 -> hide_ribbon_timeout_5000
    int hide_ribbon_timeout_never -> hide_ribbon_timeout_never
    int icon_gravity_title -> icon_gravity_title
    int ime_switcher_summary -> ime_switcher_summary
    int ime_switcher_title -> ime_switcher_title
    int immersive_mode_options -> immersive_mode_options
    int interface_navring_settings_summary -> interface_navring_settings_summary
    int interface_navring_settings_title -> interface_navring_settings_title
    int led_change_app -> led_change_app
    int led_color_click -> led_color_click
    int led_custom_app -> led_custom_app
    int led_custom_default -> led_custom_default
    int led_custom_message -> led_custom_message
    int led_custom_title -> led_custom_title
    int led_delete_app -> led_delete_app
    int led_edit_button -> led_edit_button
    int led_keep_app -> led_keep_app
    int led_off -> led_off
    int led_on -> led_on
    int led_test_notification -> led_test_notification
    int led_test_notification_message_note -> led_test_notification_message_note
    int led_test_notification_message_now -> led_test_notification_message_now
    int led_test_ok -> led_test_ok
    int led_time_off -> led_time_off
    int led_time_on -> led_time_on
    int led_time_seconds -> led_time_seconds
    int left -> left
    int left_ribbon_items -> left_ribbon_items
    int left_ribbon_settings -> left_ribbon_settings
    int listview_accelerate_decelerate_interpolator -> listview_accelerate_decelerate_interpolator
    int listview_accelerate_interpolator -> listview_accelerate_interpolator
    int listview_alpha -> listview_alpha
    int listview_animation_title -> listview_animation_title
    int listview_anticipate_interpolator -> listview_anticipate_interpolator
    int listview_anticipate_overshoot_interpolator -> listview_anticipate_overshoot_interpolator
    int listview_bounce_interpolator -> listview_bounce_interpolator
    int listview_decelerate_interpolator -> listview_decelerate_interpolator
    int listview_fold -> listview_fold
    int listview_interpolator_title -> listview_interpolator_title
    int listview_off -> listview_off
    int listview_overshoot_interpolator -> listview_overshoot_interpolator
    int listview_scale -> listview_scale
    int listview_stack_bottom -> listview_stack_bottom
    int listview_stack_top -> listview_stack_top
    int listview_title -> listview_title
    int listview_translate_left -> listview_translate_left
    int listview_translate_right -> listview_translate_right
    int listview_unfold -> listview_unfold
    int listview_wave_left -> listview_wave_left
    int listview_wave_right -> listview_wave_right
    int location_modes_toggle_all -> location_modes_toggle_all
    int location_modes_toggle_bo -> location_modes_toggle_bo
    int location_modes_toggle_bs -> location_modes_toggle_bs
    int location_modes_toggle_bso -> location_modes_toggle_bso
    int location_modes_toggle_hb -> location_modes_toggle_hb
    int location_modes_toggle_hbs -> location_modes_toggle_hbs
    int location_modes_toggle_ho -> location_modes_toggle_ho
    int location_modes_toggle_hs -> location_modes_toggle_hs
    int location_modes_toggle_so -> location_modes_toggle_so
    int location_modes_toggle_title -> location_modes_toggle_title
    int lockscreen_blur_radius -> lockscreen_blur_radius
    int lockscreen_menu_unlock_summary -> lockscreen_menu_unlock_summary
    int lockscreen_menu_unlock_title -> lockscreen_menu_unlock_title
    int lockscreen_minimize_challenge_summary -> lockscreen_minimize_challenge_summary
    int lockscreen_minimize_challenge_title -> lockscreen_minimize_challenge_title
    int lockscreen_notifications -> lockscreen_notifications
    int lockscreen_notifications_summary -> lockscreen_notifications_summary
    int lockscreen_ribbon_items -> lockscreen_ribbon_items
    int lockscreen_ribbon_settings -> lockscreen_ribbon_settings
    int lockscreen_see_through -> lockscreen_see_through
    int lockscreen_see_through_summary -> lockscreen_see_through_summary
    int menu_show_drawer_icon -> menu_show_drawer_icon
    int mgerrit_changelog_summary -> mgerrit_changelog_summary
    int mgerrit_changelog_title -> mgerrit_changelog_title
    int navbar_ring -> navbar_ring
    int navbar_ring_cat -> navbar_ring_cat
    int navigation_bar_dpad_keys_summary -> navigation_bar_dpad_keys_summary
    int navigation_bar_dpad_keys_title -> navigation_bar_dpad_keys_title
    int navigation_bar_height_landscape_summary -> navigation_bar_height_landscape_summary
    int navigation_bar_height_landscape_title -> navigation_bar_height_landscape_title
    int navigation_bar_height_summary -> navigation_bar_height_summary
    int navigation_bar_height_title -> navigation_bar_height_title
    int navigation_bar_width_summary -> navigation_bar_width_summary
    int navigation_bar_width_title -> navigation_bar_width_title
    int navring_clear -> navring_clear
    int navring_enable_long -> navring_enable_long
    int navring_target_amount_text -> navring_target_amount_text
    int navring_target_info -> navring_target_info
    int navring_target_longpress_text -> navring_target_longpress_text
    int navring_target_reset -> navring_target_reset
    int navring_target_reset_message -> navring_target_reset_message
    int navring_target_save -> navring_target_save
    int network_mode_2g -> network_mode_2g
    int network_mode_2g_cdma -> network_mode_2g_cdma
    int network_mode_2g_evdo -> network_mode_2g_evdo
    int network_mode_3g -> network_mode_3g
    int network_mode_3g_auto -> network_mode_3g_auto
    int network_mode_3g_only -> network_mode_3g_only
    int network_mode_4g -> network_mode_4g
    int network_mode_4g_3g -> network_mode_4g_3g
    int network_mode_4g_only -> network_mode_4g_only
    int network_modes_summary -> network_modes_summary
    int network_modes_title -> network_modes_title
    int no_clock -> no_clock
    int notification_color -> notification_color
    int notification_count_summary -> notification_count_summary
    int notification_count_title -> notification_count_title
    int notifications_height -> notifications_height
    int notifications_height_summary -> notifications_height_summary
    int offset_top -> offset_top
    int ok -> ok
    int on_always -> on_always
    int on_when_insecure -> on_when_insecure
    int one_target -> one_target
    int persist_enable -> persist_enable
    int persist_enable_summary -> persist_enable_summary
    int persist_file_hosts -> persist_file_hosts
    int persist_file_hosts_summary -> persist_file_hosts_summary
    int persist_file_xposed -> persist_file_xposed
    int persist_file_xposed_summary -> persist_file_xposed_summary
    int persist_options -> persist_options
    int persist_prop_density -> persist_prop_density
    int persist_prop_density_summary -> persist_prop_density_summary
    int pocket_mode -> pocket_mode
    int pocket_mode_summary -> pocket_mode_summary
    int press_color_to_apply -> press_color_to_apply
    int privacy_mode -> privacy_mode
    int privacy_mode_summary -> privacy_mode_summary
    int progressbar_color_1_title -> progressbar_color_1_title
    int progressbar_color_2_title -> progressbar_color_2_title
    int progressbar_color_3_title -> progressbar_color_3_title
    int progressbar_color_4_title -> progressbar_color_4_title
    int progressbar_count_title -> progressbar_count_title
    int progressbar_length_title -> progressbar_length_title
    int progressbar_mirror_title -> progressbar_mirror_title
    int progressbar_reverse_title -> progressbar_reverse_title
    int progressbar_speed_title -> progressbar_speed_title
    int progressbar_title -> progressbar_title
    int progressbar_width_title -> progressbar_width_title
    int ram_bar_summary -> ram_bar_summary
    int ram_bar_title -> ram_bar_title
    int reboot_options -> reboot_options
    int regular_am_pm -> regular_am_pm
    int regular_date -> regular_date
    int regular_weekday -> regular_weekday
    int reset -> reset
    int ribbon_auto_hide_title -> ribbon_auto_hide_title
    int ribbon_color_title -> ribbon_color_title
    int ribbon_drag_handle_height_title -> ribbon_drag_handle_height_title
    int ribbon_drag_handle_width_title -> ribbon_drag_handle_width_title
    int ribbon_handle_color_title -> ribbon_handle_color_title
    int ribbon_long_press_title -> ribbon_long_press_title
    int ribbon_long_swipe_title -> ribbon_long_swipe_title
    int ribbon_size_title -> ribbon_size_title
    int ribbon_space_title -> ribbon_space_title
    int right -> right
    int right_clock -> right_clock
    int right_ribbon_items -> right_ribbon_items
    int right_ribbon_settings -> right_ribbon_settings
    int rom_control -> rom_control
    int safe_headset_volume_summary -> safe_headset_volume_summary
    int safe_headset_volume_title -> safe_headset_volume_title
    int sample_progressbar_text -> sample_progressbar_text
    int save -> save
    int screenrecord_mode_options -> screenrecord_mode_options
    int screenshot_mode_options -> screenshot_mode_options
    int select_custom_app_title -> select_custom_app_title
    int set -> set
    int setting_key_home_long_press_action_appswitch -> setting_key_home_long_press_action_appswitch
    int setting_key_home_long_press_action_inappsearch -> setting_key_home_long_press_action_inappsearch
    int setting_key_home_long_press_action_killapp -> setting_key_home_long_press_action_killapp
    int setting_key_home_long_press_action_menu -> setting_key_home_long_press_action_menu
    int setting_key_home_long_press_action_nothing -> setting_key_home_long_press_action_nothing
    int setting_key_home_long_press_action_search -> setting_key_home_long_press_action_search
    int setting_key_home_long_press_action_voicesearch -> setting_key_home_long_press_action_voicesearch
    int show_4g_for_lte_summary -> show_4g_for_lte_summary
    int show_4g_for_lte_title -> show_4g_for_lte_title
    int show_always -> show_always
    int show_always_summary -> show_always_summary
    int size_24_dp -> size_24_dp
    int size_30_dp -> size_30_dp
    int size_36_dp -> size_36_dp
    int size_40_dp -> size_40_dp
    int size_42_dp -> size_42_dp
    int size_42_dp_default -> size_42_dp_default
    int size_44_dp -> size_44_dp
    int size_48_dp_default -> size_48_dp_default
    int small_am_pm -> small_am_pm
    int small_date -> small_date
    int small_weekday -> small_weekday
    int status_bar_double_tap_to_sleep_summary -> status_bar_double_tap_to_sleep_summary
    int status_bar_double_tap_to_sleep_title -> status_bar_double_tap_to_sleep_title
    int status_bar_network_stats_color_summary -> status_bar_network_stats_color_summary
    int status_bar_network_stats_color_title -> status_bar_network_stats_color_title
    int status_bar_network_stats_update_summary -> status_bar_network_stats_update_summary
    int status_bar_network_stats_update_title -> status_bar_network_stats_update_title
    int status_bar_network_title -> status_bar_network_title
    int status_bar_show_network_stats_flip_summary -> status_bar_show_network_stats_flip_summary
    int status_bar_show_network_stats_flip_title -> status_bar_show_network_stats_flip_title
    int status_bar_show_network_stats_hide_summary -> status_bar_show_network_stats_hide_summary
    int status_bar_show_network_stats_hide_title -> status_bar_show_network_stats_hide_title
    int status_bar_show_network_stats_summary -> status_bar_show_network_stats_summary
    int status_bar_show_network_stats_title -> status_bar_show_network_stats_title
    int statusbar_clock_am_pm_style_summary -> statusbar_clock_am_pm_style_summary
    int statusbar_clock_am_pm_style_title -> statusbar_clock_am_pm_style_title
    int statusbar_clock_color_summary -> statusbar_clock_color_summary
    int statusbar_clock_color_title -> statusbar_clock_color_title
    int statusbar_clock_date_summary -> statusbar_clock_date_summary
    int statusbar_clock_date_title -> statusbar_clock_date_title
    int statusbar_clock_style_summary -> statusbar_clock_style_summary
    int statusbar_clock_style_title -> statusbar_clock_style_title
    int statusbar_clock_weekday_summary -> statusbar_clock_weekday_summary
    int statusbar_clock_weekday_title -> statusbar_clock_weekday_title
    int statusbar_hide_signal_bars_summary -> statusbar_hide_signal_bars_summary
    int statusbar_hide_signal_bars_title -> statusbar_hide_signal_bars_title
    int statusbar_signal_text_summary -> statusbar_signal_text_summary
    int statusbar_signal_text_title -> statusbar_signal_text_title
    int summary_animation_no_override -> summary_animation_no_override
    int summary_hardware_keys_volume_keys_double_tap -> summary_hardware_keys_volume_keys_double_tap
    int summary_navring_amount -> summary_navring_amount
    int summary_setting_enable_custom_hardware_keys -> summary_setting_enable_custom_hardware_keys
    int swipe_handle_location_title -> swipe_handle_location_title
    int system_power_crt_mode_both -> system_power_crt_mode_both
    int system_power_crt_mode_dialog_title -> system_power_crt_mode_dialog_title
    int system_power_crt_mode_horizontal -> system_power_crt_mode_horizontal
    int system_power_crt_mode_off -> system_power_crt_mode_off
    int system_power_crt_mode_scale -> system_power_crt_mode_scale
    int system_power_crt_mode_title -> system_power_crt_mode_title
    int system_power_crt_mode_vertical -> system_power_crt_mode_vertical
    int task_close_title -> task_close_title
    int task_move_to_back_title -> task_move_to_back_title
    int task_move_to_front_title -> task_move_to_front_title
    int task_open_title -> task_open_title
    int three_targets -> three_targets
    int time_0_2_seconds -> time_0_2_seconds
    int time_0_5_seconds -> time_0_5_seconds
    int time_0_seconds_off -> time_0_seconds_off
    int time_10_seconds -> time_10_seconds
    int time_1_5_seconds -> time_1_5_seconds
    int time_1_second -> time_1_second
    int time_2_5_seconds -> time_2_5_seconds
    int time_2_seconds -> time_2_seconds
    int time_3_5_seconds -> time_3_5_seconds
    int time_3_seconds -> time_3_seconds
    int time_4_5_seconds -> time_4_5_seconds
    int time_4_seconds -> time_4_seconds
    int time_5_5_seconds -> time_5_5_seconds
    int time_5_seconds -> time_5_seconds
    int time_6_seconds -> time_6_seconds
    int time_7_seconds -> time_7_seconds
    int time_8_seconds -> time_8_seconds
    int time_9_seconds -> time_9_seconds
    int title_animation_controls -> title_animation_controls
    int title_animation_no_override -> title_animation_no_override
    int title_hardware_keys_back_long_press -> title_hardware_keys_back_long_press
    int title_hardware_keys_camera -> title_hardware_keys_camera
    int title_hardware_keys_home_double_tap -> title_hardware_keys_home_double_tap
    int title_hardware_keys_home_long_press -> title_hardware_keys_home_long_press
    int title_hardware_keys_menu -> title_hardware_keys_menu
    int title_hardware_keys_menu_long_press -> title_hardware_keys_menu_long_press
    int title_hardware_keys_search -> title_hardware_keys_search
    int title_hardware_keys_search_long_press -> title_hardware_keys_search_long_press
    int title_hardware_keys_switch_app -> title_hardware_keys_switch_app
    int title_hardware_keys_switch_app_long_press -> title_hardware_keys_switch_app_long_press
    int title_hardware_keys_volume_keys_double_tap -> title_hardware_keys_volume_keys_double_tap
    int title_heads_up_enabled -> title_heads_up_enabled
    int title_led_screen_on -> title_led_screen_on
    int title_navring_amount -> title_navring_amount
    int title_setting_enable_custom_hardware_keys -> title_setting_enable_custom_hardware_keys
    int title_toggles -> title_toggles
    int toast_FastFade_animation -> toast_FastFade_animation
    int toast_GrowFadeBottom_animation -> toast_GrowFadeBottom_animation
    int toast_GrowFadeCenter_animation -> toast_GrowFadeCenter_animation
    int toast_GrowFade_animation -> toast_GrowFade_animation
    int toast_Honami_animation -> toast_Honami_animation
    int toast_SlideLeft_animation -> toast_SlideLeft_animation
    int toast_SlideRight_animation -> toast_SlideRight_animation
    int toast_Tn_animation -> toast_Tn_animation
    int toast_Toko_animation -> toast_Toko_animation
    int toast_Translucent_animation -> toast_Translucent_animation
    int toast_Xylon_animation -> toast_Xylon_animation
    int toast_animation_title -> toast_animation_title
    int toast_default_animation -> toast_default_animation
    int toast_fade_animation -> toast_fade_animation
    int toast_none_animation -> toast_none_animation
    int toggle_dialog_add_toggles -> toggle_dialog_add_toggles
    int toggle_dialog_arrange_title -> toggle_dialog_arrange_title
    int toggle_favcontact_summary -> toggle_favcontact_summary
    int toggle_favcontact_title -> toggle_favcontact_title
    int toggle_screenshot_delay_summary -> toggle_screenshot_delay_summary
    int toggle_screenshot_delay_title -> toggle_screenshot_delay_title
    int toggle_swap_handle_side -> toggle_swap_handle_side
    int toggle_tab_arrange -> toggle_tab_arrange
    int toggles_arrange_instructions -> toggles_arrange_instructions
    int toggles_choose_fasttoggle_side_summary -> toggles_choose_fasttoggle_side_summary
    int toggles_choose_fasttoggle_side_title -> toggles_choose_fasttoggle_side_title
    int toggles_collapse_generic_summary -> toggles_collapse_generic_summary
    int toggles_collapse_generic_title -> toggles_collapse_generic_title
    int toggles_enable_fasttoggle_summary -> toggles_enable_fasttoggle_summary
    int toggles_enable_fasttoggle_title -> toggles_enable_fasttoggle_title
    int toggles_order_summary -> toggles_order_summary
    int toggles_order_title -> toggles_order_title
    int toggles_per_row_five -> toggles_per_row_five
    int toggles_per_row_four -> toggles_per_row_four
    int toggles_per_row_three -> toggles_per_row_three
    int toggles_per_row_title -> toggles_per_row_title
    int toggles_ribbon_instructions -> toggles_ribbon_instructions
    int toggles_style_scrollable -> toggles_style_scrollable
    int toggles_style_tile -> toggles_style_tile
    int toggles_style_title -> toggles_style_title
    int toggles_style_traditional -> toggles_style_traditional
    int toggles_swipe_to_switch_summary -> toggles_swipe_to_switch_summary
    int toggles_swipe_to_switch_title -> toggles_swipe_to_switch_title
    int toggles_tab_settings -> toggles_tab_settings
    int toggles_vibrate_summary -> toggles_vibrate_summary
    int toggles_vibrate_title -> toggles_vibrate_title
    int top -> top
    int two_targets -> two_targets
    int url_aokp -> url_aokp
    int url_aokp_irc -> url_aokp_irc
    int use_custom_app_summary -> use_custom_app_summary
    int use_custom_app_title -> use_custom_app_title
    int vibrate_notif_expand_summary -> vibrate_notif_expand_summary
    int vibrate_notif_expand_title -> vibrate_notif_expand_title
    int volume_adjust_sounds_enable_summary -> volume_adjust_sounds_enable_summary
    int volume_adjust_sounds_enable_title -> volume_adjust_sounds_enable_title
    int volume_key_cursor_control_off -> volume_key_cursor_control_off
    int volume_key_cursor_control_on -> volume_key_cursor_control_on
    int volume_key_cursor_control_on_reverse -> volume_key_cursor_control_on_reverse
    int volume_key_cursor_control_title -> volume_key_cursor_control_title
    int volume_music_controls -> volume_music_controls
    int volume_music_controls_summary -> volume_music_controls_summary
    int volume_wake_screen -> volume_wake_screen
    int volume_wake_screen_summary -> volume_wake_screen_summary
    int wake_on_notification -> wake_on_notification
    int wake_on_notification_summary -> wake_on_notification_summary
    int wakeup_when_plugged_unplugged_summary -> wakeup_when_plugged_unplugged_summary
    int wakeup_when_plugged_unplugged_title -> wakeup_when_plugged_unplugged_title
    int wakeup_with_proximity_check_summary -> wakeup_with_proximity_check_summary
    int wakeup_with_proximity_check_title -> wakeup_with_proximity_check_title
    int wallpaper_close_title -> wallpaper_close_title
    int wallpaper_intra_close_title -> wallpaper_intra_close_title
    int wallpaper_intra_open_title -> wallpaper_intra_open_title
    int wallpaper_open_title -> wallpaper_open_title
    int window_color_title -> window_color_title
    int window_settings -> window_settings
    int window_size_title -> window_size_title
    int window_space_title -> window_space_title
    void <init>() -> <init>
com.aokp.romcontrol.fragments.StatusbarSettingsFragment -> com.aokp.romcontrol.fragments.StatusbarSettingsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onSettingChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onSettingChanged
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    int cmd -> cmd
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.BackStackRecord$Op next -> next
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    android.support.v4.app.BackStackRecord$Op prev -> prev
    java.util.ArrayList removed -> removed
    void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    void <init>() -> <init>
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl IMPL -> IMPL
    java.util.Locale ROOT -> ROOT
    void <init>() -> <init>
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    void <clinit>() -> <clinit>
    java.lang.String -get0() -> -get0
    java.lang.String -get1() -> -get1
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.TextViewCompatJbMr1:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
com.koushikdutta.async.http.socketio.SocketIOConnection$1$1 -> com.koushikdutta.async.http.socketio.SocketIOConnection$1$1:
    com.koushikdutta.async.http.socketio.SocketIOConnection$1 this$1 -> this$1
    com.koushikdutta.async.future.SimpleFuture val$transport -> val$transport
    java.lang.String val$sessionId -> val$sessionId
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection$1,com.koushikdutta.async.future.SimpleFuture,java.lang.String) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.WebSocket) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.IonDrawable$IonGifDecoder -> com.koushikdutta.ion.IonDrawable$IonGifDecoder:
    com.koushikdutta.ion.gif.GifFrame currentFrame -> currentFrame
    java.lang.Exception exception -> exception
    com.koushikdutta.ion.gif.GifDecoder gifDecoder -> gifDecoder
    boolean isLoading -> isLoading
    java.lang.Runnable loader -> loader
    long nextFrameRender -> nextFrameRender
    java.lang.Runnable postLoad -> postLoad
    com.koushikdutta.ion.IonDrawable this$0 -> this$0
    void <init>(com.koushikdutta.ion.IonDrawable,com.koushikdutta.ion.bitmap.BitmapInfo) -> <init>
    com.koushikdutta.ion.gif.GifFrame getCurrentFrame() -> getCurrentFrame
    long getDelay() -> getDelay
    void scheduleNextFrame() -> scheduleNextFrame
com.koushikdutta.async.http.spdy.Spdy3 -> com.koushikdutta.async.http.spdy.Spdy3:
    byte[] DICTIONARY -> DICTIONARY
    int FLAG_FIN -> FLAG_FIN
    int FLAG_UNIDIRECTIONAL -> FLAG_UNIDIRECTIONAL
    int TYPE_DATA -> TYPE_DATA
    int TYPE_GOAWAY -> TYPE_GOAWAY
    int TYPE_HEADERS -> TYPE_HEADERS
    int TYPE_PING -> TYPE_PING
    int TYPE_RST_STREAM -> TYPE_RST_STREAM
    int TYPE_SETTINGS -> TYPE_SETTINGS
    int TYPE_SYN_REPLY -> TYPE_SYN_REPLY
    int TYPE_SYN_STREAM -> TYPE_SYN_STREAM
    int TYPE_WINDOW_UPDATE -> TYPE_WINDOW_UPDATE
    int VERSION -> VERSION
    void <init>() -> <init>
    com.koushikdutta.async.http.Protocol getProtocol() -> getProtocol
    int maxFrameSize() -> maxFrameSize
    com.koushikdutta.async.http.spdy.FrameReader newReader(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.spdy.FrameReader$Handler,boolean) -> newReader
    com.koushikdutta.async.http.spdy.FrameWriter newWriter(com.koushikdutta.async.BufferedDataSink,boolean) -> newWriter
    void <clinit>() -> <clinit>
com.aokp.romcontrol.settings.MultiChoiceSetting$2 -> com.aokp.romcontrol.settings.MultiChoiceSetting$2:
    com.aokp.romcontrol.settings.MultiChoiceSetting this$0 -> this$0
    void <init>(com.aokp.romcontrol.settings.MultiChoiceSetting) -> <init>
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
com.koushikdutta.async.http.AsyncHttpResponseImpl$1 -> com.koushikdutta.async.http.AsyncHttpResponseImpl$1:
    com.koushikdutta.async.http.AsyncHttpResponseImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncHttpResponseImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void <init>(android.support.v4.media.VolumeProviderCompat) -> <init>
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
android.support.v4.text.ICUCompat$ICUCompatImplLollipop -> android.support.v4.text.ICUCompat$ICUCompatImplLollipop:
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
com.koushikdutta.async.Util$1 -> com.koushikdutta.async.Util$1:
    boolean reported -> reported
    com.koushikdutta.async.callback.CompletedCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.annotation.NonNull -> android.support.annotation.NonNull:
com.koushikdutta.async.AsyncServer$14 -> com.koushikdutta.async.AsyncServer$14:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    void run() -> run
com.koushikdutta.async.http.server.AsyncHttpServer$4$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$4$1:
    com.koushikdutta.async.http.server.AsyncHttpServer$4 this$1 -> this$1
    com.koushikdutta.async.http.server.AsyncHttpServerResponse val$response -> val$response
    java.io.InputStream val$is -> val$is
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$4,com.koushikdutta.async.http.server.AsyncHttpServerResponse,java.io.InputStream) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.util.LruCache -> com.koushikdutta.async.util.LruCache:
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    java.util.LinkedHashMap map -> map
    long maxSize -> maxSize
    int missCount -> missCount
    int putCount -> putCount
    long size -> size
    void <init>(long) -> <init>
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    long size() -> size
    void evictAll() -> evictAll
    void setMaxSize(long) -> setMaxSize
    java.lang.Object create(java.lang.Object) -> create
    int createCount() -> createCount
    int evictionCount() -> evictionCount
    int hitCount() -> hitCount
    long maxSize() -> maxSize
    int missCount() -> missCount
    int putCount() -> putCount
    long safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    long sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
    void trimToSize(long) -> trimToSize
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    int height -> height
    java.lang.Object key -> key
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    java.lang.Object value -> value
    void <init>() -> <init>
    void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    boolean equals(java.lang.Object) -> equals
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    int hashCode() -> hashCode
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
com.koushikdutta.async.PushParser$ParseCallback -> com.koushikdutta.async.PushParser$ParseCallback:
    void parsed(java.lang.Object) -> parsed
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    void <init>() -> <init>
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
com.aokp.romcontrol.fragments.AnimationsFragment -> com.aokp.romcontrol.fragments.AnimationsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$4 -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$4:
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener this$0 -> this$0
    android.view.ViewGroup$LayoutParams val$lp -> val$lp
    android.view.View val$dismissView -> val$dismissView
    void <init>(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,android.view.ViewGroup$LayoutParams,android.view.View) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    int DIR_LTR -> DIR_LTR
    int DIR_RTL -> DIR_RTL
    int DIR_UNKNOWN -> DIR_UNKNOWN
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    char LRE -> LRE
    char LRM -> LRM
    java.lang.String LRM_STRING -> LRM_STRING
    char PDF -> PDF
    char RLE -> RLE
    char RLM -> RLM
    java.lang.String RLM_STRING -> RLM_STRING
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int mFlags -> mFlags
    boolean mIsRtlContext -> mIsRtlContext
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat) -> <init>
    int getEntryDir(java.lang.String) -> getEntryDir
    int getExitDir(java.lang.String) -> getExitDir
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean getStereoReset() -> getStereoReset
    boolean isRtl(java.lang.String) -> isRtl
    boolean isRtlContext() -> isRtlContext
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    void <clinit>() -> <clinit>
    android.support.v4.text.BidiFormatter -get0() -> -get0
    android.support.v4.text.BidiFormatter -get1() -> -get1
    android.support.v4.text.TextDirectionHeuristicCompat -get2() -> -get2
    boolean -wrap0(java.util.Locale) -> -wrap0
    void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat,android.support.v4.text.BidiFormatter) -> <init>
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    float mOffset -> mOffset
    float mPosition -> mPosition
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void setPosition(float) -> setPosition
    void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable,android.support.v4.app.ActionBarDrawerToggle$SlideDrawable) -> <init>
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    java.security.Signature mSignature -> mSignature
    void <init>(java.security.Signature) -> <init>
    void <init>(javax.crypto.Cipher) -> <init>
    void <init>(javax.crypto.Mac) -> <init>
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
    java.security.Signature getSignature() -> getSignature
com.koushikdutta.ion.Ion$Config -> com.koushikdutta.ion.Ion$Config:
    com.koushikdutta.ion.loader.AsyncHttpRequestFactory asyncHttpRequestFactory -> asyncHttpRequestFactory
    com.koushikdutta.ion.Ion this$0 -> this$0
    java.util.List getLoaders() -> getLoaders
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    com.koushikdutta.ion.Ion$Config addLoader(com.koushikdutta.ion.Loader) -> addLoader
    com.koushikdutta.ion.Ion$Config addLoader(int,com.koushikdutta.ion.Loader) -> addLoader
    javax.net.ssl.SSLContext createSSLContext(java.lang.String) -> createSSLContext
    void disableProxy() -> disableProxy
    void disableSecureProxy() -> disableSecureProxy
    com.koushikdutta.ion.loader.AsyncHttpRequestFactory getAsyncHttpRequestFactory() -> getAsyncHttpRequestFactory
    com.koushikdutta.ion.loader.ContentLoader getContentLoader() -> getContentLoader
    com.koushikdutta.ion.loader.FileLoader getFileLoader() -> getFileLoader
    com.google.gson.Gson getGson() -> getGson
    com.koushikdutta.ion.loader.HttpLoader getHttpLoader() -> getHttpLoader
    com.koushikdutta.ion.loader.PackageIconLoader getPackageIconLoader() -> getPackageIconLoader
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware getResponseCache() -> getResponseCache
    com.koushikdutta.ion.loader.VideoLoader getVideoLoader() -> getVideoLoader
    com.koushikdutta.ion.Ion$Config insertLoader(com.koushikdutta.ion.Loader) -> insertLoader
    void proxy(java.lang.String,int) -> proxy
    void proxySecure(java.lang.String,int) -> proxySecure
    com.koushikdutta.ion.Ion$Config setAsyncHttpRequestFactory(com.koushikdutta.ion.loader.AsyncHttpRequestFactory) -> setAsyncHttpRequestFactory
    void setGson(com.google.gson.Gson) -> setGson
    com.koushikdutta.ion.Ion$Config setLogging(java.lang.String,int) -> setLogging
    java.lang.String userAgent() -> userAgent
    com.koushikdutta.ion.Ion$Config userAgent(java.lang.String) -> userAgent
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    boolean mApplyGravity -> mApplyGravity
    android.graphics.Bitmap mBitmap -> mBitmap
    int mBitmapHeight -> mBitmapHeight
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    int mBitmapWidth -> mBitmapWidth
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    int mGravity -> mGravity
    boolean mIsCircular -> mIsCircular
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Matrix mShaderMatrix -> mShaderMatrix
    int mTargetDensity -> mTargetDensity
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void computeBitmapSize() -> computeBitmapSize
    void draw(android.graphics.Canvas) -> draw
    int getAlpha() -> getAlpha
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    float getCornerRadius() -> getCornerRadius
    int getGravity() -> getGravity
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    android.graphics.Paint getPaint() -> getPaint
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    boolean hasAntiAlias() -> hasAntiAlias
    boolean hasMipMap() -> hasMipMap
    boolean isCircular() -> isCircular
    boolean isGreaterThanZero(float) -> isGreaterThanZero
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setAlpha(int) -> setAlpha
    void setAntiAlias(boolean) -> setAntiAlias
    void setCircular(boolean) -> setCircular
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setCornerRadius(float) -> setCornerRadius
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    void updateCircularCornerRadius() -> updateCircularCornerRadius
    void updateDstRect() -> updateDstRect
com.koushikdutta.async.http.body.DocumentBody -> com.koushikdutta.async.http.body.DocumentBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.io.ByteArrayOutputStream bout -> bout
    org.w3c.dom.Document document -> document
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    void <init>() -> <init>
    void <init>(org.w3c.dom.Document) -> <init>
    org.w3c.dom.Document get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void prepare() -> prepare
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
com.aokp.romcontrol.settings.SystemSettingSwitchPreference -> com.aokp.romcontrol.settings.SystemSettingSwitchPreference:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    boolean isPersisted() -> isPersisted
    boolean persistBoolean(boolean) -> persistBoolean
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    void <init>(android.support.v4.provider.DocumentFile,java.io.File) -> <init>
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    boolean delete() -> delete
    boolean deleteContents(java.io.File) -> deleteContents
    boolean exists() -> exists
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    android.net.Uri getUri() -> getUri
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl:
    void <init>() -> <init>
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
com.koushikdutta.async.AsyncDatagramSocket$2 -> com.koushikdutta.async.AsyncDatagramSocket$2:
    com.koushikdutta.async.AsyncDatagramSocket this$0 -> this$0
    java.net.InetSocketAddress val$address -> val$address
    java.nio.ByteBuffer val$buffer -> val$buffer
    void <init>(com.koushikdutta.async.AsyncDatagramSocket,java.net.InetSocketAddress,java.nio.ByteBuffer) -> <init>
    void run() -> run
com.koushikdutta.ion.LoadDeepZoom -> com.koushikdutta.ion.LoadDeepZoom:
    com.koushikdutta.async.util.FileCache fileCache -> fileCache
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,boolean,com.koushikdutta.async.util.FileCache) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.Response) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.future.FutureThread$2 -> com.koushikdutta.async.future.FutureThread$2:
    com.koushikdutta.async.future.FutureThread this$0 -> this$0
    com.koushikdutta.async.future.FutureRunnable val$runnable -> val$runnable
    void <init>(com.koushikdutta.async.future.FutureThread,com.koushikdutta.async.future.FutureRunnable) -> <init>
    void run() -> run
com.koushikdutta.async.AsyncNetworkSocket$1 -> com.koushikdutta.async.AsyncNetworkSocket$1:
    com.koushikdutta.async.AsyncNetworkSocket this$0 -> this$0
    com.koushikdutta.async.ByteBufferList val$list -> val$list
    void <init>(com.koushikdutta.async.AsyncNetworkSocket,com.koushikdutta.async.ByteBufferList) -> <init>
    void run() -> run
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void <init>() -> <init>
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    android.view.View onFindViewById(int) -> onFindViewById
    android.support.v4.app.FragmentActivity onGetHost() -> onGetHost
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    int onGetWindowAnimations() -> onGetWindowAnimations
    boolean onHasView() -> onHasView
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    java.lang.Object onGetHost() -> onGetHost
android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl -> android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
com.koushikdutta.async.http.body.MultipartFormDataBody -> com.koushikdutta.async.http.body.MultipartFormDataBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String contentType -> contentType
    com.koushikdutta.async.http.Headers formData -> formData
    com.koushikdutta.async.ByteBufferList last -> last
    java.lang.String lastName -> lastName
    com.koushikdutta.async.LineEmitter liner -> liner
    com.koushikdutta.async.http.body.MultipartFormDataBody$MultipartCallback mCallback -> mCallback
    java.util.ArrayList mParts -> mParts
    int totalToWrite -> totalToWrite
    int written -> written
    void <init>(java.lang.String[]) -> <init>
    void onBoundaryStart() -> onBoundaryStart
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    void <init>() -> <init>
    void addFilePart(java.lang.String,java.io.File) -> addFilePart
    void addPart(com.koushikdutta.async.http.body.Part) -> addPart
    void addStringPart(java.lang.String,java.lang.String) -> addStringPart
    com.koushikdutta.async.http.Multimap get() -> get
    java.lang.String getContentType() -> getContentType
    java.lang.String getField(java.lang.String) -> getField
    com.koushikdutta.async.http.body.MultipartFormDataBody$MultipartCallback getMultipartCallback() -> getMultipartCallback
    void handleLast() -> handleLast
    int length() -> length
    void onBoundaryEnd() -> onBoundaryEnd
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void setContentType(java.lang.String) -> setContentType
    void setMultipartCallback(com.koushikdutta.async.http.body.MultipartFormDataBody$MultipartCallback) -> setMultipartCallback
    java.lang.Object get() -> get
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void <init>() -> <init>
    android.app.Notification build() -> build
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    void <init>() -> <init>
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.app.Activity mActivity -> mActivity
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    int mWindowAnimations -> mWindowAnimations
    android.content.Context getContext() -> getContext
    android.app.Activity getActivity() -> getActivity
    java.lang.Object onGetHost() -> onGetHost
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    android.os.Handler getHandler() -> getHandler
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    int onGetWindowAnimations() -> onGetWindowAnimations
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    void inactivateFragment(java.lang.String) -> inactivateFragment
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    android.support.v4.app.LoaderManagerImpl getLoaderManagerImpl() -> getLoaderManagerImpl
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    void doLoaderRetain() -> doLoaderRetain
    void doLoaderDestroy() -> doLoaderDestroy
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    void <init>(android.content.Context,android.os.Handler,int) -> <init>
    void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    boolean mAutoRequery -> mAutoRequery
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.content.Context mContext -> mContext
    android.database.Cursor mCursor -> mCursor
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    boolean mDataValid -> mDataValid
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int mRowIDColumn -> mRowIDColumn
    void <init>(android.content.Context,android.database.Cursor) -> <init>
    void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    int getCount() -> getCount
    android.database.Cursor getCursor() -> getCursor
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean hasStableIds() -> hasStableIds
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void onContentChanged() -> onContentChanged
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    int mControlType -> mControlType
    int mCurrentVolume -> mCurrentVolume
    int mMaxVolume -> mMaxVolume
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    void onAdjustVolume(int) -> onAdjustVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    java.lang.Object getVolumeProvider() -> getVolumeProvider
    void <init>(int,int,int) -> <init>
    void setCurrentVolume(int) -> setCurrentVolume
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_EOF -> PEEKED_EOF
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    char[] buffer -> buffer
    java.io.Reader in -> in
    boolean lenient -> lenient
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int pos -> pos
    int[] stack -> stack
    int stackSize -> stackSize
    void skipValue() -> skipValue
    com.google.gson.stream.JsonToken peek() -> peek
    void nextNull() -> nextNull
    void beginArray() -> beginArray
    boolean hasNext() -> hasNext
    void endArray() -> endArray
    void <init>(java.io.Reader) -> <init>
    void beginObject() -> beginObject
    void checkLenient() -> checkLenient
    void close() -> close
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int doPeek() -> doPeek
    void endObject() -> endObject
    boolean fillBuffer(int) -> fillBuffer
    int getColumnNumber() -> getColumnNumber
    int getLineNumber() -> getLineNumber
    boolean isLenient() -> isLenient
    boolean isLiteral(char) -> isLiteral
    boolean nextBoolean() -> nextBoolean
    double nextDouble() -> nextDouble
    int nextInt() -> nextInt
    long nextLong() -> nextLong
    java.lang.String nextName() -> nextName
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextString() -> nextString
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    void push(int) -> push
    char readEscapeCharacter() -> readEscapeCharacter
    void setLenient(boolean) -> setLenient
    void skipQuotedValue(char) -> skipQuotedValue
    boolean skipTo(java.lang.String) -> skipTo
    void skipToEndOfLine() -> skipToEndOfLine
    void skipUnquotedValue() -> skipUnquotedValue
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    int -get0(com.google.gson.stream.JsonReader) -> -get0
    int -set0(com.google.gson.stream.JsonReader,int) -> -set0
    int -wrap0(com.google.gson.stream.JsonReader) -> -wrap0
    int -wrap1(com.google.gson.stream.JsonReader) -> -wrap1
    int -wrap2(com.google.gson.stream.JsonReader) -> -wrap2
com.aokp.romcontrol.settings.UrlSetting -> com.aokp.romcontrol.settings.UrlSetting:
    java.lang.String mUrl -> mUrl
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    void run() -> run
    void <init>(android.support.v4.widget.AutoScrollHelper,android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable) -> <init>
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$4 -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$4:
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpResponse val$remoteResponse -> val$remoteResponse
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl,com.koushikdutta.async.http.AsyncHttpResponse) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.widget.PopupWindowCompatApi23 -> android.support.v4.widget.PopupWindowCompatApi23:
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int LONG_PRESS -> LONG_PRESS
    int SHOW_PRESS -> SHOW_PRESS
    int TAP -> TAP
    int TAP_TIMEOUT -> TAP_TIMEOUT
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    android.os.Handler mHandler -> mHandler
    boolean mInLongPress -> mInLongPress
    boolean mIsDoubleTapping -> mIsDoubleTapping
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mStillDown -> mStillDown
    int mTouchSlopSquare -> mTouchSlopSquare
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    void dispatchLongPress() -> dispatchLongPress
    void init(android.content.Context) -> init
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void <clinit>() -> <clinit>
    android.view.MotionEvent -get0(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> -get0
    android.view.GestureDetector$OnDoubleTapListener -get1(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> -get1
    android.view.GestureDetector$OnGestureListener -get2(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> -get2
    boolean -get3(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> -get3
    boolean -set0(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> -set0
    void -wrap0(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> -wrap0
com.koushikdutta.async.http.socketio.EventCallback -> com.koushikdutta.async.http.socketio.EventCallback:
    void onEvent(org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> onEvent
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    boolean bound -> bound
    android.content.ComponentName componentName -> componentName
    int retryCount -> retryCount
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    void <init>(android.content.ComponentName) -> <init>
com.koushikdutta.async.http.socketio.transport.XHRPollingTransport$2 -> com.koushikdutta.async.http.socketio.transport.XHRPollingTransport$2:
    com.koushikdutta.async.http.socketio.transport.XHRPollingTransport this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.transport.XHRPollingTransport) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.String) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object,java.lang.Object) -> onCompleted
com.koushikdutta.async.http.socketio.ReconnectCallback -> com.koushikdutta.async.http.socketio.ReconnectCallback:
    void onReconnect() -> onReconnect
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$2 -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$2:
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener this$0 -> this$0
    android.view.View val$downView -> val$downView
    int val$downPosition -> val$downPosition
    void <init>(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,android.view.View,int) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    boolean deserialized -> deserialized
    java.lang.String name -> name
    boolean serialized -> serialized
    void <init>(java.lang.String,boolean,boolean) -> <init>
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    boolean hasMipMap() -> hasMipMap
    void setMipMap(boolean) -> setMipMap
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.LayoutInflaterFactory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
com.koushikdutta.ion.IonBitmapRequestBuilder$2 -> com.koushikdutta.ion.IonBitmapRequestBuilder$2:
    com.koushikdutta.ion.IonBitmapRequestBuilder this$0 -> this$0
    com.koushikdutta.ion.BitmapFetcher val$bitmapFetcher -> val$bitmapFetcher
    com.koushikdutta.ion.BitmapInfoToBitmap val$ret -> val$ret
    void <init>(com.koushikdutta.ion.IonBitmapRequestBuilder,com.koushikdutta.ion.BitmapFetcher,com.koushikdutta.ion.BitmapInfoToBitmap) -> <init>
    void run() -> run
com.koushikdutta.async.http.callback.HttpConnectCallback -> com.koushikdutta.async.http.callback.HttpConnectCallback:
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    void <init>(java.lang.reflect.Method,int) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_CACHE -> DIR_CACHE
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String TAG -> TAG
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    void <init>() -> <init>
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    java.io.File createFilesDir(java.io.File) -> createFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    int getColor(android.content.Context,int) -> getColor
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
com.koushikdutta.async.parser.AsyncParser -> com.koushikdutta.async.parser.AsyncParser:
    java.lang.reflect.Type getType() -> getType
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    boolean isIconified(android.view.View) -> isIconified
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setIconified(android.view.View,boolean) -> setIconified
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
com.koushikdutta.async.http.filter.ChunkedInputFilter -> com.koushikdutta.async.http.filter.ChunkedInputFilter:
    int mChunkLength -> mChunkLength
    int mChunkLengthRemaining -> mChunkLengthRemaining
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State mState -> mState
    com.koushikdutta.async.ByteBufferList pending -> pending
    boolean -assertionsDisabled -> -assertionsDisabled
    int[] -com_koushikdutta_async_http_filter_ChunkedInputFilter$StateSwitchesValues -> -com_koushikdutta_async_http_filter_ChunkedInputFilter$StateSwitchesValues
    void <init>() -> <init>
    boolean checkByte(char,char) -> checkByte
    boolean checkCR(char) -> checkCR
    boolean checkLF(char) -> checkLF
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void report(java.lang.Exception) -> report
    void <clinit>() -> <clinit>
    int[] -getcom_koushikdutta_async_http_filter_ChunkedInputFilter$StateSwitchesValues() -> -getcom_koushikdutta_async_http_filter_ChunkedInputFilter$StateSwitchesValues
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    void <init>() -> <init>
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    android.widget.ImageView upIndicatorView -> upIndicatorView
    void <init>(android.app.Activity) -> <init>
android.support.v4.app.AppOpsManagerCompat23 -> android.support.v4.app.AppOpsManagerCompat23:
    void <init>() -> <init>
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
com.koushikdutta.async.AsyncServer$8 -> com.koushikdutta.async.AsyncServer$8:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    java.lang.String val$host -> val$host
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void run() -> run
    void <init>(com.koushikdutta.async.AsyncServer,java.lang.String,com.koushikdutta.async.future.SimpleFuture) -> <init>
android.support.v4.os.CancellationSignalCompatJellybean -> android.support.v4.os.CancellationSignalCompatJellybean:
    void <init>() -> <init>
    void cancel(java.lang.Object) -> cancel
    java.lang.Object create() -> create
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    void <init>() -> <init>
    com.google.gson.JsonNull deepCopy() -> deepCopy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <clinit>() -> <clinit>
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.koushikdutta.ion.IonDrawable$1 -> com.koushikdutta.ion.IonDrawable$1:
    com.koushikdutta.ion.IonDrawable this$0 -> this$0
    void <init>(com.koushikdutta.ion.IonDrawable) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.bitmap.BitmapInfo) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.Loader -> com.koushikdutta.ion.Loader:
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    com.koushikdutta.ion.future.ResponseFuture load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,java.lang.reflect.Type) -> load
    com.koushikdutta.async.future.Future resolve(android.content.Context,com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest) -> resolve
android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> <init>
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    void <init>() -> <init>
    void abortAnimation(java.lang.Object) -> abortAnimation
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
    boolean isFinished(java.lang.Object) -> isFinished
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
android.support.v4.media.RatingCompat$StarStyle -> android.support.v4.media.RatingCompat$StarStyle:
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    void <init>() -> <init>
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int DRAWER_ELEVATION -> DRAWER_ELEVATION
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int PEEK_DELAY -> PEEK_DELAY
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> SET_DRAWER_SHADOW_FROM_ELEVATION
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_IDLE -> STATE_IDLE
    int STATE_SETTLING -> STATE_SETTLING
    java.lang.String TAG -> TAG
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    float mDrawerElevation -> mDrawerElevation
    int mDrawerState -> mDrawerState
    boolean mFirstLayout -> mFirstLayout
    boolean mInLayout -> mInLayout
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    java.lang.Object mLastInsets -> mLastInsets
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    int mMinDrawerMargin -> mMinDrawerMargin
    java.util.ArrayList mNonDrawerViews -> mNonDrawerViews
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.graphics.drawable.Drawable mShadowEnd -> mShadowEnd
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowLeftResolved -> mShadowLeftResolved
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mShadowRightResolved -> mShadowRightResolved
    android.graphics.drawable.Drawable mShadowStart -> mShadowStart
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void computeScroll() -> computeScroll
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    float getDrawerElevation() -> getDrawerElevation
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    java.lang.String gravityToString(int) -> gravityToString
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void requestLayout() -> requestLayout
    android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    void resolveShadowDrawables() -> resolveShadowDrawables
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerElevation(float) -> setDrawerElevation
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    void setScrimColor(int) -> setScrimColor
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void <clinit>() -> <clinit>
    boolean -get0() -> -get0
    int[] -get1() -> -get1
    android.view.View -wrap0(android.support.v4.widget.DrawerLayout) -> -wrap0
    boolean -wrap1(android.view.View) -> -wrap1
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    void <init>() -> <init>
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
com.koushikdutta.ion.FileCacheStore -> com.koushikdutta.ion.FileCacheStore:
    com.koushikdutta.async.util.FileCache cache -> cache
    com.koushikdutta.ion.Ion ion -> ion
    java.lang.String rawKey -> rawKey
    void <init>(com.koushikdutta.ion.Ion,com.koushikdutta.async.util.FileCache,java.lang.String) -> <init>
    com.koushikdutta.async.future.Future put(java.lang.Object,com.koushikdutta.async.parser.AsyncParser) -> put
    com.koushikdutta.async.future.Future as(com.koushikdutta.async.parser.AsyncParser) -> as
    com.koushikdutta.async.future.Future as(java.lang.Class) -> as
    com.koushikdutta.async.future.Future as(com.google.gson.reflect.TypeToken) -> as
    com.koushikdutta.async.future.Future asDocument() -> asDocument
    com.koushikdutta.async.future.Future asJsonArray() -> asJsonArray
    com.koushikdutta.async.future.Future asJsonObject() -> asJsonObject
    com.koushikdutta.async.future.Future asString() -> asString
    java.lang.String computeKey() -> computeKey
    java.lang.Object get(com.koushikdutta.async.parser.AsyncParser) -> get
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(com.google.gson.reflect.TypeToken) -> get
    org.w3c.dom.Document getDocument() -> getDocument
    com.google.gson.JsonArray getJsonArray() -> getJsonArray
    com.google.gson.JsonObject getJsonObject() -> getJsonObject
    java.lang.String getString() -> getString
    com.koushikdutta.async.future.Future put(java.lang.Object,java.lang.Class) -> put
    com.koushikdutta.async.future.Future put(java.lang.Object,com.google.gson.reflect.TypeToken) -> put
    com.koushikdutta.async.future.Future putDocument(org.w3c.dom.Document) -> putDocument
    com.koushikdutta.async.future.Future putJsonArray(com.google.gson.JsonArray) -> putJsonArray
    com.koushikdutta.async.future.Future putJsonObject(com.google.gson.JsonObject) -> putJsonObject
    com.koushikdutta.async.future.Future putString(java.lang.String) -> putString
    void remove() -> remove
    java.lang.String -wrap0(com.koushikdutta.ion.FileCacheStore) -> -wrap0
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    long mLatestTimestamp -> mLatestTimestamp
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    void <init>(java.lang.String) -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
com.koushikdutta.async.http.body.FilePart -> com.koushikdutta.async.http.body.FilePart:
    java.io.File file -> file
    void <init>(java.lang.String,java.io.File) -> <init>
    java.io.InputStream getInputStream() -> getInputStream
com.koushikdutta.ion.ScaleMode -> com.koushikdutta.ion.ScaleMode:
    com.koushikdutta.ion.ScaleMode[] $VALUES -> $VALUES
    com.koushikdutta.ion.ScaleMode CenterCrop -> CenterCrop
    com.koushikdutta.ion.ScaleMode CenterInside -> CenterInside
    com.koushikdutta.ion.ScaleMode FitCenter -> FitCenter
    com.koushikdutta.ion.ScaleMode FitXY -> FitXY
    void <init>(java.lang.String,int) -> <init>
    com.koushikdutta.ion.ScaleMode valueOf(java.lang.String) -> valueOf
    com.koushikdutta.ion.ScaleMode[] values() -> values
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.socketio.SocketIOConnection$SelectCallback -> com.koushikdutta.async.http.socketio.SocketIOConnection$SelectCallback:
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
com.koushikdutta.async.AsyncDatagramSocket -> com.koushikdutta.async.AsyncDatagramSocket:
    void <init>() -> <init>
    java.net.InetSocketAddress getRemoteAddress() -> getRemoteAddress
    void send(java.net.InetSocketAddress,java.nio.ByteBuffer) -> send
    void send(java.lang.String,int,java.nio.ByteBuffer) -> send
    void connect(java.net.InetSocketAddress) -> connect
    void disconnect() -> disconnect
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    void <init>() -> <init>
    java.lang.String getAction(java.lang.Object) -> getAction
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getIcon(java.lang.Object) -> getIcon
    java.lang.CharSequence getName(java.lang.Object) -> getName
    java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> newInstance
com.koushikdutta.async.parser.ByteBufferListParser$3 -> com.koushikdutta.async.parser.ByteBufferListParser$3:
    com.koushikdutta.async.parser.ByteBufferListParser this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.ByteBufferList val$bb -> val$bb
    void <init>(com.koushikdutta.async.parser.ByteBufferListParser,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.ByteBufferList) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.future.FutureThread$1 -> com.koushikdutta.async.future.FutureThread$1:
    com.koushikdutta.async.future.FutureThread this$0 -> this$0
    com.koushikdutta.async.future.FutureRunnable val$runnable -> val$runnable
    void <init>(com.koushikdutta.async.future.FutureThread,com.koushikdutta.async.future.FutureRunnable) -> <init>
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.koushikdutta.ion.DeferredLoadBitmap -> com.koushikdutta.ion.DeferredLoadBitmap:
    int priority -> priority
    com.koushikdutta.ion.BitmapFetcher fetcher -> fetcher
    int DEFER_COUNTER -> DEFER_COUNTER
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,com.koushikdutta.ion.BitmapFetcher) -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener -> net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener:
    void onColorChanged(int) -> onColorChanged
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    void <init>() -> <init>
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    com.google.gson.JsonArray deepCopy() -> deepCopy
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement get(int) -> get
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    boolean getAsBoolean() -> getAsBoolean
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    int getAsInt() -> getAsInt
    long getAsLong() -> getAsLong
    java.lang.Number getAsNumber() -> getAsNumber
    short getAsShort() -> getAsShort
    java.lang.String getAsString() -> getAsString
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    int size() -> size
    com.google.gson.JsonElement deepCopy() -> deepCopy
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    void <init>() -> <init>
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
com.koushikdutta.async.http.server.AsyncHttpServer$1$1$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$1$1$1:
    com.koushikdutta.async.http.server.AsyncHttpServer$1$1 this$2 -> this$2
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$1$1) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    void <init>() -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
com.koushikdutta.ion.loader.ContentLoader -> com.koushikdutta.ion.loader.ContentLoader:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    java.io.InputStream getInputStream(android.content.Context,java.lang.String) -> getInputStream
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl -> android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl:
    void <init>() -> <init>
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.DragSortListView$DragScroller:
    int DOWN -> DOWN
    int STOP -> STOP
    int UP -> UP
    float dt -> dt
    int dy -> dy
    boolean mAbort -> mAbort
    long mCurrTime -> mCurrTime
    int mFirstFooter -> mFirstFooter
    int mLastHeader -> mLastHeader
    long mPrevTime -> mPrevTime
    float mScrollSpeed -> mScrollSpeed
    boolean mScrolling -> mScrolling
    int scrollDir -> scrollDir
    long tStart -> tStart
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    int getScrollDir() -> getScrollDir
    boolean isScrolling() -> isScrolling
    void run() -> run
    void startScrolling(int) -> startScrolling
    void stopScrolling(boolean) -> stopScrolling
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean hasTransientState(android.view.View) -> hasTransientState
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider:
    android.animation.TimeInterpolator mDefaultInterpolator -> mDefaultInterpolator
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> clearInterpolator
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    void abortAnimation(java.lang.Object) -> abortAnimation
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
    boolean isFinished(java.lang.Object) -> isFinished
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.koushikdutta.ion.builder.Builders$Any$IF -> com.koushikdutta.ion.builder.Builders$Any$IF:
com.koushikdutta.async.http.AsyncHttpRequest -> com.koushikdutta.async.http.AsyncHttpRequest:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    java.lang.String LOGTAG -> LOGTAG
    long executionTime -> executionTime
    int logLevel -> logLevel
    com.koushikdutta.async.http.body.AsyncHttpRequestBody mBody -> mBody
    boolean mFollowRedirect -> mFollowRedirect
    java.lang.String mMethod -> mMethod
    com.koushikdutta.async.http.Headers mRawHeaders -> mRawHeaders
    int mTimeout -> mTimeout
    java.lang.String proxyHost -> proxyHost
    int proxyPort -> proxyPort
    android.net.Uri uri -> uri
    boolean -assertionsDisabled -> -assertionsDisabled
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    void setBody(com.koushikdutta.async.http.body.AsyncHttpRequestBody) -> setBody
    android.net.Uri getUri() -> getUri
    java.lang.String getProxyHost() -> getProxyHost
    int getProxyPort() -> getProxyPort
    void logd(java.lang.String) -> logd
    void enableProxy(java.lang.String,int) -> enableProxy
    void logv(java.lang.String) -> logv
    void <init>(android.net.Uri,java.lang.String) -> <init>
    com.koushikdutta.async.http.body.AsyncHttpRequestBody getBody() -> getBody
    java.lang.String getMethod() -> getMethod
    void <init>(android.net.Uri,java.lang.String,com.koushikdutta.async.http.Headers) -> <init>
    void logi(java.lang.String) -> logi
    void loge(java.lang.String,java.lang.Exception) -> loge
    com.koushikdutta.async.http.RequestLine getRequestLine() -> getRequestLine
    com.koushikdutta.async.http.AsyncHttpRequest addHeader(java.lang.String,java.lang.String) -> addHeader
    void disableProxy() -> disableProxy
    java.lang.String getDefaultUserAgent() -> getDefaultUserAgent
    boolean getFollowRedirect() -> getFollowRedirect
    int getLogLevel() -> getLogLevel
    java.lang.String getLogMessage(java.lang.String) -> getLogMessage
    java.lang.String getLogTag() -> getLogTag
    int getTimeout() -> getTimeout
    void logd(java.lang.String,java.lang.Exception) -> logd
    void loge(java.lang.String) -> loge
    void logw(java.lang.String) -> logw
    void onHandshakeException(com.koushikdutta.async.AsyncSSLException) -> onHandshakeException
    void setDefaultHeaders(com.koushikdutta.async.http.Headers,android.net.Uri) -> setDefaultHeaders
    com.koushikdutta.async.http.AsyncHttpRequest setFollowRedirect(boolean) -> setFollowRedirect
    com.koushikdutta.async.http.AsyncHttpRequest setHeader(java.lang.String,java.lang.String) -> setHeader
    void setLogging(java.lang.String,int) -> setLogging
    com.koushikdutta.async.http.AsyncHttpRequest setMethod(java.lang.String) -> setMethod
    com.koushikdutta.async.http.AsyncHttpRequest setTimeout(int) -> setTimeout
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    java.lang.String -get0(com.koushikdutta.async.http.AsyncHttpRequest) -> -get0
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    int binarySearch(int[],int,int) -> binarySearch
    void <init>() -> <init>
    int binarySearch(long[],int,long) -> binarySearch
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    void <clinit>() -> <clinit>
com.koushikdutta.ion.bitmap.LruBitmapCache -> com.koushikdutta.ion.bitmap.LruBitmapCache:
    com.koushikdutta.ion.bitmap.SoftReferenceHashtable soft -> soft
    void <init>(int) -> <init>
    com.koushikdutta.ion.bitmap.BitmapInfo removeBitmapInfo(java.lang.String) -> removeBitmapInfo
    void evictAllBitmapInfo() -> evictAllBitmapInfo
    void putSoft(java.lang.String,com.koushikdutta.ion.bitmap.BitmapInfo) -> putSoft
    com.koushikdutta.ion.bitmap.BitmapInfo getBitmapInfo(java.lang.String) -> getBitmapInfo
    void entryRemoved(boolean,java.lang.String,com.koushikdutta.ion.bitmap.BitmapInfo,com.koushikdutta.ion.bitmap.BitmapInfo) -> entryRemoved
    long sizeOf(java.lang.String,com.koushikdutta.ion.bitmap.BitmapInfo) -> sizeOf
    long sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$DismissCallbacks -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$DismissCallbacks:
    boolean canDismiss(int) -> canDismiss
    void onDismiss(android.widget.ListView,int[]) -> onDismiss
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    void <init>() -> <init>
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean isTracking(android.view.KeyEvent) -> isTracking
    void startTracking(android.view.KeyEvent) -> startTracking
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onStop() -> onStop
com.koushikdutta.async.http.body.MultipartFormDataBody$4 -> com.koushikdutta.async.http.body.MultipartFormDataBody$4:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.http.body.Part val$part -> val$part
    com.koushikdutta.async.DataSink val$sink -> val$sink
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.http.body.Part,com.koushikdutta.async.DataSink) -> <init>
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    void <init>() -> <init>
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
com.koushikdutta.ion.mock.MockRequestHandler -> com.koushikdutta.ion.mock.MockRequestHandler:
    java.lang.Object request(java.lang.String) -> request
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    java.util.List deserializationStrategies -> deserializationStrategies
    int modifiers -> modifiers
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    boolean serializeInnerClasses -> serializeInnerClasses
    double version -> version
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <init>() -> <init>
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    void <clinit>() -> <clinit>
    java.lang.Object clone() -> clone
com.koushikdutta.async.http.socketio.SocketIOConnection$1 -> com.koushikdutta.async.http.socketio.SocketIOConnection$1:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void transform(java.lang.String) -> transform
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void transform(java.lang.Object) -> transform
com.koushikdutta.async.future.HandlerFuture$1$1 -> com.koushikdutta.async.future.HandlerFuture$1$1:
    com.koushikdutta.async.future.HandlerFuture$1 this$1 -> this$1
    java.lang.Exception val$e -> val$e
    java.lang.Object val$result -> val$result
    void <init>(com.koushikdutta.async.future.HandlerFuture$1,java.lang.Exception,java.lang.Object) -> <init>
    void run() -> run
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void <init>() -> <init>
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
com.aokp.romcontrol.settings.MultiChoiceSetting$3 -> com.aokp.romcontrol.settings.MultiChoiceSetting$3:
    com.aokp.romcontrol.settings.MultiChoiceSetting this$0 -> this$0
    android.app.AlertDialog val$d -> val$d
    void onShow(android.content.DialogInterface) -> onShow
    void <init>(com.aokp.romcontrol.settings.MultiChoiceSetting,android.app.AlertDialog) -> <init>
com.koushikdutta.ion.gson.PojoBody -> com.koushikdutta.ion.gson.PojoBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] bodyBytes -> bodyBytes
    com.google.gson.Gson gson -> gson
    java.lang.Object pojo -> pojo
    java.lang.reflect.Type type -> type
    void <init>(com.google.gson.Gson,java.lang.Object,com.google.gson.reflect.TypeToken) -> <init>
    java.lang.Object get() -> get
    byte[] getBodyBytes() -> getBodyBytes
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.app.AppOpsManagerCompat:
    int MODE_ALLOWED -> MODE_ALLOWED
    android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl IMPL -> IMPL
    int MODE_DEFAULT -> MODE_DEFAULT
    int MODE_IGNORED -> MODE_IGNORED
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    void <init>() -> <init>
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    void <clinit>() -> <clinit>
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.AsyncHttpClient$10$1 -> com.koushikdutta.async.http.AsyncHttpClient$10$1:
    com.koushikdutta.async.http.AsyncHttpClient$10 this$1 -> this$1
    com.koushikdutta.async.http.callback.RequestCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.http.AsyncHttpResponse val$response -> val$response
    void <init>(com.koushikdutta.async.http.AsyncHttpClient$10,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.PushParser$7 -> com.koushikdutta.async.PushParser$7:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser) -> <init>
    void parsed(com.koushikdutta.async.ByteBufferList) -> parsed
    void parsed(java.lang.Object) -> parsed
com.koushikdutta.async.parser.StringParser$1 -> com.koushikdutta.async.parser.StringParser$1:
    com.koushikdutta.async.parser.StringParser this$0 -> this$0
    java.lang.String val$charset -> val$charset
    void <init>(com.koushikdutta.async.parser.StringParser,java.lang.String) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    void <init>() -> <init>
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    boolean isIconified(android.view.View) -> isIconified
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setIconified(android.view.View,boolean) -> setIconified
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
com.koushikdutta.ion.loader.VideoLoader -> com.koushikdutta.ion.loader.VideoLoader:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    android.graphics.Bitmap createVideoThumbnail(java.lang.String) -> createVideoThumbnail
    boolean mustUseThumbnailUtils() -> mustUseThumbnailUtils
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    int VERTICAL -> VERTICAL
    int mActivationDelay -> mActivationDelay
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mAnimating -> mAnimating
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    int mEdgeType -> mEdgeType
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    float[] mMaximumEdges -> mMaximumEdges
    float[] mMaximumVelocity -> mMaximumVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    boolean mNeedsCancel -> mNeedsCancel
    boolean mNeedsReset -> mNeedsReset
    float[] mRelativeEdges -> mRelativeEdges
    float[] mRelativeVelocity -> mRelativeVelocity
    java.lang.Runnable mRunnable -> mRunnable
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.View mTarget -> mTarget
    void <init>(android.view.View) -> <init>
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    void cancelTargetTouch() -> cancelTargetTouch
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    boolean isEnabled() -> isEnabled
    boolean isExclusive() -> isExclusive
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void requestStop() -> requestStop
    void scrollTargetBy(int,int) -> scrollTargetBy
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void <clinit>() -> <clinit>
    boolean -get0(android.support.v4.widget.AutoScrollHelper) -> -get0
    boolean -get1(android.support.v4.widget.AutoScrollHelper) -> -get1
    boolean -get2(android.support.v4.widget.AutoScrollHelper) -> -get2
    android.support.v4.widget.AutoScrollHelper$ClampedScroller -get3(android.support.v4.widget.AutoScrollHelper) -> -get3
    android.view.View -get4(android.support.v4.widget.AutoScrollHelper) -> -get4
    boolean -set0(android.support.v4.widget.AutoScrollHelper,boolean) -> -set0
    boolean -set1(android.support.v4.widget.AutoScrollHelper,boolean) -> -set1
    boolean -set2(android.support.v4.widget.AutoScrollHelper,boolean) -> -set2
    boolean -wrap0(android.support.v4.widget.AutoScrollHelper) -> -wrap0
    float -wrap1(float,float,float) -> -wrap1
    int -wrap2(int,int,int) -> -wrap2
    void -wrap3(android.support.v4.widget.AutoScrollHelper) -> -wrap3
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void <init>() -> <init>
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    int EDGE_LEFT -> EDGE_LEFT
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_RIGHT -> EDGE_RIGHT
    int DIRECTION_ALL -> DIRECTION_ALL
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int EDGE_ALL -> EDGE_ALL
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_SIZE -> EDGE_SIZE
    int EDGE_TOP -> EDGE_TOP
    int INVALID_POINTER -> INVALID_POINTER
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    java.lang.String TAG -> TAG
    int mActivePointerId -> mActivePointerId
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    int mDragState -> mDragState
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mEdgeSize -> mEdgeSize
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    android.view.ViewGroup mParentView -> mParentView
    int mPointersDown -> mPointersDown
    boolean mReleaseInProgress -> mReleaseInProgress
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    int mTouchSlop -> mTouchSlop
    int mTrackingEdges -> mTrackingEdges
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View getCapturedView() -> getCapturedView
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    int getEdgeSize() -> getEdgeSize
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    void captureChildView(android.view.View,int) -> captureChildView
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    void setMinVelocity(float) -> setMinVelocity
    void cancel() -> cancel
    int getViewDragState() -> getViewDragState
    boolean continueSettling(boolean) -> continueSettling
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    boolean checkTouchSlop(int) -> checkTouchSlop
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    int getTouchSlop() -> getTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    void abort() -> abort
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void dragTo(int,int,int,int) -> dragTo
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int getActivePointerId() -> getActivePointerId
    int getEdgesTouched(int,int) -> getEdgesTouched
    float getMinVelocity() -> getMinVelocity
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    boolean isPointerDown(int) -> isPointerDown
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    int OP_ADD -> OP_ADD
    int OP_ATTACH -> OP_ATTACH
    int OP_DETACH -> OP_DETACH
    int OP_HIDE -> OP_HIDE
    int OP_NULL -> OP_NULL
    int OP_REMOVE -> OP_REMOVE
    int OP_REPLACE -> OP_REPLACE
    int OP_SHOW -> OP_SHOW
    boolean SUPPORTS_TRANSITIONS -> SUPPORTS_TRANSITIONS
    java.lang.String TAG -> TAG
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    boolean mCommitted -> mCommitted
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    int mIndex -> mIndex
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    java.lang.String mName -> mName
    int mNumOp -> mNumOp
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> captureExitingViews
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    int getId() -> getId
    java.lang.String getName() -> getName
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    boolean isEmpty() -> isEmpty
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    void run() -> run
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    android.support.v4.util.ArrayMap -wrap0(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> -wrap0
    void -wrap1(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> -wrap1
    void -wrap2(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> -wrap2
    void -wrap3(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> -wrap3
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    void <init>() -> <init>
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
com.koushikdutta.async.http.body.UrlEncodedFormBody -> com.koushikdutta.async.http.body.UrlEncodedFormBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] mBodyBytes -> mBodyBytes
    com.koushikdutta.async.http.Multimap mParameters -> mParameters
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.http.Multimap) -> <init>
    void <init>(java.util.List) -> <init>
    void buildData() -> buildData
    com.koushikdutta.async.http.Multimap get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
    com.koushikdutta.async.http.Multimap -set0(com.koushikdutta.async.http.body.UrlEncodedFormBody,com.koushikdutta.async.http.Multimap) -> -set0
com.koushikdutta.async.http.spdy.HeaderReader -> com.koushikdutta.async.http.spdy.HeaderReader:
    java.util.zip.Inflater inflater -> inflater
    void <init>() -> <init>
    java.util.List readHeader(com.koushikdutta.async.ByteBufferList,int) -> readHeader
    com.koushikdutta.async.http.spdy.ByteString readByteString(com.koushikdutta.async.ByteBufferList) -> readByteString
com.aokp.romcontrol.fragments.navbar.NavringSettingsFragment -> com.aokp.romcontrol.fragments.navbar.NavringSettingsFragment:
    android.content.Context mContext -> mContext
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onSettingChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onSettingChanged
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String LOG_TAG -> LOG_TAG
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    int[] -android_support_v4_content_ModernAsyncTask$StatusSwitchesValues -> -android_support_v4_content_ModernAsyncTask$StatusSwitchesValues
    void <init>() -> <init>
    boolean cancel(boolean) -> cancel
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    void execute(java.lang.Runnable) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void finish(java.lang.Object) -> finish
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.os.Handler getHandler() -> getHandler
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    boolean isCancelled() -> isCancelled
    void onCancelled() -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object postResult(java.lang.Object) -> postResult
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    void publishProgress(java.lang.Object[]) -> publishProgress
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void <clinit>() -> <clinit>
    int[] -getandroid_support_v4_content_ModernAsyncTask$StatusSwitchesValues() -> -getandroid_support_v4_content_ModernAsyncTask$StatusSwitchesValues
    java.util.concurrent.atomic.AtomicBoolean -get0(android.support.v4.content.ModernAsyncTask) -> -get0
    java.lang.Object -wrap0(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> -wrap0
    void -wrap1(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> -wrap1
    void -wrap2(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> -wrap2
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void run() -> run
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$1 -> this$1
    void <init>(android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl) -> <init>
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.util.Pools -> android.support.v4.util.Pools:
    void <init>() -> <init>
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl:
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
android.support.v4.media.session.MediaSessionCompatApi22 -> android.support.v4.media.session.MediaSessionCompatApi22:
    void <init>() -> <init>
    void setRatingType(java.lang.Object,int) -> setRatingType
com.koushikdutta.async.callback.DataCallback -> com.koushikdutta.async.callback.DataCallback:
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState$1 -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState$1:
    void <init>() -> <init>
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    android.app.PendingIntent actionIntent -> actionIntent
    int icon -> icon
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    java.lang.CharSequence title -> title
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[]) -> <init>
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    int getIcon() -> getIcon
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    java.lang.CharSequence getTitle() -> getTitle
    void <clinit>() -> <clinit>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle -get0(android.support.v4.app.NotificationCompat$Action) -> -get0
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],android.support.v4.app.NotificationCompat$Action) -> <init>
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    java.util.ArrayList mFragments -> mFragments
    java.util.ArrayList mSavedState -> mSavedState
    void <init>(android.support.v4.app.FragmentManager) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
com.koushikdutta.async.callback.WritableCallback -> com.koushikdutta.async.callback.WritableCallback:
    void onWriteable() -> onWriteable
com.koushikdutta.ion.IonRequestBuilder$7$1 -> com.koushikdutta.ion.IonRequestBuilder$7$1:
    com.koushikdutta.ion.IonRequestBuilder$7 this$1 -> this$1
    void <init>(com.koushikdutta.ion.IonRequestBuilder$7) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.content.SharedPreferencesCompat -> android.support.v4.content.SharedPreferencesCompat:
    void <init>() -> <init>
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    void <init>() -> <init>
    int getLabelFor(android.view.View) -> getLabelFor
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    void <clinit>() -> <clinit>
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> <init>
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnHeadersReceivedDataOnRequestSentData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnHeadersReceivedDataOnRequestSentData:
    void <init>() -> <init>
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    void <init>() -> <init>
    java.lang.Object createItem(java.lang.Object,long) -> createItem
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.lang.String TAG -> TAG
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    void <init>(android.content.Context) -> <init>
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.content.Intent editIntentAt(int) -> editIntentAt
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.content.Intent getIntent(int) -> getIntent
    int getIntentCount() -> getIntentCount
    android.content.Intent[] getIntents() -> getIntents
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    void <clinit>() -> <clinit>
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.EdgeEffectCompatLollipop:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> onPull
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.ion.IonRequestBuilder$LoadRequestCallback -> com.koushikdutta.ion.IonRequestBuilder$LoadRequestCallback:
    boolean loadRequest(com.koushikdutta.async.http.AsyncHttpRequest) -> loadRequest
com.koushikdutta.async.ZipDataSink -> com.koushikdutta.async.ZipDataSink:
    java.io.ByteArrayOutputStream bout -> bout
    java.util.zip.ZipOutputStream zop -> zop
    void <init>(com.koushikdutta.async.DataSink) -> <init>
    void closeEntry() -> closeEntry
    void end() -> end
    com.koushikdutta.async.ByteBufferList filter(com.koushikdutta.async.ByteBufferList) -> filter
    void putNextEntry(java.util.zip.ZipEntry) -> putNextEntry
    void report(java.lang.Exception) -> report
android.support.v4.animation.AnimatorProvider -> android.support.v4.animation.AnimatorProvider:
    void clearInterpolator(android.view.View) -> clearInterpolator
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter) -> <init>
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
com.koushikdutta.async.AsyncServer$11 -> com.koushikdutta.async.AsyncServer$11:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    boolean val$reuseAddress -> val$reuseAddress
    java.nio.channels.DatagramChannel val$socket -> val$socket
    java.net.SocketAddress val$address -> val$address
    com.koushikdutta.async.AsyncDatagramSocket val$handler -> val$handler
    void <init>(com.koushikdutta.async.AsyncServer,boolean,java.nio.channels.DatagramChannel,java.net.SocketAddress,com.koushikdutta.async.AsyncDatagramSocket) -> <init>
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.aokp.romcontrol.R$color -> com.aokp.romcontrol.R$color:
    int background_tab_pressed -> background_tab_pressed
    int configure_light_background -> configure_light_background
    int extension_list_item_color -> extension_list_item_color
    int navigation_drawer_background -> navigation_drawer_background
    int notification_background -> notification_background
    int setting_separator -> setting_separator
    int transparent -> transparent
    void <init>() -> <init>
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    void <init>(java.util.Comparator) -> <init>
    void clear() -> clear
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    java.util.Set keySet() -> keySet
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    int size() -> size
    java.lang.Object writeReplace() -> writeReplace
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    boolean execPendingActions() -> execPendingActions
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
    void noteStateNotSaved() -> noteStateNotSaved
    int getActiveFragmentsCount() -> getActiveFragmentsCount
    java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void attachHost(android.support.v4.app.Fragment) -> attachHost
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    void dispatchCreate() -> dispatchCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void dispatchDestroy() -> dispatchDestroy
    void doLoaderDestroy() -> doLoaderDestroy
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    void dispatchPause() -> dispatchPause
    void dispatchResume() -> dispatchResume
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    java.util.List retainNonConfig() -> retainNonConfig
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    android.os.Parcelable saveAllState() -> saveAllState
    void dispatchActivityCreated() -> dispatchActivityCreated
    void doLoaderStart() -> doLoaderStart
    void dispatchStart() -> dispatchStart
    void reportLoaderStart() -> reportLoaderStart
    void dispatchStop() -> dispatchStop
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    void doLoaderStop(boolean) -> doLoaderStop
    void dispatchReallyStop() -> dispatchReallyStop
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    void dispatchDestroyView() -> dispatchDestroyView
    void doLoaderRetain() -> doLoaderRetain
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    void <init>(java.lang.String,int) -> <init>
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.aokp.romcontrol.settings.SingleChoiceSetting$1 -> com.aokp.romcontrol.settings.SingleChoiceSetting$1:
    com.aokp.romcontrol.settings.SingleChoiceSetting this$0 -> this$0
    void <init>(com.aokp.romcontrol.settings.SingleChoiceSetting) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.koushikdutta.async.parser.ByteBufferListParser$1 -> com.koushikdutta.async.parser.ByteBufferListParser$1:
    com.koushikdutta.async.parser.ByteBufferListParser this$0 -> this$0
    com.koushikdutta.async.DataEmitter val$emitter -> val$emitter
    void <init>(com.koushikdutta.async.parser.ByteBufferListParser,com.koushikdutta.async.DataEmitter) -> <init>
    void cancelCleanup() -> cancelCleanup
com.koushikdutta.async.PushParser$2 -> com.koushikdutta.async.PushParser$2:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.http.body.FileBody -> com.koushikdutta.async.http.body.FileBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String contentType -> contentType
    java.io.File file -> file
    void <init>(java.io.File) -> <init>
    void <init>(java.io.File,java.lang.String) -> <init>
    java.io.File get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void setContentType(java.lang.String) -> setContentType
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelClosed(android.view.View) -> onPanelClosed
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelSlide(android.view.View,float) -> onPanelSlide
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    void <init>() -> <init>
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    void finish(java.lang.Object) -> finish
    boolean isFinished(java.lang.Object) -> isFinished
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onPull(java.lang.Object,float,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    void setSize(java.lang.Object,int,int) -> setSize
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    void <init>() -> <init>
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    java.lang.CharSequence[] getChoices() -> getChoices
    android.os.Bundle getExtras() -> getExtras
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.String getResultKey() -> getResultKey
android.support.annotation.BinderThread -> android.support.annotation.BinderThread:
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$1 -> this$1
    android.support.v4.media.session.MediaSessionCompat$Callback val$callback -> val$callback
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onStop() -> onStop
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    void <init>() -> <init>
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_STOP -> ACTION_STOP
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_REWIND -> ACTION_REWIND
    int STATE_PLAYING -> STATE_PLAYING
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    int STATE_NONE -> STATE_NONE
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_PLAY_FROM_URI -> ACTION_PLAY_FROM_URI
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_ERROR -> STATE_ERROR
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    int STATE_STOPPED -> STATE_STOPPED
    long mActions -> mActions
    long mActiveItemId -> mActiveItemId
    long mBufferedPosition -> mBufferedPosition
    java.util.List mCustomActions -> mCustomActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    android.os.Bundle mExtras -> mExtras
    long mPosition -> mPosition
    float mSpeed -> mSpeed
    int mState -> mState
    java.lang.Object mStateObj -> mStateObj
    long mUpdateTime -> mUpdateTime
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    long getActions() -> getActions
    int getState() -> getState
    long getPosition() -> getPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    java.lang.Object getPlaybackState() -> getPlaybackState
    void <init>(android.os.Parcel) -> <init>
    void <init>(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    int describeContents() -> describeContents
    long getActiveQueueItemId() -> getActiveQueueItemId
    long getBufferedPosition() -> getBufferedPosition
    java.util.List getCustomActions() -> getCustomActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    android.os.Bundle getExtras() -> getExtras
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    long -get0(android.support.v4.media.session.PlaybackStateCompat) -> -get0
    long -get1(android.support.v4.media.session.PlaybackStateCompat) -> -get1
    long -get2(android.support.v4.media.session.PlaybackStateCompat) -> -get2
    java.util.List -get3(android.support.v4.media.session.PlaybackStateCompat) -> -get3
    java.lang.CharSequence -get4(android.support.v4.media.session.PlaybackStateCompat) -> -get4
    android.os.Bundle -get5(android.support.v4.media.session.PlaybackStateCompat) -> -get5
    long -get6(android.support.v4.media.session.PlaybackStateCompat) -> -get6
    float -get7(android.support.v4.media.session.PlaybackStateCompat) -> -get7
    int -get8(android.support.v4.media.session.PlaybackStateCompat) -> -get8
    long -get9(android.support.v4.media.session.PlaybackStateCompat) -> -get9
    void <init>(android.os.Parcel,android.support.v4.media.session.PlaybackStateCompat) -> <init>
    void <init>(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle,android.support.v4.media.session.PlaybackStateCompat) -> <init>
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
com.koushikdutta.async.http.server.AsyncProxyServer -> com.koushikdutta.async.http.server.AsyncProxyServer:
    com.koushikdutta.async.http.AsyncHttpClient proxyClient -> proxyClient
    void onRequest(com.koushikdutta.async.http.server.HttpServerRequestCallback,com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    boolean onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    boolean mAudioFocused -> mAudioFocused
    android.media.AudioManager mAudioManager -> mAudioManager
    android.content.Context mContext -> mContext
    boolean mFocused -> mFocused
    android.content.Intent mIntent -> mIntent
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    int mPlayState -> mPlayState
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    void <init>(android.content.Context,android.media.AudioManager,android.view.View,android.support.v4.media.TransportMediatorCallback) -> <init>
    void destroy() -> destroy
    void dropAudioFocus() -> dropAudioFocus
    void gainFocus() -> gainFocus
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void loseFocus() -> loseFocus
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void pausePlaying() -> pausePlaying
    void refreshState(boolean,long,int) -> refreshState
    void startPlaying() -> startPlaying
    void stopPlaying() -> stopPlaying
    void takeAudioFocus() -> takeAudioFocus
    void windowAttached() -> windowAttached
    void windowDetached() -> windowDetached
net.margaritov.preference.colorpicker.ColorPickerView -> net.margaritov.preference.colorpicker.ColorPickerView:
    float ALPHA_PANEL_HEIGHT -> ALPHA_PANEL_HEIGHT
    float BORDER_WIDTH_PX -> BORDER_WIDTH_PX
    float HUE_PANEL_WIDTH -> HUE_PANEL_WIDTH
    float PALETTE_CIRCLE_TRACKER_RADIUS -> PALETTE_CIRCLE_TRACKER_RADIUS
    int PANEL_ALPHA -> PANEL_ALPHA
    int PANEL_HUE -> PANEL_HUE
    int PANEL_SAT_VAL -> PANEL_SAT_VAL
    float PANEL_SPACING -> PANEL_SPACING
    float RECTANGLE_TRACKER_OFFSET -> RECTANGLE_TRACKER_OFFSET
    int mAlpha -> mAlpha
    android.graphics.Paint mAlphaPaint -> mAlphaPaint
    net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern -> mAlphaPattern
    android.graphics.RectF mAlphaRect -> mAlphaRect
    android.graphics.Shader mAlphaShader -> mAlphaShader
    java.lang.String mAlphaSliderText -> mAlphaSliderText
    android.graphics.Paint mAlphaTextPaint -> mAlphaTextPaint
    int mBorderColor -> mBorderColor
    android.graphics.Paint mBorderPaint -> mBorderPaint
    float mDensity -> mDensity
    float mDrawingOffset -> mDrawingOffset
    android.graphics.RectF mDrawingRect -> mDrawingRect
    float mHue -> mHue
    android.graphics.Paint mHuePaint -> mHuePaint
    android.graphics.RectF mHueRect -> mHueRect
    android.graphics.Shader mHueShader -> mHueShader
    android.graphics.Paint mHueTrackerPaint -> mHueTrackerPaint
    int mLastTouchedPanel -> mLastTouchedPanel
    net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener -> mListener
    float mSat -> mSat
    android.graphics.Shader mSatShader -> mSatShader
    android.graphics.Paint mSatValPaint -> mSatValPaint
    android.graphics.RectF mSatValRect -> mSatValRect
    android.graphics.Paint mSatValTrackerPaint -> mSatValTrackerPaint
    boolean mShowAlphaPanel -> mShowAlphaPanel
    int mSliderTrackerColor -> mSliderTrackerColor
    android.graphics.Point mStartTouchPoint -> mStartTouchPoint
    float mVal -> mVal
    android.graphics.Shader mValShader -> mValShader
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.graphics.Point alphaToPoint(int) -> alphaToPoint
    int[] buildHueColorArray() -> buildHueColorArray
    float calculateRequiredOffset() -> calculateRequiredOffset
    int chooseHeight(int,int) -> chooseHeight
    int chooseWidth(int,int) -> chooseWidth
    void drawAlphaPanel(android.graphics.Canvas) -> drawAlphaPanel
    void drawHuePanel(android.graphics.Canvas) -> drawHuePanel
    void drawSatValPanel(android.graphics.Canvas) -> drawSatValPanel
    java.lang.String getAlphaSliderText() -> getAlphaSliderText
    int getBorderColor() -> getBorderColor
    int getColor() -> getColor
    float getDrawingOffset() -> getDrawingOffset
    int getPrefferedHeight() -> getPrefferedHeight
    int getPrefferedWidth() -> getPrefferedWidth
    int getSliderTrackerColor() -> getSliderTrackerColor
    android.graphics.Point hueToPoint(float) -> hueToPoint
    void init() -> init
    void initPaintTools() -> initPaintTools
    boolean moveTrackersIfNeeded(android.view.MotionEvent) -> moveTrackersIfNeeded
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    int pointToAlpha(int) -> pointToAlpha
    float pointToHue(float) -> pointToHue
    float[] pointToSatVal(float,float) -> pointToSatVal
    android.graphics.Point satValToPoint(float,float) -> satValToPoint
    void setAlphaSliderText(int) -> setAlphaSliderText
    void setAlphaSliderText(java.lang.String) -> setAlphaSliderText
    void setAlphaSliderVisible(boolean) -> setAlphaSliderVisible
    void setBorderColor(int) -> setBorderColor
    void setColor(int) -> setColor
    void setColor(int,boolean) -> setColor
    void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener) -> setOnColorChangedListener
    void setSliderTrackerColor(int) -> setSliderTrackerColor
    void setUpAlphaRect() -> setUpAlphaRect
    void setUpHueRect() -> setUpHueRect
    void setUpSatValRect() -> setUpSatValRect
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    void <init>(java.lang.String,int) -> <init>
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String curTab -> curTab
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,android.support.v4.app.FragmentTabHost$SavedState) -> <init>
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$1 -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$1:
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener this$0 -> this$0
    void <init>(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener) -> <init>
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
com.koushikdutta.ion.bitmap.IonBitmapCache -> com.koushikdutta.ion.bitmap.IonBitmapCache:
    long DEFAULT_ERROR_CACHE_DURATION -> DEFAULT_ERROR_CACHE_DURATION
    com.koushikdutta.ion.bitmap.LruBitmapCache cache -> cache
    long errorCacheDuration -> errorCacheDuration
    double heapRatio -> heapRatio
    com.koushikdutta.ion.Ion ion -> ion
    android.util.DisplayMetrics metrics -> metrics
    android.content.res.Resources resources -> resources
    boolean -assertionsDisabled -> -assertionsDisabled
    android.graphics.BitmapFactory$Options prepareBitmapOptions(android.content.res.Resources,int,int,int) -> prepareBitmapOptions
    android.graphics.Bitmap loadBitmap(android.content.res.Resources,int,android.graphics.BitmapFactory$Options) -> loadBitmap
    com.koushikdutta.ion.bitmap.BitmapInfo get(java.lang.String) -> get
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    void dump() -> dump
    android.graphics.BitmapFactory$Options prepareBitmapOptions(java.io.File,int,int) -> prepareBitmapOptions
    android.graphics.Bitmap loadBitmap(java.io.File,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.BitmapFactory$Options prepareBitmapOptions(byte[],int,int,int,int) -> prepareBitmapOptions
    android.graphics.Bitmap loadBitmap(byte[],int,int,android.graphics.BitmapFactory$Options) -> loadBitmap
    void clear() -> clear
    android.graphics.Point computeTarget(int,int) -> computeTarget
    long getErrorCacheDuration() -> getErrorCacheDuration
    double getHeapRatio() -> getHeapRatio
    int getHeapSize(android.content.Context) -> getHeapSize
    android.graphics.Bitmap getRotatedBitmap(android.graphics.Bitmap,int) -> getRotatedBitmap
    android.graphics.Bitmap loadBitmap(java.io.InputStream,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Bitmap loadRegion(android.graphics.BitmapRegionDecoder,android.graphics.Rect,int) -> loadRegion
    android.graphics.BitmapFactory$Options prepareBitmapOptions(android.graphics.BitmapFactory$Options,int,int) -> prepareBitmapOptions
    android.graphics.BitmapFactory$Options prepareBitmapOptions(java.io.InputStream,int,int) -> prepareBitmapOptions
    void put(com.koushikdutta.ion.bitmap.BitmapInfo) -> put
    void putSoft(com.koushikdutta.ion.bitmap.BitmapInfo) -> putSoft
    com.koushikdutta.ion.bitmap.BitmapInfo remove(java.lang.String) -> remove
    void setErrorCacheDuration(long) -> setErrorCacheDuration
    void setHeapRatio(double) -> setHeapRatio
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    void <init>() -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    boolean isJsonNull() -> isJsonNull
    void <init>() -> <init>
    com.google.gson.JsonElement deepCopy() -> deepCopy
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    int getAsInt() -> getAsInt
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    long getAsLong() -> getAsLong
    java.lang.Number getAsNumber() -> getAsNumber
    short getAsShort() -> getAsShort
    java.lang.String getAsString() -> getAsString
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    java.lang.String toString() -> toString
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.koushikdutta.async.http.body.MultipartFormDataBody$1 -> com.koushikdutta.async.http.body.MultipartFormDataBody$1:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.http.Headers val$headers -> val$headers
    void onStringAvailable(java.lang.String) -> onStringAvailable
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.http.Headers) -> <init>
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat localFormat -> localFormat
    void <init>(java.lang.String) -> <init>
    void <init>(int,int) -> <init>
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.text.DateFormat,java.text.DateFormat) -> <init>
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.String toString() -> toString
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    void <init>() -> <init>
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getAlpha(android.view.View) -> getAlpha
    long getFrameTime() -> getFrameTime
    int getLayerType(android.view.View) -> getLayerType
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    void setActivated(android.view.View,boolean) -> setActivated
    void setAlpha(android.view.View,float) -> setAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
com.koushikdutta.async.http.AsyncSocketMiddleware$1$1 -> com.koushikdutta.async.http.AsyncSocketMiddleware$1$1:
    com.koushikdutta.async.http.AsyncSocketMiddleware$1 this$1 -> this$1
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    android.net.Uri val$uri -> val$uri
    int val$port -> val$port
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware$1,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.http.Multimap -> com.koushikdutta.async.http.Multimap:
    com.koushikdutta.async.http.Multimap$StringDecoder QUERY_DECODER -> QUERY_DECODER
    com.koushikdutta.async.http.Multimap$StringDecoder URL_DECODER -> URL_DECODER
    void <init>(java.util.List) -> <init>
    com.koushikdutta.async.http.Multimap parseUrlEncoded(java.lang.String) -> parseUrlEncoded
    void <init>() -> <init>
    void add(java.lang.String,java.lang.String) -> add
    void <init>(com.koushikdutta.async.http.Multimap) -> <init>
    java.lang.String getString(java.lang.String) -> getString
    java.util.Iterator iterator() -> iterator
    java.util.List newList() -> newList
    com.koushikdutta.async.http.Multimap parse(java.lang.String,java.lang.String,boolean,com.koushikdutta.async.http.Multimap$StringDecoder) -> parse
    com.koushikdutta.async.http.Multimap parseCommaDelimited(java.lang.String) -> parseCommaDelimited
    com.koushikdutta.async.http.Multimap parseQuery(java.lang.String) -> parseQuery
    com.koushikdutta.async.http.Multimap parseSemicolonDelimited(java.lang.String) -> parseSemicolonDelimited
    void put(java.lang.String,java.lang.String) -> put
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.filter.GZIPInputFilter$1$2 -> com.koushikdutta.async.http.filter.GZIPInputFilter$1$2:
    com.koushikdutta.async.http.filter.GZIPInputFilter$1 this$1 -> this$1
    void <init>(com.koushikdutta.async.http.filter.GZIPInputFilter$1) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    int[] $SWITCH_TABLE$com$google$gson$stream$JsonToken -> $SWITCH_TABLE$com$google$gson$stream$JsonToken
    int[] -com_google_gson_stream_JsonTokenSwitchesValues -> -com_google_gson_stream_JsonTokenSwitchesValues
    void <init>() -> <init>
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    int[] -getcom_google_gson_stream_JsonTokenSwitchesValues() -> -getcom_google_gson_stream_JsonTokenSwitchesValues
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int DEFAULT -> DEFAULT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    float DRAG_RATE -> DRAG_RATE
    int INVALID_POINTER -> INVALID_POINTER
    int LARGE -> LARGE
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int mActivePointerId -> mActivePointerId
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    int mCircleHeight -> mCircleHeight
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mCircleWidth -> mCircleWidth
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int mFrom -> mFrom
    float mInitialDownY -> mInitialDownY
    float mInitialMotionY -> mInitialMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    int mMediumAnimationDuration -> mMediumAnimationDuration
    android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> mNestedScrollingChildHelper
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> mNestedScrollingParentHelper
    boolean mNotify -> mNotify
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    int mOriginalOffsetTop -> mOriginalOffsetTop
    int[] mParentScrollConsumed -> mParentScrollConsumed
    android.view.animation.Animation mPeek -> mPeek
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    boolean mRefreshing -> mRefreshing
    boolean mReturningToStart -> mReturningToStart
    boolean mScale -> mScale
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    float mStartingScale -> mStartingScale
    android.view.View mTarget -> mTarget
    float mTotalDragDistance -> mTotalDragDistance
    float mTotalUnconsumed -> mTotalUnconsumed
    int mTouchSlop -> mTouchSlop
    boolean mUsingCustomStart -> mUsingCustomStart
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void finishSpinner(float) -> finishSpinner
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    boolean canChildScrollUp() -> canChildScrollUp
    void createProgressView() -> createProgressView
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    void ensureTarget() -> ensureTarget
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    int getNestedScrollAxes() -> getNestedScrollAxes
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean isRefreshing() -> isRefreshing
    void moveSpinner(float) -> moveSpinner
    void moveToStart(float) -> moveToStart
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void peek(int,android.view.animation.Animation$AnimationListener) -> peek
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void setAnimationProgress(float) -> setAnimationProgress
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshing(boolean,boolean) -> setRefreshing
    void setSize(int) -> setSize
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    boolean startNestedScroll(int) -> startNestedScroll
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void stopNestedScroll() -> stopNestedScroll
    void <clinit>() -> <clinit>
    android.support.v4.widget.CircleImageView -get0(android.support.v4.widget.SwipeRefreshLayout) -> -get0
    int -get1(android.support.v4.widget.SwipeRefreshLayout) -> -get1
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -get2(android.support.v4.widget.SwipeRefreshLayout) -> -get2
    boolean -get3(android.support.v4.widget.SwipeRefreshLayout) -> -get3
    android.support.v4.widget.MaterialProgressDrawable -get4(android.support.v4.widget.SwipeRefreshLayout) -> -get4
    boolean -get5(android.support.v4.widget.SwipeRefreshLayout) -> -get5
    boolean -get6(android.support.v4.widget.SwipeRefreshLayout) -> -get6
    float -get7(android.support.v4.widget.SwipeRefreshLayout) -> -get7
    float -get8(android.support.v4.widget.SwipeRefreshLayout) -> -get8
    boolean -get9(android.support.v4.widget.SwipeRefreshLayout) -> -get9
    int -set0(android.support.v4.widget.SwipeRefreshLayout,int) -> -set0
    void -wrap0(android.support.v4.widget.SwipeRefreshLayout,float) -> -wrap0
    void -wrap1(android.support.v4.widget.SwipeRefreshLayout,float) -> -wrap1
    void -wrap2(android.support.v4.widget.SwipeRefreshLayout,int) -> -wrap2
    void -wrap3(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> -wrap3
    void -wrap4(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> -wrap4
android.support.v4.media.session.MediaSessionCompat$SessionFlags -> android.support.v4.media.session.MediaSessionCompat$SessionFlags:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> <init>
    void run() -> run
com.koushikdutta.async.http.ConnectionFailedException -> com.koushikdutta.async.http.ConnectionFailedException:
    void <init>(java.lang.String) -> <init>
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3 -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3:
    int lastPercent -> lastPercent
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform this$1 -> this$1
    long val$total -> val$total
    boolean -assertionsDisabled -> -assertionsDisabled
    void onData(int) -> onData
    void <init>(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,long) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void <init>(android.support.v4.media.session.IMediaSession) -> <init>
    void fastForward() -> fastForward
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
com.koushikdutta.async.http.spdy.Spdy3$Reader$4 -> com.koushikdutta.async.http.spdy.Spdy3$Reader$4:
    com.koushikdutta.async.http.spdy.Spdy3$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onStop() -> onStop
com.koushikdutta.async.future.DependentCancellable -> com.koushikdutta.async.future.DependentCancellable:
    com.koushikdutta.async.future.DependentCancellable setParent(com.koushikdutta.async.future.Cancellable) -> setParent
com.koushikdutta.ion.Loader$LoaderEmitter -> com.koushikdutta.ion.Loader$LoaderEmitter:
    com.koushikdutta.async.DataEmitter emitter -> emitter
    com.koushikdutta.ion.HeadersResponse headers -> headers
    long length -> length
    com.koushikdutta.async.http.AsyncHttpRequest request -> request
    com.koushikdutta.ion.ResponseServedFrom servedFrom -> servedFrom
    void <init>(com.koushikdutta.async.DataEmitter,long,com.koushikdutta.ion.ResponseServedFrom,com.koushikdutta.ion.HeadersResponse,com.koushikdutta.async.http.AsyncHttpRequest) -> <init>
    com.koushikdutta.async.DataEmitter getDataEmitter() -> getDataEmitter
    com.koushikdutta.ion.HeadersResponse getHeaders() -> getHeaders
    com.koushikdutta.async.http.AsyncHttpRequest getRequest() -> getRequest
    com.koushikdutta.ion.ResponseServedFrom getServedFrom() -> getServedFrom
    long length() -> length
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.reflect.Type val$type -> val$type
    void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    java.lang.Object construct() -> construct
com.koushikdutta.async.future.SimpleFuture$1 -> com.koushikdutta.async.future.SimpleFuture$1:
    com.koushikdutta.async.future.SimpleFuture this$0 -> this$0
    void <init>(com.koushikdutta.async.future.SimpleFuture) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    void <init>() -> <init>
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.ViewCompat$LollipopViewCompatImpl:
    void <init>() -> <init>
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    float getElevation(android.view.View) -> getElevation
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    float getTranslationZ(android.view.View) -> getTranslationZ
    float getZ(android.view.View) -> getZ
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setElevation(android.view.View,float) -> setElevation
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
com.koushikdutta.ion.loader.ResourceLoader$2 -> com.koushikdutta.ion.loader.ResourceLoader$2:
    com.koushikdutta.ion.loader.ResourceLoader this$0 -> this$0
    com.koushikdutta.ion.Ion val$ion -> val$ion
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.ion.loader.InputStreamDataEmitterFuture val$ret -> val$ret
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.loader.ResourceLoader,com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.loader.InputStreamDataEmitterFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
    void run() -> run
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    void <init>(com.google.gson.Gson) -> <init>
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.koushikdutta.async.Deque -> com.koushikdutta.async.Deque:
    boolean add(java.lang.Object) -> add
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object element() -> element
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.util.Iterator iterator() -> iterator
    boolean offer(java.lang.Object) -> offer
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object peek() -> peek
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    java.lang.Object poll() -> poll
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object pop() -> pop
    void push(java.lang.Object) -> push
    java.lang.Object remove() -> remove
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeFirst() -> removeFirst
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    java.lang.Object removeLast() -> removeLast
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    int size() -> size
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.media.session.PlaybackStateCompat$Actions -> android.support.v4.media.session.PlaybackStateCompat$Actions:
com.koushikdutta.async.http.server.AsyncHttpServer$Pair -> com.koushikdutta.async.http.server.AsyncHttpServer$Pair:
    com.koushikdutta.async.http.server.HttpServerRequestCallback callback -> callback
    java.util.regex.Pattern regex -> regex
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$Pair) -> <init>
android.support.v13.app.FragmentCompat23 -> android.support.v13.app.FragmentCompat23:
    void <init>() -> <init>
    void requestPermissions(android.app.Fragment,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String) -> shouldShowRequestPermissionRationale
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$1 -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$1:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform this$1 -> this$1
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object custom -> custom
    java.util.List fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
    void <init>() -> <init>
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.LayoutInflaterCompatHC:
    java.lang.String TAG -> TAG
    boolean sCheckedField -> sCheckedField
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    void <init>() -> <init>
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
com.koushikdutta.async.PushParser$LenByteArrayWaiter -> com.koushikdutta.async.PushParser$LenByteArrayWaiter:
    com.koushikdutta.async.PushParser$ParseCallback callback -> callback
    void <init>(com.koushikdutta.async.PushParser$ParseCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void <init>() -> <init>
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    java.lang.Object construct() -> construct
com.koushikdutta.async.http.AsyncHttpClient$3 -> com.koushikdutta.async.http.AsyncHttpClient$3:
    boolean reported -> reported
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse val$cancel -> val$cancel
    com.koushikdutta.async.http.callback.HttpConnectCallback val$callback -> val$callback
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData val$data -> val$data
    int val$redirectCount -> val$redirectCount
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData,int) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSocket) -> onConnectCompleted
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
net.margaritov.preference.colorpicker.ColorPickerDialog$1 -> net.margaritov.preference.colorpicker.ColorPickerDialog$1:
    net.margaritov.preference.colorpicker.ColorPickerDialog this$0 -> this$0
    void <init>(net.margaritov.preference.colorpicker.ColorPickerDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    void <init>() -> <init>
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
com.koushikdutta.async.http.spdy.SpdyMiddleware$2 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$2:
    com.koushikdutta.async.http.spdy.SpdyMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    java.lang.String val$key -> val$key
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    void onHandshakeCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> onHandshakeCompleted
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,com.koushikdutta.async.callback.ConnectCallback) -> <init>
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
com.koushikdutta.async.http.spdy.Huffman$Node -> com.koushikdutta.async.http.spdy.Huffman$Node:
    com.koushikdutta.async.http.spdy.Huffman$Node[] children -> children
    int symbol -> symbol
    int terminalBits -> terminalBits
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    com.koushikdutta.async.http.spdy.Huffman$Node[] -get0(com.koushikdutta.async.http.spdy.Huffman$Node) -> -get0
    int -get1(com.koushikdutta.async.http.spdy.Huffman$Node) -> -get1
    int -get2(com.koushikdutta.async.http.spdy.Huffman$Node) -> -get2
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    int id -> id
    android.app.Notification notif -> notif
    java.lang.String packageName -> packageName
    java.lang.String tag -> tag
    void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void <init>(java.lang.Appendable) -> <init>
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(char[],int,int) -> write
    void <init>(java.lang.Appendable,com.google.gson.internal.Streams$AppendableWriter) -> <init>
com.koushikdutta.ion.BitmapCallback -> com.koushikdutta.ion.BitmapCallback:
    java.lang.String key -> key
    com.koushikdutta.ion.Ion ion -> ion
    boolean put -> put
    void report(java.lang.Exception,com.koushikdutta.ion.bitmap.BitmapInfo) -> report
    void getBitmapSnapshot(com.koushikdutta.ion.Ion,java.lang.String,java.util.ArrayList) -> getBitmapSnapshot
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,boolean) -> <init>
    void onReported() -> onReported
    boolean put() -> put
    void saveBitmapSnapshot(com.koushikdutta.ion.Ion,com.koushikdutta.ion.bitmap.BitmapInfo) -> saveBitmapSnapshot
com.koushikdutta.async.ServerSocketChannelWrapper -> com.koushikdutta.async.ServerSocketChannelWrapper:
    java.nio.channels.ServerSocketChannel mChannel -> mChannel
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    int getLocalPort() -> getLocalPort
    java.lang.Object getSocket() -> getSocket
    boolean isConnected() -> isConnected
    int read(java.nio.ByteBuffer) -> read
    long read(java.nio.ByteBuffer[]) -> read
    long read(java.nio.ByteBuffer[],int,int) -> read
    java.nio.channels.SelectionKey register(java.nio.channels.Selector) -> register
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    int write(java.nio.ByteBuffer) -> write
    int write(java.nio.ByteBuffer[]) -> write
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.HttpDate -> com.koushikdutta.async.http.HttpDate:
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMATS -> BROWSER_COMPATIBLE_DATE_FORMATS
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> STANDARD_DATE_FORMAT
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mIndex -> mIndex
    java.lang.String mName -> mName
    int[] mOps -> mOps
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    void <init>(android.support.v4.app.BackStackRecord) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.view.ViewCompatBase -> android.support.v4.view.ViewCompatBase:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    void <init>() -> <init>
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isLaidOut(android.view.View) -> isLaidOut
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    boolean DEBUG -> DEBUG
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    java.lang.String TAG -> TAG
    java.util.HashMap mActions -> mActions
    android.content.Context mAppContext -> mAppContext
    android.os.Handler mHandler -> mHandler
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    java.lang.Object mLock -> mLock
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    java.util.HashMap mReceivers -> mReceivers
    void <init>(android.content.Context) -> <init>
    void executePendingBroadcasts() -> executePendingBroadcasts
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    void <clinit>() -> <clinit>
    void -wrap0(android.support.v4.content.LocalBroadcastManager) -> -wrap0
com.koushikdutta.async.http.spdy.Spdy3$Reader$1 -> com.koushikdutta.async.http.spdy.Spdy3$Reader$1:
    com.koushikdutta.async.http.spdy.Spdy3$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.http.AsyncHttpResponseImpl$2 -> com.koushikdutta.async.http.AsyncHttpResponseImpl$2:
    com.koushikdutta.async.http.AsyncHttpResponseImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncHttpResponseImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    boolean flag() -> flag
    long[] value() -> value
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void <init>(android.support.v4.app.SharedElementCallback) -> <init>
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.FragmentStatePagerAdapter:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.app.FragmentManager mFragmentManager -> mFragmentManager
    java.util.ArrayList mFragments -> mFragments
    java.util.ArrayList mSavedState -> mSavedState
    void <init>(android.app.FragmentManager) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    android.app.Fragment getItem(int) -> getItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    int mNestedScrollAxes -> mNestedScrollAxes
    android.view.ViewGroup mViewGroup -> mViewGroup
    void <init>(android.view.ViewGroup) -> <init>
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
com.koushikdutta.ion.IonLog -> com.koushikdutta.ion.IonLog:
    java.lang.String LOGTAG -> LOGTAG
    boolean debug -> debug
    void w(java.lang.String,java.lang.Exception) -> w
    void <init>() -> <init>
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Exception) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Exception) -> i
    void w(java.lang.String) -> w
    void <clinit>() -> <clinit>
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SlidingPaneLayout) -> <init>
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void <init>(android.support.v4.widget.SlidingPaneLayout,android.support.v4.widget.SlidingPaneLayout$DragHelperCallback) -> <init>
com.koushikdutta.async.http.body.AsyncHttpRequestBody -> com.koushikdutta.async.http.body.AsyncHttpRequestBody:
    java.lang.Object get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 -> android.support.v4.app.AppOpsManagerCompat$AppOpsManager23:
    void <init>() -> <init>
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    void <init>(android.support.v4.app.AppOpsManagerCompat$AppOpsManager23) -> <init>
com.koushikdutta.async.AsyncServer$ObjectHolder -> com.koushikdutta.async.AsyncServer$ObjectHolder:
    java.lang.Object held -> held
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.AsyncServer$ObjectHolder) -> <init>
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry:
    java.lang.String cipherSuite -> cipherSuite
    java.security.cert.Certificate[] localCertificates -> localCertificates
    java.security.cert.Certificate[] peerCertificates -> peerCertificates
    java.lang.String requestMethod -> requestMethod
    com.koushikdutta.async.http.cache.RawHeaders responseHeaders -> responseHeaders
    java.lang.String uri -> uri
    com.koushikdutta.async.http.cache.RawHeaders varyHeaders -> varyHeaders
    void <init>(java.io.InputStream) -> <init>
    void <init>(android.net.Uri,com.koushikdutta.async.http.cache.RawHeaders,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.cache.RawHeaders) -> <init>
    boolean isHttps() -> isHttps
    boolean matches(android.net.Uri,java.lang.String,java.util.Map) -> matches
    java.security.cert.Certificate[] readCertArray(com.koushikdutta.async.http.cache.StrictLineReader) -> readCertArray
    void writeCertArray(java.io.Writer,java.security.cert.Certificate[]) -> writeCertArray
    void writeTo(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryEditor) -> writeTo
    com.koushikdutta.async.http.cache.RawHeaders -get0(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry) -> -get0
    boolean -wrap0(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$Entry) -> -wrap0
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
com.koushikdutta.async.AsyncNetworkSocket$2 -> com.koushikdutta.async.AsyncNetworkSocket$2:
    com.koushikdutta.async.AsyncNetworkSocket this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncNetworkSocket) -> <init>
    void run() -> run
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    void <init>() -> <init>
    java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    void <clinit>() -> <clinit>
com.koushikdutta.async.future.MultiFuture -> com.koushikdutta.async.future.MultiFuture:
    com.koushikdutta.async.future.FutureCallback callback -> callback
    java.util.ArrayList callbacks -> callbacks
    void <init>() -> <init>
    com.koushikdutta.async.future.MultiFuture setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
    com.koushikdutta.async.future.SimpleFuture setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
com.koushikdutta.async.http.server.HttpServerRequestCallback -> com.koushikdutta.async.http.server.HttpServerRequestCallback:
    void onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void <init>() -> <init>
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.util.concurrent.CountDownLatch mDone -> mDone
    boolean waiting -> waiting
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    void <init>(android.support.v4.content.AsyncTaskLoader) -> <init>
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void run() -> run
    void waitForLoader() -> waitForLoader
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isOpen -> isOpen
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,android.support.v4.widget.SlidingPaneLayout$SavedState) -> <init>
com.koushikdutta.async.stream.FileDataSink -> com.koushikdutta.async.stream.FileDataSink:
    java.io.File file -> file
    void <init>(com.koushikdutta.async.AsyncServer,java.io.File) -> <init>
    java.io.OutputStream getOutputStream() -> getOutputStream
com.koushikdutta.async.http.socketio.transport.WebSocketTransport$1 -> com.koushikdutta.async.http.socketio.transport.WebSocketTransport$1:
    com.koushikdutta.async.http.socketio.transport.WebSocketTransport this$0 -> this$0
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.socketio.transport.WebSocketTransport,com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback) -> <init>
    void onStringAvailable(java.lang.String) -> onStringAvailable
com.koushikdutta.async.http.filter.ChunkedOutputFilter -> com.koushikdutta.async.http.filter.ChunkedOutputFilter:
    void <init>(com.koushikdutta.async.DataSink) -> <init>
    void end() -> end
    com.koushikdutta.async.ByteBufferList filter(com.koushikdutta.async.ByteBufferList) -> filter
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    void <init>(java.util.Map) -> <init>
    java.lang.String toString() -> toString
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancelAll(java.lang.String) -> cancelAll
    void cancel(java.lang.String,int,java.lang.String) -> cancel
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.koushikdutta.ion.LoadBitmapRegion$1 -> com.koushikdutta.ion.LoadBitmapRegion$1:
    com.koushikdutta.ion.LoadBitmapRegion this$0 -> this$0
    android.graphics.BitmapRegionDecoder val$decoder -> val$decoder
    android.graphics.Rect val$region -> val$region
    int val$inSampleSize -> val$inSampleSize
    java.lang.String val$key -> val$key
    void <init>(com.koushikdutta.ion.LoadBitmapRegion,android.graphics.BitmapRegionDecoder,android.graphics.Rect,int,java.lang.String) -> <init>
    void run() -> run
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$1 -> this$1
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.net.Uri val$imageFile -> val$imageFile
    java.lang.String val$jobName -> val$jobName
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    void onPreExecute() -> onPreExecute
    void <init>(android.support.v4.print.PrintHelperKitkat$2,android.os.CancellationSignal,android.net.Uri,java.lang.String,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.koushikdutta.async.http.server.AsyncHttpServer -> com.koushikdutta.async.http.server.AsyncHttpServer:
    java.util.Hashtable mActions -> mActions
    java.util.Hashtable mCodes -> mCodes
    com.koushikdutta.async.callback.CompletedCallback mCompletedCallback -> mCompletedCallback
    java.util.Hashtable mContentTypes -> mContentTypes
    com.koushikdutta.async.callback.ListenCallback mListenCallback -> mListenCallback
    java.util.ArrayList mListeners -> mListeners
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void onRequest(com.koushikdutta.async.http.server.HttpServerRequestCallback,com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
    java.lang.String getResponseCodeDescription(int) -> getResponseCodeDescription
    java.lang.String getContentType(java.lang.String) -> getContentType
    void listenSecure(int,javax.net.ssl.SSLContext) -> listenSecure
    void websocket(java.lang.String,java.lang.String,com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback) -> websocket
    void directory(android.content.Context,java.lang.String,java.lang.String) -> directory
    void directory(java.lang.String,java.io.File,boolean) -> directory
    void addAction(java.lang.String,java.lang.String,com.koushikdutta.async.http.server.HttpServerRequestCallback) -> addAction
    void directory(java.lang.String,java.io.File) -> directory
    void get(java.lang.String,com.koushikdutta.async.http.server.HttpServerRequestCallback) -> get
    android.util.Pair getAssetStream(android.content.Context,java.lang.String) -> getAssetStream
    com.koushikdutta.async.callback.CompletedCallback getErrorCallback() -> getErrorCallback
    com.koushikdutta.async.callback.ListenCallback getListenCallback() -> getListenCallback
    com.koushikdutta.async.AsyncServerSocket listen(int) -> listen
    com.koushikdutta.async.AsyncServerSocket listen(com.koushikdutta.async.AsyncServer,int) -> listen
    boolean onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
    com.koushikdutta.async.http.body.AsyncHttpRequestBody onUnknownBody(com.koushikdutta.async.http.Headers) -> onUnknownBody
    void post(java.lang.String,com.koushikdutta.async.http.server.HttpServerRequestCallback) -> post
    void removeAction(java.lang.String,java.lang.String) -> removeAction
    void report(java.lang.Exception) -> report
    void setErrorCallback(com.koushikdutta.async.callback.CompletedCallback) -> setErrorCallback
    void stop() -> stop
    java.lang.String tryGetContentType(java.lang.String) -> tryGetContentType
    void websocket(java.lang.String,com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback) -> websocket
    void <clinit>() -> <clinit>
    void -wrap0(com.koushikdutta.async.http.server.AsyncHttpServer,java.lang.Exception) -> -wrap0
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    void checkArgument(boolean) -> checkArgument
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void <init>() -> <init>
com.koushikdutta.async.http.HybiParser$5 -> com.koushikdutta.async.http.HybiParser$5:
    com.koushikdutta.async.http.HybiParser this$0 -> this$0
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.async.http.HybiParser) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void <clinit>() -> <clinit>
android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl -> android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl:
    void <init>() -> <init>
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    char[] sFormatStr -> sFormatStr
    java.lang.Object sFormatSync -> sFormatSync
    void <init>() -> <init>
    int accumField(int,int,boolean,int) -> accumField
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    int formatDurationLocked(long,int) -> formatDurationLocked
    int printField(char[],int,char,int,boolean,int) -> printField
    void <clinit>() -> <clinit>
com.koushikdutta.async.PushParser$IntWaiter -> com.koushikdutta.async.PushParser$IntWaiter:
    com.koushikdutta.async.PushParser$ParseCallback callback -> callback
    void <init>(com.koushikdutta.async.PushParser$ParseCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    void <init>() -> <init>
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    void colClear() -> colClear
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    java.util.Map colGetMap() -> colGetMap
    int colGetSize() -> colGetSize
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    void colRemoveAt(int) -> colRemoveAt
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.internal.bind.TypeAdapters$22 this$1 -> this$1
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    void <init>(com.google.gson.internal.bind.TypeAdapters$22,com.google.gson.TypeAdapter) -> <init>
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    void <init>() -> <init>
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.v4.widget.CompoundButtonCompatDonut -> android.support.v4.widget.CompoundButtonCompatDonut:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sButtonDrawableField -> sButtonDrawableField
    boolean sButtonDrawableFieldFetched -> sButtonDrawableFieldFetched
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
com.koushikdutta.ion.gson.GsonArrayParser -> com.koushikdutta.ion.gson.GsonArrayParser:
    void <init>() -> <init>
    void <init>(java.nio.charset.Charset) -> <init>
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    void <init>() -> <init>
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void <init>() -> <init>
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
com.koushikdutta.ion.IonRequestBuilder$5$1 -> com.koushikdutta.ion.IonRequestBuilder$5$1:
    com.koushikdutta.ion.IonRequestBuilder$5 this$1 -> this$1
    java.lang.Object val$result -> val$result
    void <init>(com.koushikdutta.ion.IonRequestBuilder$5,java.lang.Object) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void <init>() -> <init>
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    java.lang.Object obtain(android.view.View,int) -> obtain
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
com.koushikdutta.ion.BitmapFetcher$1 -> com.koushikdutta.ion.BitmapFetcher$1:
    com.koushikdutta.ion.BitmapFetcher this$0 -> this$0
    com.koushikdutta.ion.BitmapCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.BitmapFetcher,com.koushikdutta.ion.BitmapCallback) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.bitmap.BitmapInfo) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    void <init>() -> <init>
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
com.koushikdutta.async.http.WebSocket$PongCallback -> com.koushikdutta.async.http.WebSocket$PongCallback:
    void onPongReceived(java.lang.String) -> onPongReceived
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    int mSize -> mSize
    java.lang.Object[] mValues -> mValues
    void <init>() -> <init>
    void <init>(int) -> <init>
    void append(int,java.lang.Object) -> append
    void clear() -> clear
    android.support.v4.util.SparseArrayCompat clone() -> clone
    void delete(int) -> delete
    void gc() -> gc
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    int keyAt(int) -> keyAt
    void put(int,java.lang.Object) -> put
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void setValueAt(int,java.lang.Object) -> setValueAt
    int size() -> size
    java.lang.String toString() -> toString
    java.lang.Object valueAt(int) -> valueAt
    void <clinit>() -> <clinit>
    java.lang.Object clone() -> clone
com.koushikdutta.async.http.spdy.SpdyMiddleware$2$1 -> com.koushikdutta.async.http.spdy.SpdyMiddleware$2$1:
    boolean hasReceivedSettings -> hasReceivedSettings
    com.koushikdutta.async.http.spdy.SpdyMiddleware$2 this$1 -> this$1
    java.lang.String val$key -> val$key
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware$2,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.Protocol,java.lang.String,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.callback.ConnectCallback) -> <init>
    void settings(boolean,com.koushikdutta.async.http.spdy.Settings) -> settings
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.AsyncServer$5$1 -> com.koushikdutta.async.AsyncServer$5$1:
    com.koushikdutta.async.AsyncServer$5 this$1 -> this$1
    java.nio.channels.ServerSocketChannel val$server -> val$server
    com.koushikdutta.async.ServerSocketChannelWrapper val$wrapper -> val$wrapper
    java.nio.channels.SelectionKey val$key -> val$key
    void <init>(com.koushikdutta.async.AsyncServer$5,java.nio.channels.ServerSocketChannel,com.koushikdutta.async.ServerSocketChannelWrapper,java.nio.channels.SelectionKey) -> <init>
    int getLocalPort() -> getLocalPort
    void stop() -> stop
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void <init>() -> <init>
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
com.koushikdutta.async.AsyncServer -> com.koushikdutta.async.AsyncServer:
    java.lang.String LOGTAG -> LOGTAG
    long QUEUE_EMPTY -> QUEUE_EMPTY
    java.lang.Thread mAffinity -> mAffinity
    com.koushikdutta.async.AsyncServer mInstance -> mInstance
    java.lang.String mName -> mName
    java.util.PriorityQueue mQueue -> mQueue
    com.koushikdutta.async.SelectorWrapper mSelector -> mSelector
    java.util.WeakHashMap mServers -> mServers
    java.util.concurrent.ExecutorService synchronousWorkers -> synchronousWorkers
    boolean -assertionsDisabled -> -assertionsDisabled
    java.lang.Object post(java.lang.Runnable) -> post
    com.koushikdutta.async.future.Cancellable connectSocket(java.lang.String,int,com.koushikdutta.async.callback.ConnectCallback) -> connectSocket
    com.koushikdutta.async.future.Future getAllByName(java.lang.String) -> getAllByName
    com.koushikdutta.async.future.Cancellable connectSocket(java.net.InetSocketAddress,com.koushikdutta.async.callback.ConnectCallback) -> connectSocket
    void wakeup(com.koushikdutta.async.SelectorWrapper) -> wakeup
    java.lang.Object post(com.koushikdutta.async.callback.CompletedCallback,java.lang.Exception) -> post
    void run(java.lang.Runnable) -> run
    void stop() -> stop
    com.koushikdutta.async.AsyncServerSocket listen(java.net.InetAddress,int,com.koushikdutta.async.callback.ListenCallback) -> listen
    com.koushikdutta.async.AsyncServer$ConnectFuture connectResolvedInetSocketAddress(java.net.InetSocketAddress,com.koushikdutta.async.callback.ConnectCallback) -> connectResolvedInetSocketAddress
    com.koushikdutta.async.future.Future getByName(java.lang.String) -> getByName
    com.koushikdutta.async.AsyncDatagramSocket connectDatagram(java.lang.String,int) -> connectDatagram
    com.koushikdutta.async.AsyncDatagramSocket openDatagram(java.net.SocketAddress,boolean) -> openDatagram
    com.koushikdutta.async.AsyncDatagramSocket connectDatagram(java.net.SocketAddress) -> connectDatagram
    void run(boolean) -> run
    void dump() -> dump
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    boolean addMe() -> addMe
    java.lang.Thread getAffinity() -> getAffinity
    com.koushikdutta.async.AsyncServer getCurrentThreadServer() -> getCurrentThreadServer
    com.koushikdutta.async.AsyncServer getDefault() -> getDefault
    void handleSocket(com.koushikdutta.async.AsyncNetworkSocket) -> handleSocket
    boolean isAffinityThread() -> isAffinityThread
    boolean isAffinityThreadOrStopped() -> isAffinityThreadOrStopped
    boolean isRunning() -> isRunning
    long lockAndRunQueue(com.koushikdutta.async.AsyncServer,java.util.PriorityQueue) -> lockAndRunQueue
    java.util.concurrent.ExecutorService newSynchronousWorkers() -> newSynchronousWorkers
    void onDataReceived(int) -> onDataReceived
    void onDataSent(int) -> onDataSent
    com.koushikdutta.async.AsyncDatagramSocket openDatagram() -> openDatagram
    void post(android.os.Handler,java.lang.Runnable) -> post
    java.lang.Object postDelayed(java.lang.Runnable,long) -> postDelayed
    void removeAllCallbacks(java.lang.Object) -> removeAllCallbacks
    void run(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.SelectorWrapper,java.util.PriorityQueue) -> run
    void runLoop(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.SelectorWrapper,java.util.PriorityQueue) -> runLoop
    void shutdownEverything(com.koushikdutta.async.SelectorWrapper) -> shutdownEverything
    void shutdownKeys(com.koushikdutta.async.SelectorWrapper) -> shutdownKeys
    void <clinit>() -> <clinit>
    com.koushikdutta.async.SelectorWrapper -get0(com.koushikdutta.async.AsyncServer) -> -get0
    com.koushikdutta.async.AsyncServer$ConnectFuture -wrap0(com.koushikdutta.async.AsyncServer,java.net.InetSocketAddress,com.koushikdutta.async.callback.ConnectCallback) -> -wrap0
    void -wrap1(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.AsyncNetworkSocket) -> -wrap1
    void -wrap2(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.SelectorWrapper,java.util.PriorityQueue) -> -wrap2
    void -wrap3(com.koushikdutta.async.SelectorWrapper) -> -wrap3
com.koushikdutta.async.http.body.MultipartFormDataBody$6 -> com.koushikdutta.async.http.body.MultipartFormDataBody$6:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.DataSink val$sink -> val$sink
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.DataSink) -> <init>
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.body.DocumentBody$1 -> com.koushikdutta.async.http.body.DocumentBody$1:
    com.koushikdutta.async.http.body.DocumentBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    void <init>(com.koushikdutta.async.http.body.DocumentBody,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception,org.w3c.dom.Document) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void <init>() -> <init>
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void cancel(android.view.View) -> cancel
    long getDuration(android.view.View) -> getDuration
    long getStartDelay(android.view.View) -> getStartDelay
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void setDuration(android.view.View,long) -> setDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    void start(android.view.View) -> start
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
    void <init>() -> <init>
com.koushikdutta.async.http.AsyncHttpClientMiddleware -> com.koushikdutta.async.http.AsyncHttpClientMiddleware:
    boolean exchangeHeaders(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> exchangeHeaders
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    void onBodyDecoder(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnBodyDataOnRequestSentData) -> onBodyDecoder
    void onHeadersReceived(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnHeadersReceivedDataOnRequestSentData) -> onHeadersReceived
    void onRequest(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestData) -> onRequest
    void onRequestSent(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData) -> onRequestSent
    void onResponseComplete(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> onResponseComplete
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> IMPL
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    void <init>() -> <init>
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.koushikdutta.async.SelectorWrapper -> com.koushikdutta.async.SelectorWrapper:
    boolean isWaking -> isWaking
    java.nio.channels.Selector selector -> selector
    java.util.concurrent.Semaphore semaphore -> semaphore
    java.nio.channels.Selector getSelector() -> getSelector
    void wakeupOnce() -> wakeupOnce
    void <init>(java.nio.channels.Selector) -> <init>
    void close() -> close
    boolean isOpen() -> isOpen
    java.util.Set keys() -> keys
    int selectNow() -> selectNow
    void select() -> select
    void select(long) -> select
    java.util.Set selectedKeys() -> selectedKeys
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.media.session.MediaSessionCompatApi18 -> android.support.v4.media.session.MediaSessionCompatApi18:
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    void <init>() -> <init>
    java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createPlaybackPositionUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> registerMediaButtonEventReceiver
    void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object) -> setOnPlaybackPositionUpdateListener
    void setState(java.lang.Object,int,long,float,long) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> unregisterMediaButtonEventReceiver
com.koushikdutta.async.http.spdy.SpdyMiddleware$SpdyConnectionWaiter -> com.koushikdutta.async.http.spdy.SpdyMiddleware$SpdyConnectionWaiter:
    com.koushikdutta.async.future.SimpleCancellable originalCancellable -> originalCancellable
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware$SpdyConnectionWaiter) -> <init>
com.koushikdutta.async.future.Continuation$2 -> com.koushikdutta.async.future.Continuation$2:
    boolean mThisCompleted -> mThisCompleted
    com.koushikdutta.async.future.Continuation this$0 -> this$0
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.async.future.Continuation) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
    void <clinit>() -> <clinit>
com.koushikdutta.ion.DefaultTransform -> com.koushikdutta.ion.DefaultTransform:
    android.graphics.Paint bilinearSamplingPaint -> bilinearSamplingPaint
    int resizeHeight -> resizeHeight
    int resizeWidth -> resizeWidth
    com.koushikdutta.ion.ScaleMode scaleMode -> scaleMode
    void <init>(int,int,com.koushikdutta.ion.ScaleMode) -> <init>
    java.lang.String key() -> key
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    void <clinit>() -> <clinit>
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void <init>(android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> <init>
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    void <init>() -> <init>
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isLaidOut(android.view.View) -> isLaidOut
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    void <init>() -> <init>
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class unwrap(java.lang.Class) -> unwrap
    java.lang.Class wrap(java.lang.Class) -> wrap
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.socketio.SocketIOConnection$6 -> com.koushikdutta.async.http.socketio.SocketIOConnection$6:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void <init>() -> <init>
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    void <init>() -> <init>
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    boolean isEditable(java.lang.Object) -> isEditable
    boolean refresh(java.lang.Object) -> refresh
    void setEditable(java.lang.Object,boolean) -> setEditable
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl:
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    int getId(java.lang.Object) -> getId
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    int getType(java.lang.Object) -> getType
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl:
    void <init>() -> <init>
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    int mContainerId -> mContainerId
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int CREATED -> CREATED
    int INITIALIZING -> INITIALIZING
    int RESUMED -> RESUMED
    int STARTED -> STARTED
    int STOPPED -> STOPPED
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    boolean mAdded -> mAdded
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    android.view.View mAnimatingAway -> mAnimatingAway
    android.os.Bundle mArguments -> mArguments
    int mBackStackNesting -> mBackStackNesting
    boolean mCalled -> mCalled
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.view.ViewGroup mContainer -> mContainer
    boolean mDeferStart -> mDeferStart
    boolean mDetached -> mDetached
    java.lang.Object mEnterTransition -> mEnterTransition
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    java.lang.Object mExitTransition -> mExitTransition
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    int mFragmentId -> mFragmentId
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    boolean mFromLayout -> mFromLayout
    boolean mHasMenu -> mHasMenu
    boolean mHidden -> mHidden
    boolean mInLayout -> mInLayout
    int mIndex -> mIndex
    android.view.View mInnerView -> mInnerView
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mMenuVisible -> mMenuVisible
    int mNextAnim -> mNextAnim
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    java.lang.Object mReenterTransition -> mReenterTransition
    boolean mRemoving -> mRemoving
    boolean mRestored -> mRestored
    boolean mResumed -> mResumed
    boolean mRetainInstance -> mRetainInstance
    boolean mRetainLoader -> mRetainLoader
    boolean mRetaining -> mRetaining
    java.lang.Object mReturnTransition -> mReturnTransition
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    int mState -> mState
    int mStateAfterAnimating -> mStateAfterAnimating
    java.lang.String mTag -> mTag
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mUserVisibleHint -> mUserVisibleHint
    android.view.View mView -> mView
    java.lang.String mWho -> mWho
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    void <init>() -> <init>
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View getView() -> getView
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean equals(java.lang.Object) -> equals
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    android.os.Bundle getArguments() -> getArguments
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.content.Context getContext() -> getContext
    java.lang.Object getEnterTransition() -> getEnterTransition
    java.lang.Object getExitTransition() -> getExitTransition
    java.lang.Object getHost() -> getHost
    int getId() -> getId
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    java.lang.Object getReenterTransition() -> getReenterTransition
    android.content.res.Resources getResources() -> getResources
    boolean getRetainInstance() -> getRetainInstance
    java.lang.Object getReturnTransition() -> getReturnTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.String getTag() -> getTag
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    java.lang.CharSequence getText(int) -> getText
    boolean getUserVisibleHint() -> getUserVisibleHint
    boolean hasOptionsMenu() -> hasOptionsMenu
    int hashCode() -> hashCode
    void initState() -> initState
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isHidden() -> isHidden
    boolean isInBackStack() -> isInBackStack
    boolean isInLayout() -> isInLayout
    boolean isMenuVisible() -> isMenuVisible
    boolean isRemoving() -> isRemoving
    boolean isResumed() -> isResumed
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    boolean isVisible() -> isVisible
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onAttach(android.content.Context) -> onAttach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onLowMemory() -> onLowMemory
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onPause() -> onPause
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void onResume() -> onResume
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performCreate(android.os.Bundle) -> performCreate
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performDestroy() -> performDestroy
    void performDestroyView() -> performDestroyView
    void performLowMemory() -> performLowMemory
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performPause() -> performPause
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    void performReallyStop() -> performReallyStop
    void performResume() -> performResume
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performStart() -> performStart
    void performStop() -> performStop
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void requestPermissions(java.lang.String[],int) -> requestPermissions
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    void setArguments(android.os.Bundle) -> setArguments
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setExitTransition(java.lang.Object) -> setExitTransition
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    void setRetainInstance(boolean) -> setRetainInstance
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    java.lang.String toString() -> toString
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.koushikdutta.async.dns.DnsResponse -> com.koushikdutta.async.dns.DnsResponse:
    java.util.ArrayList addresses -> addresses
    java.util.ArrayList names -> names
    java.net.InetSocketAddress source -> source
    com.koushikdutta.async.http.Multimap txt -> txt
    void <init>() -> <init>
    com.koushikdutta.async.dns.DnsResponse parse(com.koushikdutta.async.ByteBufferList) -> parse
    java.lang.String parseName(com.koushikdutta.async.ByteBufferList,java.nio.ByteBuffer) -> parseName
    void parseTxt(com.koushikdutta.async.ByteBufferList) -> parseTxt
    java.lang.String toString() -> toString
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    void <init>() -> <init>
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
    boolean isEnabled(java.lang.Object) -> isEnabled
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.graphics.drawable.DrawableCompatLollipop:
    void <init>() -> <init>
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
com.koushikdutta.async.http.spdy.Settings -> com.koushikdutta.async.http.spdy.Settings:
    int DEFAULT_INITIAL_WINDOW_SIZE -> DEFAULT_INITIAL_WINDOW_SIZE
    int INITIAL_WINDOW_SIZE -> INITIAL_WINDOW_SIZE
    int CLIENT_CERTIFICATE_VECTOR_SIZE -> CLIENT_CERTIFICATE_VECTOR_SIZE
    int COUNT -> COUNT
    int CURRENT_CWND -> CURRENT_CWND
    int DOWNLOAD_BANDWIDTH -> DOWNLOAD_BANDWIDTH
    int DOWNLOAD_RETRANS_RATE -> DOWNLOAD_RETRANS_RATE
    int ENABLE_PUSH -> ENABLE_PUSH
    int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS -> FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS
    int FLOW_CONTROL_OPTIONS -> FLOW_CONTROL_OPTIONS
    int FLOW_CONTROL_OPTIONS_DISABLED -> FLOW_CONTROL_OPTIONS_DISABLED
    int HEADER_TABLE_SIZE -> HEADER_TABLE_SIZE
    int MAX_CONCURRENT_STREAMS -> MAX_CONCURRENT_STREAMS
    int PERSISTED -> PERSISTED
    int PERSIST_VALUE -> PERSIST_VALUE
    int ROUND_TRIP_TIME -> ROUND_TRIP_TIME
    int UPLOAD_BANDWIDTH -> UPLOAD_BANDWIDTH
    int persistValue -> persistValue
    int persisted -> persisted
    int set -> set
    int[] values -> values
    int getInitialWindowSize(int) -> getInitialWindowSize
    void <init>() -> <init>
    com.koushikdutta.async.http.spdy.Settings set(int,int,int) -> set
    void clear() -> clear
    void merge(com.koushikdutta.async.http.spdy.Settings) -> merge
    int flags(int) -> flags
    int get(int) -> get
    int getClientCertificateVectorSize(int) -> getClientCertificateVectorSize
    int getCurrentCwnd(int) -> getCurrentCwnd
    int getDownloadBandwidth(int) -> getDownloadBandwidth
    int getDownloadRetransRate(int) -> getDownloadRetransRate
    boolean getEnablePush(boolean) -> getEnablePush
    int getHeaderTableSize() -> getHeaderTableSize
    int getMaxConcurrentStreams(int) -> getMaxConcurrentStreams
    int getRoundTripTime(int) -> getRoundTripTime
    int getUploadBandwidth(int) -> getUploadBandwidth
    boolean isFlowControlDisabled() -> isFlowControlDisabled
    boolean isPersisted(int) -> isPersisted
    boolean isSet(int) -> isSet
    boolean persistValue(int) -> persistValue
    int size() -> size
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy:
    void <init>(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> <init>
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
com.koushikdutta.async.http.socketio.SocketIOConnection$2 -> com.koushikdutta.async.http.socketio.SocketIOConnection$2:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.socketio.transport.SocketIOTransport) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.loader.FileLoader$1 -> com.koushikdutta.ion.loader.FileLoader$1:
    com.koushikdutta.ion.loader.FileLoader this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    java.lang.String val$uri -> val$uri
    com.koushikdutta.ion.Ion val$ion -> val$ion
    int val$resizeWidth -> val$resizeWidth
    int val$resizeHeight -> val$resizeHeight
    boolean val$animateGif -> val$animateGif
    java.lang.String val$key -> val$key
    void <init>(com.koushikdutta.ion.loader.FileLoader,com.koushikdutta.async.future.SimpleFuture,java.lang.String,com.koushikdutta.ion.Ion,int,int,boolean,java.lang.String) -> <init>
    void run() -> run
com.koushikdutta.async.http.socketio.transport.XHRPollingTransport -> com.koushikdutta.async.http.socketio.transport.XHRPollingTransport:
    java.lang.String SEPARATOR -> SEPARATOR
    com.koushikdutta.async.http.AsyncHttpClient client -> client
    com.koushikdutta.async.callback.CompletedCallback closedCallback -> closedCallback
    boolean connected -> connected
    java.lang.String sessionId -> sessionId
    android.net.Uri sessionUrl -> sessionUrl
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback stringCallback -> stringCallback
    void send(java.lang.String) -> send
    void doLongPolling() -> doLongPolling
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,java.lang.String,java.lang.String) -> <init>
    void close(java.lang.Exception) -> close
    java.lang.String computedRequestUrl() -> computedRequestUrl
    void disconnect() -> disconnect
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    java.lang.String getSessionId() -> getSessionId
    boolean heartbeats() -> heartbeats
    boolean isConnected() -> isConnected
    void postMessage(java.lang.String) -> postMessage
    void sendResult(java.lang.String) -> sendResult
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setStringCallback(com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback) -> setStringCallback
    void -wrap0(com.koushikdutta.async.http.socketio.transport.XHRPollingTransport,java.lang.Exception) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.socketio.transport.XHRPollingTransport) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.socketio.transport.XHRPollingTransport,java.lang.String) -> -wrap2
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    void <init>() -> <init>
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
com.koushikdutta.async.http.server.AsyncHttpServer$3 -> com.koushikdutta.async.http.server.AsyncHttpServer$3:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    java.lang.String val$protocol -> val$protocol
    com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer,java.lang.String,com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback) -> <init>
    void onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.content.Loader$OnLoadCanceledListener:
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl -> android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl:
    void <init>() -> <init>
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    void <init>(android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl) -> <init>
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3$2 -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3$2:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3 this$2 -> this$2
    int val$totalBytesRead -> val$totalBytesRead
    long val$total -> val$total
    void <init>(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$3,int,long) -> <init>
    void run() -> run
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    void <init>() -> <init>
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
com.koushikdutta.async.http.socketio.SocketIORequest -> com.koushikdutta.async.http.socketio.SocketIORequest:
    com.koushikdutta.async.http.socketio.SocketIORequest$Config config -> config
    java.lang.String endpoint -> endpoint
    java.lang.String query -> query
    void <init>(java.lang.String) -> <init>
    java.lang.String getEndpoint() -> getEndpoint
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String,java.lang.String,com.koushikdutta.async.http.socketio.SocketIORequest$Config) -> <init>
    com.koushikdutta.async.http.socketio.SocketIORequest$Config getConfig() -> getConfig
    java.lang.String getQuery() -> getQuery
com.mobeta.android.dslv.DragSortCursorAdapter -> com.mobeta.android.dslv.DragSortCursorAdapter:
    int REMOVED -> REMOVED
    android.util.SparseIntArray mListMapping -> mListMapping
    java.util.ArrayList mRemovedCursorPositions -> mRemovedCursorPositions
    void <init>(android.content.Context,android.database.Cursor) -> <init>
    void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    void changeCursor(android.database.Cursor) -> changeCursor
    void cleanMapping() -> cleanMapping
    void drag(int,int) -> drag
    void drop(int,int) -> drop
    int getCount() -> getCount
    int getCursorPosition(int) -> getCursorPosition
    java.util.ArrayList getCursorPositions() -> getCursorPositions
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getListPosition(int) -> getListPosition
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void remove(int) -> remove
    void reset() -> reset
    void resetMappings() -> resetMappings
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
com.koushikdutta.async.DataEmitterReader -> com.koushikdutta.async.DataEmitterReader:
    com.koushikdutta.async.ByteBufferList mPendingData -> mPendingData
    com.koushikdutta.async.callback.DataCallback mPendingRead -> mPendingRead
    int mPendingReadLength -> mPendingReadLength
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    boolean handlePendingData(com.koushikdutta.async.DataEmitter) -> handlePendingData
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void read(int,com.koushikdutta.async.callback.DataCallback) -> read
    void <clinit>() -> <clinit>
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void <init>(android.support.v4.print.PrintHelperKitkat$2$1) -> <init>
    void onCancel() -> onCancel
com.koushikdutta.async.callback.ResultCallback -> com.koushikdutta.async.callback.ResultCallback:
    void onCompleted(java.lang.Exception,java.lang.Object,java.lang.Object) -> onCompleted
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    void <init>() -> <init>
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
com.aokp.romcontrol.fragments.NavigationDrawerFragment$1 -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$1:
    com.aokp.romcontrol.fragments.NavigationDrawerFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.NavigationDrawerFragment) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.koushikdutta.async.TapCallback -> com.koushikdutta.async.TapCallback:
com.koushikdutta.async.http.filter.GZIPInputFilter -> com.koushikdutta.async.http.filter.GZIPInputFilter:
    int FCOMMENT -> FCOMMENT
    int FEXTRA -> FEXTRA
    int FHCRC -> FHCRC
    int FNAME -> FNAME
    java.util.zip.CRC32 crc -> crc
    boolean mNeedsHeader -> mNeedsHeader
    void <init>() -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    short peekShort(byte[],int,java.nio.ByteOrder) -> peekShort
    int unsignedToBytes(byte) -> unsignedToBytes
com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData:
    com.koushikdutta.async.callback.ConnectCallback connectCallback -> connectCallback
    java.lang.String protocol -> protocol
    com.koushikdutta.async.future.Cancellable socketCancellable -> socketCancellable
    void <init>() -> <init>
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.SimpleFloatViewManager:
    int mFloatBGColor -> mFloatBGColor
    android.graphics.Bitmap mFloatBitmap -> mFloatBitmap
    android.widget.ImageView mImageView -> mImageView
    android.widget.ListView mListView -> mListView
    void <init>(android.widget.ListView) -> <init>
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
com.koushikdutta.async.http.HttpUtil$EndEmitter$1 -> com.koushikdutta.async.http.HttpUtil$EndEmitter$1:
    com.koushikdutta.async.http.HttpUtil$EndEmitter val$ret -> val$ret
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.async.http.HttpUtil$EndEmitter,java.lang.Exception) -> <init>
    void run() -> run
com.koushikdutta.async.future.FutureRunnable -> com.koushikdutta.async.future.FutureRunnable:
    java.lang.Object run() -> run
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
com.koushikdutta.async.http.spdy.Http20Draft13$Reader$1 -> com.koushikdutta.async.http.spdy.Http20Draft13$Reader$1:
    com.koushikdutta.async.http.spdy.Http20Draft13$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.ion.loader.FileLoader -> com.koushikdutta.ion.loader.FileLoader:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
android.support.v4.media.RatingCompat$Style -> android.support.v4.media.RatingCompat$Style:
com.koushikdutta.async.http.AsyncHttpClient$9$2 -> com.koushikdutta.async.http.AsyncHttpClient$9$2:
    com.koushikdutta.async.http.AsyncHttpClient$9 this$1 -> this$1
    java.io.OutputStream val$fout -> val$fout
    java.io.File val$file -> val$file
    com.koushikdutta.async.http.AsyncHttpClient$FileCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.http.AsyncHttpResponse val$response -> val$response
    void <init>(com.koushikdutta.async.http.AsyncHttpClient$9,java.io.OutputStream,java.io.File,com.koushikdutta.async.http.AsyncHttpClient$FileCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    void <init>() -> <init>
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$1 -> this$1
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> <init>
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
com.koushikdutta.async.http.AsyncHttpClient$4 -> com.koushikdutta.async.http.AsyncHttpClient$4:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse val$cancel -> val$cancel
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.async.http.callback.HttpConnectCallback val$callback -> val$callback
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData val$data -> val$data
    int val$redirectCount -> val$redirectCount
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.callback.HttpConnectCallback,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData,int) -> <init>
    com.koushikdutta.async.AsyncSocket detachSocket() -> detachSocket
    void onHeadersReceived() -> onHeadersReceived
    void onRequestCompleted(java.lang.Exception) -> onRequestCompleted
    void report(java.lang.Exception) -> report
    void setDataEmitter(com.koushikdutta.async.DataEmitter) -> setDataEmitter
com.koushikdutta.async.http.spdy.Spdy3$Reader -> com.koushikdutta.async.http.spdy.Spdy3$Reader:
    boolean client -> client
    com.koushikdutta.async.DataEmitter emitter -> emitter
    com.koushikdutta.async.ByteBufferList emptyList -> emptyList
    int flags -> flags
    com.koushikdutta.async.http.spdy.FrameReader$Handler handler -> handler
    com.koushikdutta.async.http.spdy.HeaderReader headerReader -> headerReader
    boolean inFinished -> inFinished
    int length -> length
    com.koushikdutta.async.callback.DataCallback onDataFrame -> onDataFrame
    com.koushikdutta.async.callback.DataCallback onFrame -> onFrame
    com.koushikdutta.async.callback.DataCallback onFullFrame -> onFullFrame
    com.koushikdutta.async.ByteBufferList partial -> partial
    com.koushikdutta.async.DataEmitterReader reader -> reader
    int streamId -> streamId
    int w1 -> w1
    int w2 -> w2
    void <init>(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.spdy.FrameReader$Handler,boolean) -> <init>
    java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
    void parseFrameHeader() -> parseFrameHeader
    void readGoAway(com.koushikdutta.async.ByteBufferList,int,int) -> readGoAway
    void readHeaders(com.koushikdutta.async.ByteBufferList,int,int) -> readHeaders
    void readPing(com.koushikdutta.async.ByteBufferList,int,int) -> readPing
    void readRstStream(com.koushikdutta.async.ByteBufferList,int,int) -> readRstStream
    void readSettings(com.koushikdutta.async.ByteBufferList,int,int) -> readSettings
    void readSynReply(com.koushikdutta.async.ByteBufferList,int,int) -> readSynReply
    void readSynStream(com.koushikdutta.async.ByteBufferList,int,int) -> readSynStream
    void readWindowUpdate(com.koushikdutta.async.ByteBufferList,int,int) -> readWindowUpdate
    com.koushikdutta.async.ByteBufferList -get0(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -get0
    com.koushikdutta.async.http.spdy.FrameReader$Handler -get1(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -get1
    com.koushikdutta.async.callback.DataCallback -get2(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -get2
    com.koushikdutta.async.callback.DataCallback -get3(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -get3
    com.koushikdutta.async.DataEmitterReader -get4(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -get4
    void -wrap0(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap3
    void -wrap4(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap4
    void -wrap5(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap5
    void -wrap6(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap6
    void -wrap7(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap7
    void -wrap8(com.koushikdutta.async.http.spdy.Spdy3$Reader,com.koushikdutta.async.ByteBufferList,int,int) -> -wrap8
com.koushikdutta.async.http.HybiParser$2 -> com.koushikdutta.async.http.HybiParser$2:
    com.koushikdutta.async.http.HybiParser this$0 -> this$0
    void <init>(com.koushikdutta.async.http.HybiParser) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    void <init>() -> <init>
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    void finish(java.lang.Object) -> finish
    boolean isFinished(java.lang.Object) -> isFinished
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    void setSize(java.lang.Object,int,int) -> setSize
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    void <init>() -> <init>
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    boolean performAction(java.lang.Object,int) -> performAction
    void recycle(java.lang.Object) -> recycle
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    java.util.Comparator COMPARATOR -> COMPARATOR
    boolean DEBUG -> DEBUG
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int INVALID_POINTER -> INVALID_POINTER
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.String TAG -> TAG
    boolean USE_CACHE -> USE_CACHE
    int mActivePointerId -> mActivePointerId
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    int mBottomPageBounds -> mBottomPageBounds
    boolean mCalledSuper -> mCalledSuper
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mCloseEnough -> mCloseEnough
    int mCurItem -> mCurItem
    int mDecorChildCount -> mDecorChildCount
    int mDefaultGutterSize -> mDefaultGutterSize
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mExpectedAdapterCount -> mExpectedAdapterCount
    long mFakeDragBeginTime -> mFakeDragBeginTime
    boolean mFakeDragging -> mFakeDragging
    boolean mFirstLayout -> mFirstLayout
    float mFirstOffset -> mFirstOffset
    int mFlingDistance -> mFlingDistance
    int mGutterSize -> mGutterSize
    boolean mInLayout -> mInLayout
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    java.util.ArrayList mItems -> mItems
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mLastOffset -> mLastOffset
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mMaximumVelocity -> mMaximumVelocity
    int mMinimumVelocity -> mMinimumVelocity
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mOffscreenPageLimit -> mOffscreenPageLimit
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    int mPageMargin -> mPageMargin
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    boolean mPopulatePending -> mPopulatePending
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    int mRestoredCurItem -> mRestoredCurItem
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    int mScrollState -> mScrollState
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    int mTopPageBounds -> mTopPageBounds
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int getCurrentItem() -> getCurrentItem
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void addTouchables(java.util.ArrayList) -> addTouchables
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean arrowScroll(int) -> arrowScroll
    boolean beginFakeDrag() -> beginFakeDrag
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    void completeScroll(boolean) -> completeScroll
    void computeScroll() -> computeScroll
    void dataSetChanged() -> dataSetChanged
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void draw(android.graphics.Canvas) -> draw
    void drawableStateChanged() -> drawableStateChanged
    void enableLayers(boolean) -> enableLayers
    void endDrag() -> endDrag
    void endFakeDrag() -> endFakeDrag
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    void fakeDragBy(float) -> fakeDragBy
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    int getClientWidth() -> getClientWidth
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    int getPageMargin() -> getPageMargin
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void initViewPager() -> initViewPager
    boolean isFakeDragging() -> isFakeDragging
    boolean isGutterDrag(float,float) -> isGutterDrag
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onPageScrolled(int,float,int) -> onPageScrolled
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    boolean pageScrolled(int) -> pageScrolled
    boolean performDrag(float) -> performDrag
    void populate() -> populate
    void populate(int) -> populate
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void removeNonDecorViews() -> removeNonDecorViews
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void removeView(android.view.View) -> removeView
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    void setCurrentItem(int,boolean) -> setCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageMargin(int) -> setPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setScrollState(int) -> setScrollState
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void <clinit>() -> <clinit>
    int[] -get0() -> -get0
    android.support.v4.view.PagerAdapter -get1(android.support.v4.view.ViewPager) -> -get1
    int -get2(android.support.v4.view.ViewPager) -> -get2
    void -wrap0(android.support.v4.view.ViewPager,int) -> -wrap0
com.koushikdutta.async.http.ConnectionClosedException -> com.koushikdutta.async.http.ConnectionClosedException:
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.koushikdutta.async.BufferedDataSink$2 -> com.koushikdutta.async.BufferedDataSink$2:
    com.koushikdutta.async.BufferedDataSink this$0 -> this$0
    com.koushikdutta.async.ByteBufferList val$bb -> val$bb
    boolean val$ignoreBuffer -> val$ignoreBuffer
    void <init>(com.koushikdutta.async.BufferedDataSink,com.koushikdutta.async.ByteBufferList,boolean) -> <init>
    void run() -> run
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    void <init>() -> <init>
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
com.koushikdutta.async.parser.JSONObjectParser -> com.koushikdutta.async.parser.JSONObjectParser:
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void <init>() -> <init>
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,org.json.JSONObject,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.TintableCompoundButton:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
com.koushikdutta.ion.loader.ResourceLoader$1 -> com.koushikdutta.ion.loader.ResourceLoader$1:
    com.koushikdutta.ion.loader.ResourceLoader this$0 -> this$0
    android.content.Context val$context -> val$context
    java.lang.String val$uri -> val$uri
    com.koushikdutta.ion.Ion val$ion -> val$ion
    int val$resizeWidth -> val$resizeWidth
    int val$resizeHeight -> val$resizeHeight
    boolean val$animateGif -> val$animateGif
    java.lang.String val$key -> val$key
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.loader.ResourceLoader,android.content.Context,java.lang.String,com.koushikdutta.ion.Ion,int,int,boolean,java.lang.String,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void run() -> run
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    int INVALID_POINTER -> INVALID_POINTER
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    java.lang.String TAG -> TAG
    int mActivePointerId -> mActivePointerId
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    android.view.View mChildToScrollTo -> mChildToScrollTo
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> mEdgeGlowBottom
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> mEdgeGlowTop
    boolean mFillViewport -> mFillViewport
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsLaidOut -> mIsLaidOut
    boolean mIsLayoutDirty -> mIsLayoutDirty
    int mLastMotionY -> mLastMotionY
    long mLastScroll -> mLastScroll
    int mMaximumVelocity -> mMaximumVelocity
    int mMinimumVelocity -> mMinimumVelocity
    int mNestedYOffset -> mNestedYOffset
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    int[] mScrollConsumed -> mScrollConsumed
    int[] mScrollOffset -> mScrollOffset
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    android.graphics.Rect mTempRect -> mTempRect
    int mTouchSlop -> mTouchSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mVerticalScrollFactor -> mVerticalScrollFactor
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean arrowScroll(int) -> arrowScroll
    boolean canScroll() -> canScroll
    int clamp(int,int,int) -> clamp
    void computeScroll() -> computeScroll
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    void doScrollY(int) -> doScrollY
    void draw(android.graphics.Canvas) -> draw
    void endDrag() -> endDrag
    void ensureGlows() -> ensureGlows
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    void fling(int) -> fling
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    boolean fullScroll(int) -> fullScroll
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    int getNestedScrollAxes() -> getNestedScrollAxes
    int getScrollRange() -> getScrollRange
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean inChild(int,int) -> inChild
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initScrollView() -> initScrollView
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    boolean isFillViewport() -> isFillViewport
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onAttachedToWindow() -> onAttachedToWindow
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    boolean pageScroll(int) -> pageScroll
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void requestLayout() -> requestLayout
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    void scrollTo(int,int) -> scrollTo
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    void setFillViewport(boolean) -> setFillViewport
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    void <clinit>() -> <clinit>
    int -wrap0(android.support.v4.widget.NestedScrollView) -> -wrap0
com.koushikdutta.ion.loader.InputStreamDataEmitterFuture -> com.koushikdutta.ion.loader.InputStreamDataEmitterFuture:
    void <init>() -> <init>
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$3 -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$3:
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl this$0 -> this$0
    java.io.InputStream val$inputStream -> val$inputStream
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl,java.io.InputStream) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    android.view.ViewParent mNestedScrollingParent -> mNestedScrollingParent
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    android.view.View mView -> mView
    void <init>(android.view.View) -> <init>
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    void <init>(android.content.Context) -> <init>
    int getColorMode() -> getColorMode
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    void setScaleMode(int) -> setScaleMode
    boolean systemSupportsPrint() -> systemSupportsPrint
com.koushikdutta.async.http.spdy.BitArray -> com.koushikdutta.async.http.spdy.BitArray:
    void shiftLeft(int) -> shiftLeft
    void clear() -> clear
    boolean get(int) -> get
    void set(int) -> set
    void toggle(int) -> toggle
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSocket -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSocket:
    boolean closed -> closed
    com.koushikdutta.async.callback.CompletedCallback closedCallback -> closedCallback
    boolean open -> open
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse,long) -> <init>
    void close() -> close
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isOpen() -> isOpen
    void report(java.lang.Exception) -> report
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void write(com.koushikdutta.async.ByteBufferList) -> write
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
com.koushikdutta.async.http.server.UnknownRequestBody -> com.koushikdutta.async.http.server.UnknownRequestBody:
    com.koushikdutta.async.DataEmitter emitter -> emitter
    int length -> length
    java.lang.String mContentType -> mContentType
    void <init>(java.lang.String) -> <init>
    void <init>(com.koushikdutta.async.DataEmitter,java.lang.String,int) -> <init>
    java.lang.Void get() -> get
    java.lang.String getContentType() -> getContentType
    com.koushikdutta.async.DataEmitter getEmitter() -> getEmitter
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void setCallbacks(com.koushikdutta.async.callback.DataCallback,com.koushikdutta.async.callback.CompletedCallback) -> setCallbacks
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.graphics.drawable.DrawableWrapperLollipop:
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout,int) -> <init>
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void closeOtherDrawer() -> closeOtherDrawer
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeTouched(int,int) -> onEdgeTouched
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void peekDrawer() -> peekDrawer
    void removeCallbacks() -> removeCallbacks
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void -wrap0(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> -wrap0
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getValue() -> getValue
    java.lang.String getName() -> getName
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object build(java.lang.Object) -> build
    java.lang.Object newInstance() -> newInstance
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
com.koushikdutta.async.http.server.AsyncHttpServerResponse -> com.koushikdutta.async.http.server.AsyncHttpServerResponse:
    com.koushikdutta.async.http.server.AsyncHttpServerResponse code(int) -> code
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    void writeHead() -> writeHead
    void send(java.lang.String) -> send
    void proxy(com.koushikdutta.async.http.AsyncHttpResponse) -> proxy
    int code() -> code
    void end() -> end
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    void onCompleted(java.lang.Exception) -> onCompleted
    void redirect(java.lang.String) -> redirect
    void send(org.json.JSONObject) -> send
    void send(java.lang.String,byte[]) -> send
    void send(java.lang.String,java.lang.String) -> send
    void sendFile(java.io.File) -> sendFile
    void sendStream(java.io.InputStream,long) -> sendStream
    void setContentType(java.lang.String) -> setContentType
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    java.lang.String TAG -> TAG
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    void abortAnimation() -> abortAnimation
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    boolean computeScrollOffset() -> computeScrollOffset
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    void <init>(int,android.content.Context,android.view.animation.Interpolator) -> <init>
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    float getCurrVelocity() -> getCurrVelocity
    boolean isFinished() -> isFinished
    boolean isOverScrolled() -> isOverScrolled
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    void startScroll(int,int,int,int) -> startScroll
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl:
    void <init>() -> <init>
    int getSource(android.view.MotionEvent) -> getSource
com.koushikdutta.async.http.server.AsyncHttpServerRequest -> com.koushikdutta.async.http.server.AsyncHttpServerRequest:
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    com.koushikdutta.async.http.body.AsyncHttpRequestBody getBody() -> getBody
    java.util.regex.Matcher getMatcher() -> getMatcher
    java.lang.String getMethod() -> getMethod
    java.lang.String getPath() -> getPath
    com.koushikdutta.async.http.Multimap getQuery() -> getQuery
com.koushikdutta.async.http.socketio.ConnectCallback -> com.koushikdutta.async.http.socketio.ConnectCallback:
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.socketio.SocketIOClient) -> onConnectCompleted
com.koushikdutta.ion.Ion$1 -> com.koushikdutta.ion.Ion$1:
    void <init>() -> <init>
    int compare(com.koushikdutta.ion.DeferredLoadBitmap,com.koushikdutta.ion.DeferredLoadBitmap) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    void <init>(java.lang.reflect.Field) -> <init>
    java.lang.Object get(java.lang.Object) -> get
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    boolean hasModifier(int) -> hasModifier
    boolean isSynthetic() -> isSynthetic
android.support.v4.app.ActivityCompatApi23 -> android.support.v4.app.ActivityCompatApi23:
    void <init>() -> <init>
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
android.support.annotation.ColorInt -> android.support.annotation.ColorInt:
com.koushikdutta.async.AsyncServerSocket -> com.koushikdutta.async.AsyncServerSocket:
    int getLocalPort() -> getLocalPort
    void stop() -> stop
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$3 -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$3:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> this$0
    int val$position -> val$position
    void <init>(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.graphics.drawable.DrawableWrapperDonut:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    boolean mColorFilterSet -> mColorFilterSet
    int mCurrentColor -> mCurrentColor
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    void <init>(android.graphics.drawable.Drawable) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getChangingConfigurations() -> getChangingConfigurations
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getMinimumHeight() -> getMinimumHeight
    int getMinimumWidth() -> getMinimumWidth
    int getOpacity() -> getOpacity
    boolean getPadding(android.graphics.Rect) -> getPadding
    int[] getState() -> getState
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    boolean isStateful() -> isStateful
    android.graphics.drawable.Drawable mutate() -> mutate
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onLevelChange(int) -> onLevelChange
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void setAlpha(int) -> setAlpha
    void setChangingConfigurations(int) -> setChangingConfigurations
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    boolean setState(int[]) -> setState
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean setVisible(boolean,boolean) -> setVisible
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean updateTint(int[]) -> updateTint
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.socketio.JSONCallback -> com.koushikdutta.async.http.socketio.JSONCallback:
    void onJSON(org.json.JSONObject,com.koushikdutta.async.http.socketio.Acknowledge) -> onJSON
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void <init>(android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase) -> <init>
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void <init>(android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC) -> <init>
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    void <init>() -> <init>
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
com.koushikdutta.ion.ImageViewBitmapInfo -> com.koushikdutta.ion.ImageViewBitmapInfo:
    java.lang.Exception exception -> exception
    android.widget.ImageView imageView -> imageView
    com.koushikdutta.ion.bitmap.BitmapInfo info -> info
    void <init>() -> <init>
    com.koushikdutta.ion.bitmap.BitmapInfo getBitmapInfo() -> getBitmapInfo
    java.lang.Exception getException() -> getException
    android.widget.ImageView getImageView() -> getImageView
com.koushikdutta.async.BufferedDataSink$1 -> com.koushikdutta.async.BufferedDataSink$1:
    com.koushikdutta.async.BufferedDataSink this$0 -> this$0
    void <init>(com.koushikdutta.async.BufferedDataSink) -> <init>
    void onWriteable() -> onWriteable
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    void <init>() -> <init>
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> this$0
    void <init>(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> <init>
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void <init>(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    void <init>() -> <init>
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    void <init>() -> <init>
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String curTab -> curTab
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,android.support.v13.app.FragmentTabHost$SavedState) -> <init>
com.koushikdutta.ion.ContextReference$1 -> com.koushikdutta.ion.ContextReference$1:
    void <init>(android.content.Context) -> <init>
    java.lang.String isAlive() -> isAlive
com.koushikdutta.async.dns.Dns$2 -> com.koushikdutta.async.dns.Dns$2:
    com.koushikdutta.async.AsyncDatagramSocket val$dgram -> val$dgram
    boolean val$multicast -> val$multicast
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.AsyncDatagramSocket,boolean,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
com.koushikdutta.async.future.MultiFuture$1 -> com.koushikdutta.async.future.MultiFuture$1:
    com.koushikdutta.async.future.MultiFuture this$0 -> this$0
    void <init>(com.koushikdutta.async.future.MultiFuture) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    void <init>(com.google.gson.Gson) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.koushikdutta.ion.builder.UrlEncodedBuilder -> com.koushikdutta.ion.builder.UrlEncodedBuilder:
    com.koushikdutta.ion.builder.UrlEncodedBuilder setBodyParameter(java.lang.String,java.lang.String) -> setBodyParameter
    com.koushikdutta.ion.builder.UrlEncodedBuilder setBodyParameters(java.util.Map) -> setBodyParameters
com.koushikdutta.async.http.body.JSONObjectBody -> com.koushikdutta.async.http.body.JSONObjectBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    org.json.JSONObject json -> json
    byte[] mBodyBytes -> mBodyBytes
    void <init>() -> <init>
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    void <init>(org.json.JSONObject) -> <init>
    org.json.JSONObject get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener -> net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener:
    void onColorChanged(int) -> onColorChanged
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.koushikdutta.ion.gson.GsonSerializer$1 -> com.koushikdutta.ion.gson.GsonSerializer$1:
    com.koushikdutta.ion.gson.GsonSerializer this$0 -> this$0
    void <init>(com.koushikdutta.ion.gson.GsonSerializer) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] typeArguments -> typeArguments
    void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    boolean equals(java.lang.Object) -> equals
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.RequiresPermission -> android.support.annotation.RequiresPermission:
    java.lang.String[] allOf() -> allOf
    java.lang.String[] anyOf() -> anyOf
    boolean conditional() -> conditional
    java.lang.String value() -> value
android.support.v4.widget.CompoundButtonCompatApi23 -> android.support.v4.widget.CompoundButtonCompatApi23:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    java.lang.reflect.Field val$field -> val$field
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.reflect.Field,boolean) -> <init>
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    void <init>() -> <init>
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.animation.AnimatorListenerCompat -> android.support.v4.animation.AnimatorListenerCompat:
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
com.koushikdutta.async.http.server.MimeEncodingException -> com.koushikdutta.async.http.server.MimeEncodingException:
    void <init>(java.lang.String) -> <init>
com.koushikdutta.async.http.AsyncSocketMiddleware$IdleSocketHolder -> com.koushikdutta.async.http.AsyncSocketMiddleware$IdleSocketHolder:
    long idleTime -> idleTime
    com.koushikdutta.async.AsyncSocket socket -> socket
    com.koushikdutta.async.http.AsyncSocketMiddleware this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.AsyncSocket) -> <init>
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
    float onScreen -> onScreen
    void <init>(android.support.v4.widget.DrawerLayout$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,int) -> <init>
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void <clinit>() -> <clinit>
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    void <init>() -> <init>
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    int normalizeMetaState(int) -> normalizeMetaState
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback:
    void <init>() -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationFailed() -> onAuthenticationFailed
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
com.koushikdutta.ion.IonDrawable$IonGifDecoder$2 -> com.koushikdutta.ion.IonDrawable$IonGifDecoder$2:
    com.koushikdutta.ion.IonDrawable$IonGifDecoder this$1 -> this$1
    void <init>(com.koushikdutta.ion.IonDrawable$IonGifDecoder) -> <init>
    void run() -> run
com.koushikdutta.async.http.Multimap$2 -> com.koushikdutta.async.http.Multimap$2:
    void <init>() -> <init>
    java.lang.String decode(java.lang.String) -> decode
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSSLSocket -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSSLSocket:
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse,long) -> <init>
    java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    javax.net.ssl.SSLEngine getSSLEngine() -> getSSLEngine
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void <init>() -> <init>
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    android.support.v4.media.session.MediaControllerCompat$Callback this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
    void <init>() -> <init>
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.reflect.TypeToken exactType -> exactType
    java.lang.Class hierarchyType -> hierarchyType
    boolean matchRawType -> matchRawType
    com.google.gson.JsonSerializer serializer -> serializer
    void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$SingleTypeFactory) -> <init>
com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData:
    com.koushikdutta.async.callback.CompletedCallback receiveHeadersCallback -> receiveHeadersCallback
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead response -> response
    com.koushikdutta.async.callback.CompletedCallback sendHeadersCallback -> sendHeadersCallback
    com.koushikdutta.async.AsyncSocket socket -> socket
    void <init>() -> <init>
com.aokp.romcontrol.util.ChildProcess -> com.aokp.romcontrol.util.ChildProcess:
    int PIPE_SIZE -> PIPE_SIZE
    java.lang.String TAG -> TAG
    java.lang.Process mChildProc -> mChildProc
    java.lang.StringBuffer mChildStderr -> mChildStderr
    com.aokp.romcontrol.util.ChildProcess$ChildReader mChildStderrReader -> mChildStderrReader
    com.aokp.romcontrol.util.ChildProcess$ChildWriter mChildStdinWriter -> mChildStdinWriter
    java.lang.StringBuffer mChildStdout -> mChildStdout
    com.aokp.romcontrol.util.ChildProcess$ChildReader mChildStdoutReader -> mChildStdoutReader
    long mEndTime -> mEndTime
    int mExitValue -> mExitValue
    long mStartTime -> mStartTime
    void <init>(java.lang.String[],java.lang.String) -> <init>
    com.aokp.romcontrol.util.CommandResult getResult() -> getResult
    boolean isFinished() -> isFinished
    int waitFinished() -> waitFinished
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    int[] ATTRS -> ATTRS
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    float SIDE_ALPHA -> SIDE_ALPHA
    java.lang.String TAG -> TAG
    int[] TEXT_ATTRS -> TEXT_ATTRS
    int TEXT_SPACING -> TEXT_SPACING
    android.widget.TextView mCurrText -> mCurrText
    int mGravity -> mGravity
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    android.widget.TextView mNextText -> mNextText
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    int mScaledTextSpacing -> mScaledTextSpacing
    int mTextColor -> mTextColor
    boolean mUpdatingPositions -> mUpdatingPositions
    boolean mUpdatingText -> mUpdatingText
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    int getMinHeight() -> getMinHeight
    int getTextSpacing() -> getTextSpacing
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void requestLayout() -> requestLayout
    void setGravity(int) -> setGravity
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setTextSpacing(int) -> setTextSpacing
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void <clinit>() -> <clinit>
    float -get0(android.support.v4.view.PagerTitleStrip) -> -get0
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    void done() -> done
com.koushikdutta.async.http.socketio.SocketIOConnection$3 -> com.koushikdutta.async.http.socketio.SocketIOConnection$3:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport val$ts -> val$ts
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,com.koushikdutta.async.http.socketio.transport.SocketIOTransport) -> <init>
    void run() -> run
com.aokp.romcontrol.fragments.NavigationDrawerFragment -> com.aokp.romcontrol.fragments.NavigationDrawerFragment:
    java.lang.String PREF_USER_LEARNED_DRAWER -> PREF_USER_LEARNED_DRAWER
    java.lang.String STATE_SELECTED_POSITION -> STATE_SELECTED_POSITION
    com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavigationDrawerCallbacks mCallbacks -> mCallbacks
    int mCurrentSelectedPosition -> mCurrentSelectedPosition
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    android.widget.ListView mDrawerListView -> mDrawerListView
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> mDrawerToggle
    android.view.View mFragmentContainerView -> mFragmentContainerView
    boolean mFromSavedInstanceState -> mFromSavedInstanceState
    boolean mUserLearnedDrawer -> mUserLearnedDrawer
    void setUp(int,android.support.v4.widget.DrawerLayout) -> setUp
    boolean isDrawerOpen() -> isDrawerOpen
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void <init>() -> <init>
    android.app.ActionBar getActionBar() -> getActionBar
    java.lang.String[] getDrawerEntries() -> getDrawerEntries
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onAttach(android.app.Activity) -> onAttach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onDetach() -> onDetach
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void selectItem(int) -> selectItem
    void showGlobalContextActionBar() -> showGlobalContextActionBar
    android.support.v4.app.ActionBarDrawerToggle -get0(com.aokp.romcontrol.fragments.NavigationDrawerFragment) -> -get0
    boolean -get1(com.aokp.romcontrol.fragments.NavigationDrawerFragment) -> -get1
    boolean -set0(com.aokp.romcontrol.fragments.NavigationDrawerFragment,boolean) -> -set0
    void -wrap0(com.aokp.romcontrol.fragments.NavigationDrawerFragment,int) -> -wrap0
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl:
    void <init>() -> <init>
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl -> android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl:
    void <init>() -> <init>
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    void <init>() -> <init>
com.koushikdutta.ion.IonRequestBuilder$3 -> com.koushikdutta.ion.IonRequestBuilder$3:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform val$ret -> val$ret
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpRequest) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21) -> <init>
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.lang.String[] COLUMNS -> COLUMNS
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    java.util.HashMap sCache -> sCache
    void <init>() -> <init>
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int modeToMode(java.lang.String) -> modeToMode
    boolean onCreate() -> onCreate
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void <clinit>() -> <clinit>
com.koushikdutta.async.callback.DataCallback$NullDataCallback -> com.koushikdutta.async.callback.DataCallback$NullDataCallback:
    void <init>() -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    android.os.Bundle args -> args
    java.lang.Class clss -> clss
    android.support.v4.app.Fragment fragment -> fragment
    java.lang.String tag -> tag
    void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
    android.os.Bundle -get0(android.support.v4.app.FragmentTabHost$TabInfo) -> -get0
    java.lang.Class -get1(android.support.v4.app.FragmentTabHost$TabInfo) -> -get1
    android.support.v4.app.Fragment -get2(android.support.v4.app.FragmentTabHost$TabInfo) -> -get2
    java.lang.String -get3(android.support.v4.app.FragmentTabHost$TabInfo) -> -get3
    android.support.v4.app.Fragment -set0(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> -set0
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    boolean mRetaining -> mRetaining
    boolean mStarted -> mStarted
    java.lang.String mWho -> mWho
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean mCreatingLoader -> mCreatingLoader
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    boolean mRetainingStarted -> mRetainingStarted
    void doStart() -> doStart
    void doDestroy() -> doDestroy
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReportStart() -> doReportStart
    void doRetain() -> doRetain
    void doStop() -> doStop
    void doReportNextStart() -> doReportNextStart
    boolean hasRunningLoaders() -> hasRunningLoaders
    void finishRetain() -> finishRetain
    void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean) -> <init>
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> updateHostController
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    android.support.v4.app.FragmentHostCallback -get0(android.support.v4.app.LoaderManagerImpl) -> -get0
com.koushikdutta.ion.mock.MockLoader -> com.koushikdutta.ion.mock.MockLoader:
    com.koushikdutta.ion.mock.MockRequestHandler requestHandler -> requestHandler
    void <init>(com.koushikdutta.ion.mock.MockRequestHandler) -> <init>
    void install(com.koushikdutta.ion.Ion,com.koushikdutta.ion.mock.MockRequestHandler) -> install
    com.koushikdutta.ion.future.ResponseFuture load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,java.lang.reflect.Type) -> load
com.koushikdutta.async.PushParser$LenByteBufferListWaiter -> com.koushikdutta.async.PushParser$LenByteBufferListWaiter:
    com.koushikdutta.async.PushParser$ParseCallback callback -> callback
    void <init>(com.koushikdutta.async.PushParser$ParseCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.BufferedDataEmitter -> com.koushikdutta.async.BufferedDataEmitter:
    com.koushikdutta.async.ByteBufferList mBuffers -> mBuffers
    com.koushikdutta.async.callback.DataCallback mDataCallback -> mDataCallback
    com.koushikdutta.async.DataEmitter mEmitter -> mEmitter
    com.koushikdutta.async.callback.CompletedCallback mEndCallback -> mEndCallback
    java.lang.Exception mEndException -> mEndException
    boolean mEnded -> mEnded
    void <init>(com.koushikdutta.async.DataEmitter) -> <init>
    java.lang.String charset() -> charset
    void close() -> close
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    boolean isChunked() -> isChunked
    boolean isPaused() -> isPaused
    void onDataAvailable() -> onDataAvailable
    void pause() -> pause
    void resume() -> resume
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.koushikdutta.async.http.spdy.Http20Draft13$Writer -> com.koushikdutta.async.http.spdy.Http20Draft13$Writer:
    boolean client -> client
    boolean closed -> closed
    com.koushikdutta.async.ByteBufferList frameHeader -> frameHeader
    com.koushikdutta.async.http.spdy.HpackDraft08$Writer hpackWriter -> hpackWriter
    com.koushikdutta.async.BufferedDataSink sink -> sink
    void <init>(com.koushikdutta.async.BufferedDataSink,boolean) -> <init>
    void ackSettings() -> ackSettings
    void close() -> close
    void connectionPreface() -> connectionPreface
    void data(boolean,int,com.koushikdutta.async.ByteBufferList) -> data
    void dataFrame(int,byte,com.koushikdutta.async.ByteBufferList) -> dataFrame
    void frameHeader(int,int,byte,byte) -> frameHeader
    void goAway(int,com.koushikdutta.async.http.spdy.ErrorCode,byte[]) -> goAway
    void headers(int,java.util.List) -> headers
    void headers(boolean,int,java.util.List) -> headers
    void ping(boolean,int,int) -> ping
    void pushPromise(int,int,java.util.List) -> pushPromise
    void rstStream(int,com.koushikdutta.async.http.spdy.ErrorCode) -> rstStream
    void settings(com.koushikdutta.async.http.spdy.Settings) -> settings
    void synReply(boolean,int,java.util.List) -> synReply
    void synStream(boolean,boolean,int,int,java.util.List) -> synStream
    void windowUpdate(int,long) -> windowUpdate
    void writeContinuationFrames(com.koushikdutta.async.ByteBufferList,int) -> writeContinuationFrames
com.aokp.romcontrol.widgets.DeveloperPreference -> com.aokp.romcontrol.widgets.DeveloperPreference:
    java.lang.String GRAVATAR_API -> GRAVATAR_API
    java.lang.String TAG -> TAG
    java.lang.String devEmail -> devEmail
    android.widget.TextView devName -> devName
    android.widget.ImageView donateButton -> donateButton
    java.lang.String donateLink -> donateLink
    android.widget.ImageView githubButton -> githubButton
    java.lang.String githubLink -> githubLink
    int mDefaultAvatarSize -> mDefaultAvatarSize
    java.lang.String nameDev -> nameDev
    android.widget.ImageView photoView -> photoView
    android.widget.ImageView twitterButton -> twitterButton
    java.lang.String twitterName -> twitterName
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    java.lang.String getGravatarUrl(java.lang.String) -> getGravatarUrl
    java.lang.String getMd5(java.lang.String) -> getMd5
    boolean isInEditMode() -> isInEditMode
    void <clinit>() -> <clinit>
    java.lang.String -get0(com.aokp.romcontrol.widgets.DeveloperPreference) -> -get0
    java.lang.String -get1(com.aokp.romcontrol.widgets.DeveloperPreference) -> -get1
    java.lang.String -get2(com.aokp.romcontrol.widgets.DeveloperPreference) -> -get2
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    void <init>(android.app.ActivityOptions) -> <init>
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.content.res.ResourcesCompatIcsMr1 -> android.support.v4.content.res.ResourcesCompatIcsMr1:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int) -> getDrawableForDensity
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    void <init>() -> <init>
    void close() -> close
    int read(char[],int,int) -> read
com.koushikdutta.ion.loader.FileLoader$FileFuture -> com.koushikdutta.ion.loader.FileLoader$FileFuture:
    void <init>() -> <init>
    void <init>(com.koushikdutta.ion.loader.FileLoader$FileFuture) -> <init>
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.animation.AnimatorCompatHelper:
    android.support.v4.animation.AnimatorProvider IMPL -> IMPL
    void <init>() -> <init>
    void clearInterpolator(android.view.View) -> clearInterpolator
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    void <init>(java.lang.String,int) -> <init>
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.koushikdutta.async.AsyncSSLSocketWrapper -> com.koushikdutta.async.AsyncSSLSocketWrapper:
    boolean clientMode -> clientMode
    com.koushikdutta.async.callback.DataCallback dataCallback -> dataCallback
    javax.net.ssl.SSLContext defaultSSLContext -> defaultSSLContext
    javax.net.ssl.SSLEngine engine -> engine
    boolean finishedHandshake -> finishedHandshake
    com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback handshakeCallback -> handshakeCallback
    javax.net.ssl.HostnameVerifier hostnameVerifier -> hostnameVerifier
    com.koushikdutta.async.callback.DataCallback mDataCallback -> mDataCallback
    com.koushikdutta.async.callback.CompletedCallback mEndCallback -> mEndCallback
    java.lang.Exception mEndException -> mEndException
    boolean mEnded -> mEnded
    java.lang.String mHost -> mHost
    int mPort -> mPort
    com.koushikdutta.async.BufferedDataSink mSink -> mSink
    com.koushikdutta.async.AsyncSocket mSocket -> mSocket
    boolean mUnwrapping -> mUnwrapping
    boolean mWrapping -> mWrapping
    com.koushikdutta.async.callback.WritableCallback mWriteableCallback -> mWriteableCallback
    java.security.cert.X509Certificate[] peerCertificates -> peerCertificates
    com.koushikdutta.async.ByteBufferList pending -> pending
    javax.net.ssl.TrustManager[] trustManagers -> trustManagers
    com.koushikdutta.async.ByteBufferList writeList -> writeList
    boolean -assertionsDisabled -> -assertionsDisabled
    void handshake(com.koushikdutta.async.AsyncSocket,java.lang.String,int,javax.net.ssl.SSLEngine,javax.net.ssl.TrustManager[],javax.net.ssl.HostnameVerifier,boolean,com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback) -> handshake
    void <init>(com.koushikdutta.async.AsyncSocket,java.lang.String,int,javax.net.ssl.SSLEngine,javax.net.ssl.TrustManager[],javax.net.ssl.HostnameVerifier,boolean) -> <init>
    void handleHandshakeStatus(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> handleHandshakeStatus
    void addToPending(com.koushikdutta.async.ByteBufferList,java.nio.ByteBuffer) -> addToPending
    int calculateAlloc(int) -> calculateAlloc
    java.lang.String charset() -> charset
    void close() -> close
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.DataEmitter getDataEmitter() -> getDataEmitter
    javax.net.ssl.SSLContext getDefaultSSLContext() -> getDefaultSSLContext
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    java.lang.String getHost() -> getHost
    java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    int getPort() -> getPort
    javax.net.ssl.SSLEngine getSSLEngine() -> getSSLEngine
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isChunked() -> isChunked
    boolean isOpen() -> isOpen
    boolean isPaused() -> isPaused
    void onDataAvailable() -> onDataAvailable
    void pause() -> pause
    void report(java.lang.Exception) -> report
    void resume() -> resume
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void write(com.koushikdutta.async.ByteBufferList) -> write
    void <clinit>() -> <clinit>
    void -wrap0(com.koushikdutta.async.AsyncSSLSocketWrapper,javax.net.ssl.SSLEngineResult$HandshakeStatus) -> -wrap0
    void -wrap1(com.koushikdutta.async.AsyncSSLSocketWrapper,java.lang.Exception) -> -wrap1
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    void <init>() -> <init>
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.aokp.romcontrol.fragments.SoundSettingsFragment -> com.aokp.romcontrol.fragments.SoundSettingsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    void <init>() -> <init>
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> unwrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -wrap0(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> -wrap0
android.support.v4.app.ActivityCompat$1 -> android.support.v4.app.ActivityCompat$1:
    java.lang.String[] val$permissions -> val$permissions
    android.app.Activity val$activity -> val$activity
    int val$requestCode -> val$requestCode
    void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    void run() -> run
com.koushikdutta.async.http.SSLEngineSNIConfigurator -> com.koushikdutta.async.http.SSLEngineSNIConfigurator:
    java.util.Hashtable holders -> holders
    void <init>() -> <init>
    void configureEngine(javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> configureEngine
com.koushikdutta.ion.builder.GsonFutureBuilder -> com.koushikdutta.ion.builder.GsonFutureBuilder:
    com.koushikdutta.ion.future.ResponseFuture as(java.lang.Class) -> as
    com.koushikdutta.ion.future.ResponseFuture as(com.google.gson.reflect.TypeToken) -> as
    com.koushikdutta.ion.future.ResponseFuture asJsonArray() -> asJsonArray
    com.koushikdutta.ion.future.ResponseFuture asJsonArray(java.nio.charset.Charset) -> asJsonArray
    com.koushikdutta.ion.future.ResponseFuture asJsonObject() -> asJsonObject
    com.koushikdutta.ion.future.ResponseFuture asJsonObject(java.nio.charset.Charset) -> asJsonObject
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    void <init>(android.support.v4.widget.ExploreByTouchHelper) -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void <init>(android.support.v4.widget.ExploreByTouchHelper,android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider) -> <init>
com.koushikdutta.async.http.HybiParser -> com.koushikdutta.async.http.HybiParser:
    long BASE -> BASE
    int BYTE -> BYTE
    int FIN -> FIN
    java.util.List FRAGMENTED_OPCODES -> FRAGMENTED_OPCODES
    int LENGTH -> LENGTH
    int MASK -> MASK
    int MODE_BINARY -> MODE_BINARY
    int MODE_TEXT -> MODE_TEXT
    int OPCODE -> OPCODE
    java.util.List OPCODES -> OPCODES
    int OP_BINARY -> OP_BINARY
    int OP_CLOSE -> OP_CLOSE
    int OP_CONTINUATION -> OP_CONTINUATION
    int OP_PING -> OP_PING
    int OP_PONG -> OP_PONG
    int OP_TEXT -> OP_TEXT
    int RSV1 -> RSV1
    int RSV2 -> RSV2
    int RSV3 -> RSV3
    java.lang.String TAG -> TAG
    long _2_TO_16_ -> _2_TO_16_
    long _2_TO_24 -> _2_TO_24
    long _2_TO_32_ -> _2_TO_32_
    long _2_TO_40_ -> _2_TO_40_
    long _2_TO_48_ -> _2_TO_48_
    long _2_TO_56_ -> _2_TO_56_
    long _2_TO_8_ -> _2_TO_8_
    java.io.ByteArrayOutputStream mBuffer -> mBuffer
    boolean mClosed -> mClosed
    boolean mDeflate -> mDeflate
    boolean mDeflated -> mDeflated
    boolean mFinal -> mFinal
    byte[] mInflateBuffer -> mInflateBuffer
    java.util.zip.Inflater mInflater -> mInflater
    int mLength -> mLength
    int mLengthSize -> mLengthSize
    byte[] mMask -> mMask
    boolean mMasked -> mMasked
    boolean mMasking -> mMasking
    int mMode -> mMode
    int mOpcode -> mOpcode
    byte[] mPayload -> mPayload
    com.koushikdutta.async.DataEmitterReader mReader -> mReader
    int mStage -> mStage
    com.koushikdutta.async.callback.DataCallback mStage0 -> mStage0
    com.koushikdutta.async.callback.DataCallback mStage1 -> mStage1
    com.koushikdutta.async.callback.DataCallback mStage2 -> mStage2
    com.koushikdutta.async.callback.DataCallback mStage3 -> mStage3
    com.koushikdutta.async.callback.DataCallback mStage4 -> mStage4
    void <init>(com.koushikdutta.async.DataEmitter) -> <init>
    void setMasking(boolean) -> setMasking
    void setDeflate(boolean) -> setDeflate
    byte[] frame(byte[]) -> frame
    byte[] frame(byte[],int,int) -> frame
    byte[] frame(java.lang.String) -> frame
    byte[] pingFrame(java.lang.String) -> pingFrame
    long byteArrayToLong(byte[],int,int) -> byteArrayToLong
    void close(int,java.lang.String) -> close
    byte[] decode(java.lang.String) -> decode
    void emitFrame() -> emitFrame
    java.lang.String encode(byte[]) -> encode
    byte[] frame(int,byte[],int) -> frame
    byte[] frame(int,java.lang.String,int) -> frame
    byte[] frame(int,byte[],int,int,int) -> frame
    int getInteger(byte[]) -> getInteger
    byte[] inflate(byte[]) -> inflate
    byte[] mask(byte[],byte[],int) -> mask
    void onDisconnect(int,java.lang.String) -> onDisconnect
    void onMessage(byte[]) -> onMessage
    void onMessage(java.lang.String) -> onMessage
    void onPing(java.lang.String) -> onPing
    void onPong(java.lang.String) -> onPong
    void parse() -> parse
    void parseExtendedLength(byte[]) -> parseExtendedLength
    void parseLength(byte) -> parseLength
    void parseOpcode(byte) -> parseOpcode
    void report(java.lang.Exception) -> report
    void reset() -> reset
    void sendFrame(byte[]) -> sendFrame
    byte[] slice(byte[],int) -> slice
    void <clinit>() -> <clinit>
    int -get0(com.koushikdutta.async.http.HybiParser) -> -get0
    int -get1(com.koushikdutta.async.http.HybiParser) -> -get1
    byte[] -get2(com.koushikdutta.async.http.HybiParser) -> -get2
    byte[] -get3(com.koushikdutta.async.http.HybiParser) -> -get3
    byte[] -set0(com.koushikdutta.async.http.HybiParser,byte[]) -> -set0
    byte[] -set1(com.koushikdutta.async.http.HybiParser,byte[]) -> -set1
    int -set2(com.koushikdutta.async.http.HybiParser,int) -> -set2
    void -wrap0(com.koushikdutta.async.http.HybiParser) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.HybiParser,byte[]) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.HybiParser,byte) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.HybiParser,byte) -> -wrap3
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    int mAlpha -> mAlpha
    android.graphics.Path mArrow -> mArrow
    int mArrowHeight -> mArrowHeight
    android.graphics.Paint mArrowPaint -> mArrowPaint
    float mArrowScale -> mArrowScale
    int mArrowWidth -> mArrowWidth
    int mBackgroundColor -> mBackgroundColor
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mColorIndex -> mColorIndex
    int[] mColors -> mColors
    int mCurrentColor -> mCurrentColor
    float mEndTrim -> mEndTrim
    android.graphics.Paint mPaint -> mPaint
    double mRingCenterRadius -> mRingCenterRadius
    float mRotation -> mRotation
    boolean mShowArrow -> mShowArrow
    float mStartTrim -> mStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    float mStartingStartTrim -> mStartingStartTrim
    float mStrokeInset -> mStrokeInset
    float mStrokeWidth -> mStrokeWidth
    android.graphics.RectF mTempBounds -> mTempBounds
    void <init>(android.graphics.drawable.Drawable$Callback) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    int getAlpha() -> getAlpha
    double getCenterRadius() -> getCenterRadius
    float getEndTrim() -> getEndTrim
    float getInsets() -> getInsets
    int getNextColor() -> getNextColor
    int getNextColorIndex() -> getNextColorIndex
    float getRotation() -> getRotation
    float getStartTrim() -> getStartTrim
    int getStartingColor() -> getStartingColor
    float getStartingEndTrim() -> getStartingEndTrim
    float getStartingRotation() -> getStartingRotation
    float getStartingStartTrim() -> getStartingStartTrim
    float getStrokeWidth() -> getStrokeWidth
    void goToNextColor() -> goToNextColor
    void invalidateSelf() -> invalidateSelf
    void resetOriginals() -> resetOriginals
    void setAlpha(int) -> setAlpha
    void setArrowDimensions(float,float) -> setArrowDimensions
    void setArrowScale(float) -> setArrowScale
    void setBackgroundColor(int) -> setBackgroundColor
    void setCenterRadius(double) -> setCenterRadius
    void setColor(int) -> setColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorIndex(int) -> setColorIndex
    void setColors(int[]) -> setColors
    void setEndTrim(float) -> setEndTrim
    void setInsets(int,int) -> setInsets
    void setRotation(float) -> setRotation
    void setShowArrow(boolean) -> setShowArrow
    void setStartTrim(float) -> setStartTrim
    void setStrokeWidth(float) -> setStrokeWidth
    void storeOriginals() -> storeOriginals
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.koushikdutta.async.DataTrackingEmitter$DataTracker -> com.koushikdutta.async.DataTrackingEmitter$DataTracker:
    void onData(int) -> onData
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    java.util.List mActionExtrasList -> mActionExtrasList
    android.os.Bundle mExtras -> mExtras
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String) -> <init>
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    void <init>(java.lang.String,int) -> <init>
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    void <init>() -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationFailed() -> onAuthenticationFailed
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
android.support.v4.media.session.MediaSessionCompatApi19 -> android.support.v4.media.session.MediaSessionCompatApi19:
    long ACTION_SET_RATING -> ACTION_SET_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    void <init>() -> <init>
    void addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> addNewMetadata
    java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createMetadataUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void setMetadata(java.lang.Object,android.os.Bundle,long) -> setMetadata
    void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object) -> setOnMetadataUpdateListener
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    int STATE_FALSE -> STATE_FALSE
    int STATE_TRUE -> STATE_TRUE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    void <init>() -> <init>
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    void <clinit>() -> <clinit>
    int -wrap0(int) -> -wrap0
    int -wrap1(int) -> -wrap1
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    void <init>() -> <init>
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    boolean isLaidOut(android.view.View) -> isLaidOut
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
com.koushikdutta.async.http.server.StreamSkipException -> com.koushikdutta.async.http.server.StreamSkipException:
    void <init>(java.lang.String) -> <init>
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_UNSET -> TRANSIT_UNSET
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    int commit() -> commit
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    android.os.Bundle mExtras -> mExtras
    int mIcon -> mIcon
    android.app.PendingIntent mIntent -> mIntent
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    java.lang.CharSequence mTitle -> mTitle
    void <init>(android.support.v4.app.NotificationCompat$Action) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> <init>
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action build() -> build
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.os.Bundle getExtras() -> getExtras
android.support.v13.app.FragmentCompat$FragmentCompatImpl -> android.support.v13.app.FragmentCompat$FragmentCompatImpl:
    void requestPermissions(android.app.Fragment,java.lang.String[],int) -> requestPermissions
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
    boolean shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String) -> shouldShowRequestPermissionRationale
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void <init>() -> <init>
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.DragSortListView$DragSortTracker:
    java.lang.StringBuilder mBuilder -> mBuilder
    java.io.File mFile -> mFile
    int mNumFlushes -> mNumFlushes
    int mNumInBuffer -> mNumInBuffer
    boolean mTracking -> mTracking
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    void appendState() -> appendState
    void flush() -> flush
    void startTracking() -> startTracking
    void stopTracking() -> stopTracking
com.koushikdutta.async.http.cache.RawHeaders$1 -> com.koushikdutta.async.http.cache.RawHeaders$1:
    void <init>() -> <init>
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse -> com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse:
    java.lang.Object scheduled -> scheduled
    com.koushikdutta.async.AsyncSocket socket -> socket
    java.lang.Runnable timeoutRunnable -> timeoutRunnable
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncHttpClient) -> <init>
    boolean cancel() -> cancel
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse) -> <init>
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    void <init>(android.content.Context) -> <init>
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    boolean isIconified(android.view.View) -> isIconified
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setIconified(android.view.View,boolean) -> setIconified
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    void <clinit>() -> <clinit>
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -get0() -> -get0
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void <init>(java.lang.String) -> <init>
    void addRoot(java.lang.String,java.io.File) -> addRoot
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    int ACTION_MASK -> ACTION_MASK
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_SCROLL -> ACTION_SCROLL
    int AXIS_BRAKE -> AXIS_BRAKE
    int AXIS_DISTANCE -> AXIS_DISTANCE
    int AXIS_GAS -> AXIS_GAS
    int AXIS_GENERIC_1 -> AXIS_GENERIC_1
    int AXIS_GENERIC_10 -> AXIS_GENERIC_10
    int AXIS_GENERIC_11 -> AXIS_GENERIC_11
    int AXIS_GENERIC_12 -> AXIS_GENERIC_12
    int AXIS_GENERIC_13 -> AXIS_GENERIC_13
    int AXIS_GENERIC_14 -> AXIS_GENERIC_14
    int AXIS_GENERIC_15 -> AXIS_GENERIC_15
    int AXIS_GENERIC_16 -> AXIS_GENERIC_16
    int AXIS_GENERIC_2 -> AXIS_GENERIC_2
    int AXIS_GENERIC_3 -> AXIS_GENERIC_3
    int AXIS_GENERIC_4 -> AXIS_GENERIC_4
    int AXIS_GENERIC_5 -> AXIS_GENERIC_5
    int AXIS_GENERIC_6 -> AXIS_GENERIC_6
    int AXIS_GENERIC_7 -> AXIS_GENERIC_7
    int AXIS_GENERIC_8 -> AXIS_GENERIC_8
    int AXIS_GENERIC_9 -> AXIS_GENERIC_9
    int AXIS_HAT_X -> AXIS_HAT_X
    int AXIS_HAT_Y -> AXIS_HAT_Y
    int AXIS_HSCROLL -> AXIS_HSCROLL
    int AXIS_LTRIGGER -> AXIS_LTRIGGER
    int AXIS_ORIENTATION -> AXIS_ORIENTATION
    int AXIS_PRESSURE -> AXIS_PRESSURE
    int AXIS_RTRIGGER -> AXIS_RTRIGGER
    int AXIS_RUDDER -> AXIS_RUDDER
    int AXIS_RX -> AXIS_RX
    int AXIS_RY -> AXIS_RY
    int AXIS_RZ -> AXIS_RZ
    int AXIS_SIZE -> AXIS_SIZE
    int AXIS_THROTTLE -> AXIS_THROTTLE
    int AXIS_TILT -> AXIS_TILT
    int AXIS_TOOL_MAJOR -> AXIS_TOOL_MAJOR
    int AXIS_TOOL_MINOR -> AXIS_TOOL_MINOR
    int AXIS_TOUCH_MAJOR -> AXIS_TOUCH_MAJOR
    int AXIS_TOUCH_MINOR -> AXIS_TOUCH_MINOR
    int AXIS_VSCROLL -> AXIS_VSCROLL
    int AXIS_WHEEL -> AXIS_WHEEL
    int AXIS_X -> AXIS_X
    int AXIS_Y -> AXIS_Y
    int AXIS_Z -> AXIS_Z
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    int getSource(android.view.MotionEvent) -> getSource
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    void <clinit>() -> <clinit>
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    void <init>() -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    void <init>() -> <init>
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
net.margaritov.preference.colorpicker.ColorPickerDialog -> net.margaritov.preference.colorpicker.ColorPickerDialog:
    net.margaritov.preference.colorpicker.ColorPickerView mColorPicker -> mColorPicker
    android.widget.Button mDefaultColor -> mDefaultColor
    android.widget.EditText mHex -> mHex
    net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener -> mListener
    net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor -> mNewColor
    net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor -> mOldColor
    android.widget.Button mSetButton -> mSetButton
    void <init>(android.content.Context,int) -> <init>
    void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener) -> setOnColorChangedListener
    void setAlphaSliderVisible(boolean) -> setAlphaSliderVisible
    void setUp(int) -> setUp
    int getColor() -> getColor
    void init(int) -> init
    void onClick(android.view.View) -> onClick
    void onColorChanged(int) -> onColorChanged
    net.margaritov.preference.colorpicker.ColorPickerView -get0(net.margaritov.preference.colorpicker.ColorPickerDialog) -> -get0
    android.widget.EditText -get1(net.margaritov.preference.colorpicker.ColorPickerDialog) -> -get1
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void <init>() -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.AsyncServer$12 -> com.koushikdutta.async.AsyncServer$12:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.AsyncDatagramSocket val$handler -> val$handler
    java.nio.channels.DatagramChannel val$socket -> val$socket
    java.net.SocketAddress val$remote -> val$remote
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.AsyncDatagramSocket,java.nio.channels.DatagramChannel,java.net.SocketAddress) -> <init>
    void run() -> run
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    void <init>() -> <init>
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    void <init>() -> <init>
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean hasTransientState(android.view.View) -> hasTransientState
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
com.koushikdutta.async.PushParser -> com.koushikdutta.async.PushParser:
    java.util.ArrayList args -> args
    com.koushikdutta.async.PushParser$Waiter byteArgWaiter -> byteArgWaiter
    com.koushikdutta.async.PushParser$ParseCallback byteArrayArgCallback -> byteArrayArgCallback
    com.koushikdutta.async.PushParser$ParseCallback byteBufferListArgCallback -> byteBufferListArgCallback
    com.koushikdutta.async.PushParser$Waiter intArgWaiter -> intArgWaiter
    com.koushikdutta.async.PushParser$Waiter longArgWaiter -> longArgWaiter
    com.koushikdutta.async.DataEmitter mEmitter -> mEmitter
    java.util.Hashtable mTable -> mTable
    java.util.LinkedList mWaiting -> mWaiting
    com.koushikdutta.async.PushParser$Waiter noopArgWaiter -> noopArgWaiter
    java.nio.ByteOrder order -> order
    com.koushikdutta.async.ByteBufferList pending -> pending
    com.koushikdutta.async.PushParser$Waiter shortArgWaiter -> shortArgWaiter
    com.koushikdutta.async.PushParser$ParseCallback stringArgCallback -> stringArgCallback
    void <init>(com.koushikdutta.async.DataEmitter) -> <init>
    java.lang.reflect.Method getTap(com.koushikdutta.async.TapCallback) -> getTap
    com.koushikdutta.async.PushParser noop() -> noop
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    com.koushikdutta.async.PushParser readByte() -> readByte
    com.koushikdutta.async.PushParser readByteArray(int) -> readByteArray
    com.koushikdutta.async.PushParser readByteArray(int,com.koushikdutta.async.PushParser$ParseCallback) -> readByteArray
    com.koushikdutta.async.PushParser readByteBufferList(int) -> readByteBufferList
    com.koushikdutta.async.PushParser readByteBufferList(int,com.koushikdutta.async.PushParser$ParseCallback) -> readByteBufferList
    com.koushikdutta.async.PushParser readInt() -> readInt
    com.koushikdutta.async.PushParser readInt(com.koushikdutta.async.PushParser$ParseCallback) -> readInt
    com.koushikdutta.async.PushParser readLenByteArray() -> readLenByteArray
    com.koushikdutta.async.PushParser readLenByteBufferList() -> readLenByteBufferList
    com.koushikdutta.async.PushParser readLenByteBufferList(com.koushikdutta.async.PushParser$ParseCallback) -> readLenByteBufferList
    com.koushikdutta.async.PushParser readLong() -> readLong
    com.koushikdutta.async.PushParser readShort() -> readShort
    com.koushikdutta.async.PushParser readString() -> readString
    com.koushikdutta.async.PushParser setOrder(java.nio.ByteOrder) -> setOrder
    void tap(com.koushikdutta.async.TapCallback) -> tap
    com.koushikdutta.async.PushParser until(byte,com.koushikdutta.async.callback.DataCallback) -> until
    void <clinit>() -> <clinit>
    java.util.ArrayList -get0(com.koushikdutta.async.PushParser) -> -get0
com.koushikdutta.async.http.server.AsyncHttpServer$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$1:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    void onAccepted(com.koushikdutta.async.AsyncSocket) -> onAccepted
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
    void onListening(com.koushikdutta.async.AsyncServerSocket) -> onListening
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    int START -> START
    int END -> END
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void <init>() -> <init>
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    void <clinit>() -> <clinit>
com.aokp.romcontrol.R -> com.aokp.romcontrol.R:
    void <init>() -> <init>
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    void <init>() -> <init>
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
com.koushikdutta.async.http.WebSocketImpl$1 -> com.koushikdutta.async.http.WebSocketImpl$1:
    com.koushikdutta.async.http.WebSocketImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.WebSocketImpl,com.koushikdutta.async.DataEmitter) -> <init>
    void onDisconnect(int,java.lang.String) -> onDisconnect
    void onMessage(byte[]) -> onMessage
    void onMessage(java.lang.String) -> onMessage
    void onPing(java.lang.String) -> onPing
    void onPong(java.lang.String) -> onPong
    void report(java.lang.Exception) -> report
    void sendFrame(byte[]) -> sendFrame
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.koushikdutta.async.AsyncServer$7 -> com.koushikdutta.async.AsyncServer$7:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    java.net.InetSocketAddress val$remote -> val$remote
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.callback.ConnectCallback,com.koushikdutta.async.future.SimpleFuture,java.net.InetSocketAddress) -> <init>
    void onCompleted(java.lang.Exception,java.net.InetAddress) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    int[] mFrom -> mFrom
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    int mStringConversionColumn -> mStringConversionColumn
    int[] mTo -> mTo
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    int getStringConversionColumn() -> getStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    void setStringConversionColumn(int) -> setStringConversionColumn
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
com.koushikdutta.async.util.HashList -> com.koushikdutta.async.util.HashList:
    java.util.Hashtable internal -> internal
    void <init>() -> <init>
    java.util.ArrayList get(java.lang.String) -> get
    void add(java.lang.String,java.lang.Object) -> add
    boolean contains(java.lang.String) -> contains
    java.util.Set keySet() -> keySet
    java.lang.Object pop(java.lang.String) -> pop
    java.util.ArrayList remove(java.lang.String) -> remove
    boolean removeItem(java.lang.String,java.lang.Object) -> removeItem
    int size() -> size
    java.lang.Object tag(java.lang.String) -> tag
    void tag(java.lang.String,java.lang.Object) -> tag
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    int getSource(android.view.MotionEvent) -> getSource
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
com.koushikdutta.ion.builder.ImageViewBuilder -> com.koushikdutta.ion.builder.ImageViewBuilder:
    com.koushikdutta.ion.builder.ImageViewBuilder animateGif(com.koushikdutta.ion.builder.AnimateGifMode) -> animateGif
    com.koushikdutta.ion.builder.ImageViewBuilder animateIn(android.view.animation.Animation) -> animateIn
    com.koushikdutta.ion.builder.ImageViewBuilder animateIn(int) -> animateIn
    com.koushikdutta.ion.builder.ImageViewBuilder animateLoad(android.view.animation.Animation) -> animateLoad
    com.koushikdutta.ion.builder.ImageViewBuilder animateLoad(int) -> animateLoad
    com.koushikdutta.ion.builder.ImageViewBuilder bitmapDrawableFactory(com.koushikdutta.ion.BitmapDrawableFactory) -> bitmapDrawableFactory
    com.koushikdutta.ion.builder.ImageViewBuilder crossfade(boolean) -> crossfade
    com.koushikdutta.ion.builder.ImageViewBuilder deepZoom() -> deepZoom
    com.koushikdutta.ion.builder.ImageViewBuilder error(android.graphics.drawable.Drawable) -> error
    com.koushikdutta.ion.builder.ImageViewBuilder error(int) -> error
    com.koushikdutta.ion.builder.ImageViewBuilder fadeIn(boolean) -> fadeIn
    com.koushikdutta.ion.builder.ImageViewBuilder placeholder(android.graphics.drawable.Drawable) -> placeholder
    com.koushikdutta.ion.builder.ImageViewBuilder placeholder(int) -> placeholder
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    void <init>() -> <init>
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
com.koushikdutta.async.dns.Dns -> com.koushikdutta.async.dns.Dns:
    com.koushikdutta.async.future.Future lookup(com.koushikdutta.async.AsyncServer,java.lang.String,boolean,com.koushikdutta.async.future.FutureCallback) -> lookup
    void <init>() -> <init>
    void addName(java.nio.ByteBuffer,java.lang.String) -> addName
    com.koushikdutta.async.future.Future lookup(java.lang.String) -> lookup
    com.koushikdutta.async.future.Future lookup(com.koushikdutta.async.AsyncServer,java.lang.String) -> lookup
    com.koushikdutta.async.future.Cancellable multicastLookup(java.lang.String,com.koushikdutta.async.future.FutureCallback) -> multicastLookup
    com.koushikdutta.async.future.Cancellable multicastLookup(com.koushikdutta.async.AsyncServer,java.lang.String,com.koushikdutta.async.future.FutureCallback) -> multicastLookup
    int setFlag(int,int,int) -> setFlag
    int setQuery(int) -> setQuery
    int setRecursion(int) -> setRecursion
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.AsyncHttpClient$9$1 -> com.koushikdutta.async.http.AsyncHttpClient$9$1:
    com.koushikdutta.async.http.AsyncHttpClient$9 this$1 -> this$1
    com.koushikdutta.async.http.AsyncHttpClient$FileCallback val$callback -> val$callback
    com.koushikdutta.async.http.AsyncHttpResponse val$response -> val$response
    long val$contentLength -> val$contentLength
    void <init>(com.koushikdutta.async.http.AsyncHttpClient$9,java.io.OutputStream,com.koushikdutta.async.http.AsyncHttpClient$FileCallback,com.koushikdutta.async.http.AsyncHttpResponse,long) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.google.gson.annotations.package-info -> com.google.gson.annotations.package-info:
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject mCryptoObject -> mCryptoObject
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> <init>
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject getCryptoObject() -> getCryptoObject
android.support.v4.view.ViewGroupCompatLollipop -> android.support.v4.view.ViewGroupCompatLollipop:
    void <init>() -> <init>
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String TAG -> TAG
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    java.lang.CharSequence[] mChoices -> mChoices
    android.os.Bundle mExtras -> mExtras
    java.lang.CharSequence mLabel -> mLabel
    java.lang.String mResultKey -> mResultKey
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> <init>
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    java.lang.CharSequence[] getChoices() -> getChoices
    android.os.Bundle getExtras() -> getExtras
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.String getResultKey() -> getResultKey
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void <clinit>() -> <clinit>
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    void <init>() -> <init>
    int getSideChannelBindFlags() -> getSideChannelBindFlags
com.koushikdutta.async.http.AsyncHttpClient$RequestCallbackBase -> com.koushikdutta.async.http.AsyncHttpClient$RequestCallbackBase:
    void <init>() -> <init>
    void onConnect(com.koushikdutta.async.http.AsyncHttpResponse) -> onConnect
    void onProgress(com.koushikdutta.async.http.AsyncHttpResponse,long,long) -> onProgress
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    void changeCursor(android.database.Cursor) -> changeCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor getCursor() -> getCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    void getOutline(android.graphics.Outline) -> getOutline
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    boolean hasMipMap() -> hasMipMap
    void setMipMap(boolean) -> setMipMap
android.support.v4.view.animation.PathInterpolatorCompatApi21 -> android.support.v4.view.animation.PathInterpolatorCompatApi21:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    void <init>(java.lang.String,int) -> <init>
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    int[] -com_google_gson_stream_JsonTokenSwitchesValues -> -com_google_gson_stream_JsonTokenSwitchesValues
    void <init>(com.google.gson.Gson) -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
    int[] -getcom_google_gson_stream_JsonTokenSwitchesValues() -> -getcom_google_gson_stream_JsonTokenSwitchesValues
    void <init>(com.google.gson.Gson,com.google.gson.internal.bind.ObjectTypeAdapter) -> <init>
android.support.annotation.MainThread -> android.support.annotation.MainThread:
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    void <init>() -> <init>
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    void <init>() -> <init>
    boolean defaultIsRtl() -> defaultIsRtl
    void <clinit>() -> <clinit>
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void <init>(android.support.v4.app.ListFragment) -> <init>
    void run() -> run
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Bundle mState -> mState
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
com.koushikdutta.ion.builder.LoadImageViewFutureBuilder -> com.koushikdutta.ion.builder.LoadImageViewFutureBuilder:
    com.koushikdutta.ion.future.ImageViewFuture load(java.lang.String) -> load
    com.koushikdutta.async.future.Future load(java.lang.String,java.lang.String) -> load
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.aokp.romcontrol.R$styleable -> com.aokp.romcontrol.R$styleable:
    int[] MultiChoiceSetting -> MultiChoiceSetting
    int[] CheckboxSetting -> CheckboxSetting
    int CheckboxSetting_descriptionOn -> CheckboxSetting_descriptionOn
    int CheckboxSetting_descriptionOff -> CheckboxSetting_descriptionOff
    int[] PagerSlidingTabStrip -> PagerSlidingTabStrip
    int PagerSlidingTabStrip_indicatorColor -> PagerSlidingTabStrip_indicatorColor
    int PagerSlidingTabStrip_underlineColor -> PagerSlidingTabStrip_underlineColor
    int PagerSlidingTabStrip_dividerColor -> PagerSlidingTabStrip_dividerColor
    int PagerSlidingTabStrip_indicatorHeight -> PagerSlidingTabStrip_indicatorHeight
    int PagerSlidingTabStrip_underlineHeight -> PagerSlidingTabStrip_underlineHeight
    int PagerSlidingTabStrip_dividerPadding -> PagerSlidingTabStrip_dividerPadding
    int PagerSlidingTabStrip_tabPaddingLeftRight -> PagerSlidingTabStrip_tabPaddingLeftRight
    int PagerSlidingTabStrip_tabBackground -> PagerSlidingTabStrip_tabBackground
    int PagerSlidingTabStrip_shouldExpand -> PagerSlidingTabStrip_shouldExpand
    int PagerSlidingTabStrip_scrollOffset -> PagerSlidingTabStrip_scrollOffset
    int PagerSlidingTabStrip_textAllCaps -> PagerSlidingTabStrip_textAllCaps
    int[] DeveloperPreference -> DeveloperPreference
    int DeveloperPreference_nameDev -> DeveloperPreference_nameDev
    int DeveloperPreference_twitterHandle -> DeveloperPreference_twitterHandle
    int DeveloperPreference_donateLink -> DeveloperPreference_donateLink
    int DeveloperPreference_githubLink -> DeveloperPreference_githubLink
    int DeveloperPreference_emailDev -> DeveloperPreference_emailDev
    int[] ColorPickerSetting -> ColorPickerSetting
    int ColorPickerSetting_colorPickerDefaultValue -> ColorPickerSetting_colorPickerDefaultValue
    int ColorPickerSetting_colorPickerShowAlphaSlider -> ColorPickerSetting_colorPickerShowAlphaSlider
    int[] DragSortListView -> DragSortListView
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int MultiChoiceSetting_maxSelectionCount -> MultiChoiceSetting_maxSelectionCount
    int MultiChoiceSetting_minSelectionCount -> MultiChoiceSetting_minSelectionCount
    int[] UrlSetting -> UrlSetting
    int UrlSetting_url -> UrlSetting_url
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.koushikdutta.ion.ResponseServedFrom -> com.koushikdutta.ion.ResponseServedFrom:
    com.koushikdutta.ion.ResponseServedFrom LOADED_FROM_CACHE -> LOADED_FROM_CACHE
    com.koushikdutta.ion.ResponseServedFrom LOADED_FROM_NETWORK -> LOADED_FROM_NETWORK
    com.koushikdutta.ion.ResponseServedFrom LOADED_FROM_CONDITIONAL_CACHE -> LOADED_FROM_CONDITIONAL_CACHE
    com.koushikdutta.ion.ResponseServedFrom LOADED_FROM_MEMORY -> LOADED_FROM_MEMORY
    com.koushikdutta.ion.ResponseServedFrom[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    com.koushikdutta.ion.ResponseServedFrom valueOf(java.lang.String) -> valueOf
    com.koushikdutta.ion.ResponseServedFrom[] values() -> values
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    void <init>(java.lang.Object) -> <init>
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
    java.lang.Object -get0(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> -get0
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    void <init>(java.lang.Object) -> <init>
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    boolean performAction(int,int,android.os.Bundle) -> performAction
    void <clinit>() -> <clinit>
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    void <init>() -> <init>
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    void <clinit>() -> <clinit>
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
    void <clinit>() -> <clinit>
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
com.koushikdutta.async.http.socketio.transport.WebSocketTransport -> com.koushikdutta.async.http.socketio.transport.WebSocketTransport:
    java.lang.String sessionId -> sessionId
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback stringCallback -> stringCallback
    com.koushikdutta.async.http.WebSocket webSocket -> webSocket
    void <init>(com.koushikdutta.async.http.WebSocket,java.lang.String) -> <init>
    void setStringCallback(com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback) -> setStringCallback
    void disconnect() -> disconnect
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    java.lang.String getSessionId() -> getSessionId
    boolean heartbeats() -> heartbeats
    boolean isConnected() -> isConnected
    void send(java.lang.String) -> send
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.FragmentTabHost$TabInfo:
    android.os.Bundle args -> args
    java.lang.Class clss -> clss
    android.app.Fragment fragment -> fragment
    java.lang.String tag -> tag
    void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
    android.os.Bundle -get0(android.support.v13.app.FragmentTabHost$TabInfo) -> -get0
    java.lang.Class -get1(android.support.v13.app.FragmentTabHost$TabInfo) -> -get1
    android.app.Fragment -get2(android.support.v13.app.FragmentTabHost$TabInfo) -> -get2
    java.lang.String -get3(android.support.v13.app.FragmentTabHost$TabInfo) -> -get3
    android.app.Fragment -set0(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> -set0
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String MONTH -> MONTH
    java.lang.String SECOND -> SECOND
    java.lang.String YEAR -> YEAR
    void <init>() -> <init>
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    void <init>() -> <init>
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.koushikdutta.async.http.body.MultipartFormDataBody$2 -> com.koushikdutta.async.http.body.MultipartFormDataBody$2:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.koushikdutta.async.PushParser$3 -> com.koushikdutta.async.PushParser$3:
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void <init>(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$PagerObserver) -> <init>
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
    void <init>() -> <init>
net.margaritov.preference.colorpicker.ColorPickerDialog$2 -> net.margaritov.preference.colorpicker.ColorPickerDialog$2:
    net.margaritov.preference.colorpicker.ColorPickerDialog this$0 -> this$0
    void <init>(net.margaritov.preference.colorpicker.ColorPickerDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
    void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
com.koushikdutta.ion.InputStreamParser$1 -> com.koushikdutta.ion.InputStreamParser$1:
    com.koushikdutta.ion.InputStreamParser this$0 -> this$0
    void <init>(com.koushikdutta.ion.InputStreamParser) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
com.koushikdutta.async.AsyncServer$RunnableWrapper -> com.koushikdutta.async.AsyncServer$RunnableWrapper:
    android.os.Handler handler -> handler
    boolean hasRun -> hasRun
    java.lang.Runnable runnable -> runnable
    com.koushikdutta.async.ThreadQueue threadQueue -> threadQueue
    void <init>() -> <init>
    void run() -> run
    void <init>(com.koushikdutta.async.AsyncServer$RunnableWrapper) -> <init>
com.koushikdutta.async.http.filter.ChunkedInputFilter$State -> com.koushikdutta.async.http.filter.ChunkedInputFilter$State:
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State[] $VALUES -> $VALUES
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK -> CHUNK
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK_CR -> CHUNK_CR
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK_CRLF -> CHUNK_CRLF
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK_LEN -> CHUNK_LEN
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK_LEN_CR -> CHUNK_LEN_CR
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State CHUNK_LEN_CRLF -> CHUNK_LEN_CRLF
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State COMPLETE -> COMPLETE
    void <init>(java.lang.String,int) -> <init>
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State valueOf(java.lang.String) -> valueOf
    com.koushikdutta.async.http.filter.ChunkedInputFilter$State[] values() -> values
    void <clinit>() -> <clinit>
com.koushikdutta.ion.ProgressCallback -> com.koushikdutta.ion.ProgressCallback:
    void onProgress(long,long) -> onProgress
com.koushikdutta.ion.LoadDeepZoom$1 -> com.koushikdutta.ion.LoadDeepZoom$1:
    com.koushikdutta.ion.LoadDeepZoom this$0 -> this$0
    java.io.File val$tempFile -> val$tempFile
    com.koushikdutta.ion.Response val$response -> val$response
    void <init>(com.koushikdutta.ion.LoadDeepZoom,java.io.File,com.koushikdutta.ion.Response) -> <init>
    void run() -> run
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.graphics.Bitmap mBitmap -> mBitmap
    android.os.AsyncTask mLoadBitmap -> mLoadBitmap
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    java.lang.String val$jobName -> val$jobName
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.net.Uri val$imageFile -> val$imageFile
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void <init>(android.support.v4.print.PrintHelperKitkat,java.lang.String,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback,int,android.net.Uri) -> <init>
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void -wrap0(android.support.v4.print.PrintHelperKitkat$2) -> -wrap0
com.koushikdutta.async.http.body.MultipartFormDataBody$3 -> com.koushikdutta.async.http.body.MultipartFormDataBody$3:
    com.koushikdutta.async.http.body.MultipartFormDataBody this$0 -> this$0
    com.koushikdutta.async.http.body.Part val$part -> val$part
    com.koushikdutta.async.DataSink val$sink -> val$sink
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody,com.koushikdutta.async.http.body.Part,com.koushikdutta.async.DataSink) -> <init>
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
com.aokp.romcontrol.settings.SwitchSetting -> com.aokp.romcontrol.settings.SwitchSetting:
    java.lang.String aDescriptionOff -> aDescriptionOff
    java.lang.String aDescriptionOn -> aDescriptionOn
    java.lang.Boolean mChecked -> mChecked
    android.widget.Switch mSwitch -> mSwitch
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isChecked() -> isChecked
    void onClick(android.view.View) -> onClick
    void setChecked(boolean) -> setChecked
    void updateSummary() -> updateSummary
com.koushikdutta.async.DatagramChannelWrapper -> com.koushikdutta.async.DatagramChannelWrapper:
    java.net.InetSocketAddress address -> address
    java.nio.channels.DatagramChannel mChannel -> mChannel
    void <init>(java.nio.channels.DatagramChannel) -> <init>
    void disconnect() -> disconnect
    int getLocalPort() -> getLocalPort
    java.net.InetSocketAddress getRemoteAddress() -> getRemoteAddress
    java.lang.Object getSocket() -> getSocket
    boolean isChunked() -> isChunked
    boolean isConnected() -> isConnected
    int read(java.nio.ByteBuffer) -> read
    long read(java.nio.ByteBuffer[]) -> read
    long read(java.nio.ByteBuffer[],int,int) -> read
    java.nio.channels.SelectionKey register(java.nio.channels.Selector) -> register
    java.nio.channels.SelectionKey register(java.nio.channels.Selector,int) -> register
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    int write(java.nio.ByteBuffer) -> write
    int write(java.nio.ByteBuffer[]) -> write
com.aokp.romcontrol.util.ChildProcess$ChildReader -> com.aokp.romcontrol.util.ChildProcess$ChildReader:
    java.lang.StringBuffer mBuffer -> mBuffer
    java.io.InputStream mStream -> mStream
    com.aokp.romcontrol.util.ChildProcess this$0 -> this$0
    void <init>(com.aokp.romcontrol.util.ChildProcess,java.io.InputStream,java.lang.StringBuffer) -> <init>
    void run() -> run
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String mAction -> mAction
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Bundle mExtras -> mExtras
    int mIcon -> mIcon
    java.lang.CharSequence mName -> mName
    java.lang.String getAction() -> getAction
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    java.lang.Object getCustomAction() -> getCustomAction
    android.os.Bundle getExtras() -> getExtras
    int getIcon() -> getIcon
    java.lang.CharSequence getName() -> getName
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle,android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> <init>
com.aokp.romcontrol.R$plurals -> com.aokp.romcontrol.R$plurals:
    int multichoice_at_most -> multichoice_at_most
    int multichoice_at_least -> multichoice_at_least
    int backlight_timeout_time -> backlight_timeout_time
    void <init>() -> <init>
com.koushikdutta.async.future.SimpleCancellable -> com.koushikdutta.async.future.SimpleCancellable:
    com.koushikdutta.async.future.Cancellable COMPLETED -> COMPLETED
    boolean cancelled -> cancelled
    boolean complete -> complete
    com.koushikdutta.async.future.Cancellable parent -> parent
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    boolean setComplete() -> setComplete
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    com.koushikdutta.async.future.SimpleCancellable setParent(com.koushikdutta.async.future.Cancellable) -> setParent
    void cancelCleanup() -> cancelCleanup
    boolean cancel() -> cancel
    void cleanup() -> cleanup
    void completeCleanup() -> completeCleanup
    com.koushikdutta.async.future.Cancellable reset() -> reset
    void <clinit>() -> <clinit>
    com.koushikdutta.async.future.DependentCancellable setParent(com.koushikdutta.async.future.Cancellable) -> setParent
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void <init>(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> <init>
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
com.koushikdutta.async.http.spdy.Spdy3$Reader$3 -> com.koushikdutta.async.http.spdy.Spdy3$Reader$3:
    com.koushikdutta.async.http.spdy.Spdy3$Reader this$1 -> this$1
    void <init>(com.koushikdutta.async.http.spdy.Spdy3$Reader) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.aokp.romcontrol.settings.SingleChoiceSetting -> com.aokp.romcontrol.settings.SingleChoiceSetting:
    java.lang.String[] mEntries -> mEntries
    java.lang.String[] mValues -> mValues
    void onClick(android.view.View) -> onClick
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getCurrentValueIndex() -> getCurrentValueIndex
    java.lang.String[] getEntries() -> getEntries
    java.lang.String[] getEntryValues() -> getEntryValues
    void setEntries(java.lang.String[]) -> setEntries
    void setEntries(int) -> setEntries
    void setEntryValues(java.lang.String[]) -> setEntryValues
    void setEntryValues(int) -> setEntryValues
    void updateSummary() -> updateSummary
    java.lang.String[] -get0(com.aokp.romcontrol.settings.SingleChoiceSetting) -> -get0
android.support.v4.app.BaseFragmentActivityHoneycomb -> android.support.v4.app.BaseFragmentActivityHoneycomb:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
com.koushikdutta.async.Util$6 -> com.koushikdutta.async.Util$6:
    com.koushikdutta.async.callback.CompletedCallback val$wrapper -> val$wrapper
    void <init>(com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.aokp.romcontrol.R$menu -> com.aokp.romcontrol.R$menu:
    int main -> main
    int global -> global
    void <init>() -> <init>
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    void startTracking(android.view.KeyEvent) -> startTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    void <init>() -> <init>
    boolean isTracking(android.view.KeyEvent) -> isTracking
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    void <clinit>() -> <clinit>
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object mBridge -> mBridge
    void <init>() -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    java.lang.Object getBridge() -> getBridge
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    void <clinit>() -> <clinit>
android.support.v4.app.BundleCompatJellybeanMR2 -> android.support.v4.app.BundleCompatJellybeanMR2:
    void <init>() -> <init>
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.NotificationCompat$BuilderExtender:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    void <init>() -> <init>
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    void <init>() -> <init>
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator:
    long mDuration -> mDuration
    boolean mEnded -> mEnded
    float mFraction -> mFraction
    java.util.List mListeners -> mListeners
    java.lang.Runnable mLoopRunnable -> mLoopRunnable
    long mStartTime -> mStartTime
    boolean mStarted -> mStarted
    android.view.View mTarget -> mTarget
    java.util.List mUpdateListeners -> mUpdateListeners
    void <init>() -> <init>
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    void cancel() -> cancel
    void dispatchCancel() -> dispatchCancel
    void dispatchEnd() -> dispatchEnd
    void dispatchStart() -> dispatchStart
    float getAnimatedFraction() -> getAnimatedFraction
    long getTime() -> getTime
    void notifyUpdateListeners() -> notifyUpdateListeners
    void setDuration(long) -> setDuration
    void setTarget(android.view.View) -> setTarget
    void start() -> start
    long -get0(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -get0
    float -get1(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -get1
    java.lang.Runnable -get2(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -get2
    long -get3(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -get3
    float -set0(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float) -> -set0
    long -wrap0(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -wrap0
    void -wrap1(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -wrap1
    void -wrap2(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> -wrap2
com.koushikdutta.ion.bitmap.SoftReferenceHashtable -> com.koushikdutta.ion.bitmap.SoftReferenceHashtable:
    java.util.Hashtable mTable -> mTable
    void <init>() -> <init>
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.content.ContentResolverCompat -> android.support.v4.content.ContentResolverCompat:
    android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl IMPL -> IMPL
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.koushikdutta.async.future.Continuation$3 -> com.koushikdutta.async.future.Continuation$3:
    com.koushikdutta.async.future.Continuation this$0 -> this$0
    com.koushikdutta.async.future.DependentFuture val$future -> val$future
    void <init>(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.future.DependentFuture) -> <init>
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    int mEffectiveRampDown -> mEffectiveRampDown
    int mRampDownDuration -> mRampDownDuration
    int mRampUpDuration -> mRampUpDuration
    long mStartTime -> mStartTime
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    void <init>() -> <init>
    void computeScrollDelta() -> computeScrollDelta
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getHorizontalDirection() -> getHorizontalDirection
    float getValueAt(long) -> getValueAt
    int getVerticalDirection() -> getVerticalDirection
    float interpolateValue(float) -> interpolateValue
    boolean isFinished() -> isFinished
    void requestStop() -> requestStop
    void setRampDownDuration(int) -> setRampDownDuration
    void setRampUpDuration(int) -> setRampUpDuration
    void setTargetVelocity(float,float) -> setTargetVelocity
    void start() -> start
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    void <init>(android.view.WindowInsets) -> <init>
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    int getStableInsetBottom() -> getStableInsetBottom
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetTop() -> getStableInsetTop
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    boolean hasInsets() -> hasInsets
    boolean hasStableInsets() -> hasStableInsets
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl:
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.os.CancellationSignal mCancellationSignal -> mCancellationSignal
    android.database.Cursor mCursor -> mCursor
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.net.Uri mUri -> mUri
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    void cancelLoadInBackground() -> cancelLoadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String[] getProjection() -> getProjection
    java.lang.String getSelection() -> getSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    android.net.Uri getUri() -> getUri
    android.database.Cursor loadInBackground() -> loadInBackground
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void setProjection(java.lang.String[]) -> setProjection
    void setSelection(java.lang.String) -> setSelection
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    void setSortOrder(java.lang.String) -> setSortOrder
    void setUri(android.net.Uri) -> setUri
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
    java.lang.Object loadInBackground() -> loadInBackground
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$3 -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$3:
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener this$0 -> this$0
    int val$originalHeight -> val$originalHeight
    void <init>(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,int) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.koushikdutta.async.http.HttpTransportMiddleware -> com.koushikdutta.async.http.HttpTransportMiddleware:
    boolean exchangeHeaders(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> exchangeHeaders
    void <init>() -> <init>
    void onRequestSent(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData) -> onRequestSent
com.koushikdutta.async.http.Protocol -> com.koushikdutta.async.http.Protocol:
    com.koushikdutta.async.http.Protocol SPDY_3 -> SPDY_3
    com.koushikdutta.async.http.Protocol HTTP_2 -> HTTP_2
    com.koushikdutta.async.http.Protocol HTTP_1_1 -> HTTP_1_1
    com.koushikdutta.async.http.Protocol HTTP_1_0 -> HTTP_1_0
    java.lang.String protocol -> protocol
    java.util.Hashtable protocols -> protocols
    com.koushikdutta.async.http.Protocol[] $VALUES -> $VALUES
    com.koushikdutta.async.http.Protocol get(java.lang.String) -> get
    java.lang.String toString() -> toString
    boolean needsSpdyConnection() -> needsSpdyConnection
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    com.koushikdutta.async.http.Protocol valueOf(java.lang.String) -> valueOf
    com.koushikdutta.async.http.Protocol[] values() -> values
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,java.lang.String,com.koushikdutta.async.http.Protocol) -> <init>
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
com.koushikdutta.async.AsyncSSLSocketWrapper$1 -> com.koushikdutta.async.AsyncSSLSocketWrapper$1:
    void <init>() -> <init>
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    void <init>() -> <init>
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    android.media.AudioManager mAudioManager -> mAudioManager
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.lang.Object mDispatcherState -> mDispatcherState
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    android.view.View mView -> mView
    void <init>(android.app.Activity,android.support.v4.media.TransportPerformer) -> <init>
    void <init>(android.view.View,android.support.v4.media.TransportPerformer) -> <init>
    void <init>(android.app.Activity,android.view.View,android.support.v4.media.TransportPerformer) -> <init>
    void destroy() -> destroy
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int getBufferPercentage() -> getBufferPercentage
    long getCurrentPosition() -> getCurrentPosition
    long getDuration() -> getDuration
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    int getTransportControlFlags() -> getTransportControlFlags
    boolean isMediaKey(int) -> isMediaKey
    boolean isPlaying() -> isPlaying
    void pausePlaying() -> pausePlaying
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void seekTo(long) -> seekTo
    void startPlaying() -> startPlaying
    void stopPlaying() -> stopPlaying
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.koushikdutta.ion.loader.StreamLoader -> com.koushikdutta.ion.loader.StreamLoader:
    void <init>() -> <init>
    com.koushikdutta.ion.bitmap.BitmapInfo loadGif(java.lang.String,android.graphics.Point,java.io.InputStream,android.graphics.BitmapFactory$Options) -> loadGif
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    java.io.InputStream getInputStream(android.content.Context,java.lang.String) -> getInputStream
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.lang.Object[] mArray -> mArray
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    int[] mHashes -> mHashes
    int mSize -> mSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    void <init>() -> <init>
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    java.lang.Object keyAt(int) -> keyAt
    void <init>(int) -> <init>
    void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    void allocArrays(int) -> allocArrays
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    void ensureCapacity(int) -> ensureCapacity
    boolean equals(java.lang.Object) -> equals
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    int hashCode() -> hashCode
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfNull() -> indexOfNull
    int indexOfValue(java.lang.Object) -> indexOfValue
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    java.lang.String toString() -> toString
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    android.os.IBinder asBinder() -> asBinder
    void fastForward() -> fastForward
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    java.lang.String getTag() -> getTag
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    void next() -> next
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void previous() -> previous
    void rate(android.support.v4.media.RatingCompat) -> rate
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
com.koushikdutta.async.http.cache.RequestHeaders -> com.koushikdutta.async.http.cache.RequestHeaders:
    java.lang.String acceptEncoding -> acceptEncoding
    java.lang.String connection -> connection
    int contentLength -> contentLength
    java.lang.String contentType -> contentType
    boolean hasAuthorization -> hasAuthorization
    com.koushikdutta.async.http.cache.RawHeaders headers -> headers
    java.lang.String host -> host
    java.lang.String ifModifiedSince -> ifModifiedSince
    java.lang.String ifNoneMatch -> ifNoneMatch
    int maxAgeSeconds -> maxAgeSeconds
    int maxStaleSeconds -> maxStaleSeconds
    int minFreshSeconds -> minFreshSeconds
    boolean noCache -> noCache
    boolean onlyIfCached -> onlyIfCached
    java.lang.String proxyAuthorization -> proxyAuthorization
    java.lang.String transferEncoding -> transferEncoding
    android.net.Uri uri -> uri
    java.lang.String userAgent -> userAgent
    void <init>(android.net.Uri,com.koushikdutta.async.http.cache.RawHeaders) -> <init>
    void addCookies(java.util.Map) -> addCookies
    java.lang.String getAcceptEncoding() -> getAcceptEncoding
    java.lang.String getConnection() -> getConnection
    int getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    com.koushikdutta.async.http.cache.RawHeaders getHeaders() -> getHeaders
    java.lang.String getHost() -> getHost
    java.lang.String getIfModifiedSince() -> getIfModifiedSince
    java.lang.String getIfNoneMatch() -> getIfNoneMatch
    int getMaxAgeSeconds() -> getMaxAgeSeconds
    int getMaxStaleSeconds() -> getMaxStaleSeconds
    int getMinFreshSeconds() -> getMinFreshSeconds
    java.lang.String getProxyAuthorization() -> getProxyAuthorization
    java.lang.String getTransferEncoding() -> getTransferEncoding
    android.net.Uri getUri() -> getUri
    java.lang.String getUserAgent() -> getUserAgent
    boolean hasAuthorization() -> hasAuthorization
    boolean hasConditions() -> hasConditions
    boolean hasConnectionClose() -> hasConnectionClose
    boolean isChunked() -> isChunked
    boolean isNoCache() -> isNoCache
    boolean isOnlyIfCached() -> isOnlyIfCached
    void setAcceptEncoding(java.lang.String) -> setAcceptEncoding
    void setChunked() -> setChunked
    void setConnection(java.lang.String) -> setConnection
    void setContentLength(int) -> setContentLength
    void setContentType(java.lang.String) -> setContentType
    void setHost(java.lang.String) -> setHost
    void setIfModifiedSince(java.util.Date) -> setIfModifiedSince
    void setIfNoneMatch(java.lang.String) -> setIfNoneMatch
    void setUserAgent(java.lang.String) -> setUserAgent
    int -set0(com.koushikdutta.async.http.cache.RequestHeaders,int) -> -set0
    int -set1(com.koushikdutta.async.http.cache.RequestHeaders,int) -> -set1
    int -set2(com.koushikdutta.async.http.cache.RequestHeaders,int) -> -set2
    boolean -set3(com.koushikdutta.async.http.cache.RequestHeaders,boolean) -> -set3
    boolean -set4(com.koushikdutta.async.http.cache.RequestHeaders,boolean) -> -set4
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onAudioFocusChange(int) -> onAudioFocusChange
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    boolean onIsPlaying() -> onIsPlaying
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    int onGetBufferPercentage() -> onGetBufferPercentage
    void <init>() -> <init>
com.koushikdutta.async.callback.ContinuationCallback -> com.koushikdutta.async.callback.ContinuationCallback:
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
com.koushikdutta.async.http.spdy.BitArray$VariableCapacity -> com.koushikdutta.async.http.spdy.BitArray$VariableCapacity:
    long[] data -> data
    int start -> start
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.http.spdy.BitArray$FixedCapacity) -> <init>
    int checkInput(int) -> checkInput
    void clear() -> clear
    boolean get(int) -> get
    void growToSize(int) -> growToSize
    int offsetOf(int) -> offsetOf
    void set(int) -> set
    void shiftLeft(int) -> shiftLeft
    int shiftOf(int) -> shiftOf
    java.util.List toIntegerList() -> toIntegerList
    java.lang.String toString() -> toString
    void toggle(int) -> toggle
    void <init>(com.koushikdutta.async.http.spdy.BitArray$FixedCapacity,com.koushikdutta.async.http.spdy.BitArray$VariableCapacity) -> <init>
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    void <init>() -> <init>
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.annotation.CallSuper -> android.support.annotation.CallSuper:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    void <init>() -> <init>
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
com.koushikdutta.async.http.RequestLine -> com.koushikdutta.async.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    com.koushikdutta.async.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
com.koushikdutta.async.http.AsyncHttpHead -> com.koushikdutta.async.http.AsyncHttpHead:
    java.lang.String METHOD -> METHOD
    void <init>(android.net.Uri) -> <init>
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void <init>(android.support.v4.view.ViewPager) -> <init>
    boolean canScroll() -> canScroll
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.annotation.FloatRange -> android.support.annotation.FloatRange:
    double from() -> from
    boolean fromInclusive() -> fromInclusive
    double to() -> to
    boolean toInclusive() -> toInclusive
com.koushikdutta.ion.builder.Builders -> com.koushikdutta.ion.builder.Builders:
com.koushikdutta.async.AsyncSSLException -> com.koushikdutta.async.AsyncSSLException:
    boolean mIgnore -> mIgnore
    void <init>(java.lang.Throwable) -> <init>
    boolean getIgnore() -> getIgnore
    void setIgnore(boolean) -> setIgnore
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int mCapacityBitmask -> mCapacityBitmask
    int[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    void <init>() -> <init>
    void <init>(int) -> <init>
    void addFirst(int) -> addFirst
    void addLast(int) -> addLast
    void clear() -> clear
    void doubleCapacity() -> doubleCapacity
    int get(int) -> get
    int getFirst() -> getFirst
    int getLast() -> getLast
    boolean isEmpty() -> isEmpty
    int popFirst() -> popFirst
    int popLast() -> popLast
    void removeFromEnd(int) -> removeFromEnd
    void removeFromStart(int) -> removeFromStart
    int size() -> size
com.koushikdutta.async.http.spdy.ErrorCode -> com.koushikdutta.async.http.spdy.ErrorCode:
    com.koushikdutta.async.http.spdy.ErrorCode CANCEL -> CANCEL
    com.koushikdutta.async.http.spdy.ErrorCode COMPRESSION_ERROR -> COMPRESSION_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode CONNECT_ERROR -> CONNECT_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode ENHANCE_YOUR_CALM -> ENHANCE_YOUR_CALM
    com.koushikdutta.async.http.spdy.ErrorCode FLOW_CONTROL_ERROR -> FLOW_CONTROL_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode FRAME_TOO_LARGE -> FRAME_TOO_LARGE
    com.koushikdutta.async.http.spdy.ErrorCode INADEQUATE_SECURITY -> INADEQUATE_SECURITY
    com.koushikdutta.async.http.spdy.ErrorCode INTERNAL_ERROR -> INTERNAL_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode INVALID_CREDENTIALS -> INVALID_CREDENTIALS
    com.koushikdutta.async.http.spdy.ErrorCode INVALID_STREAM -> INVALID_STREAM
    com.koushikdutta.async.http.spdy.ErrorCode NO_ERROR -> NO_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode PROTOCOL_ERROR -> PROTOCOL_ERROR
    com.koushikdutta.async.http.spdy.ErrorCode REFUSED_STREAM -> REFUSED_STREAM
    com.koushikdutta.async.http.spdy.ErrorCode STREAM_ALREADY_CLOSED -> STREAM_ALREADY_CLOSED
    com.koushikdutta.async.http.spdy.ErrorCode STREAM_CLOSED -> STREAM_CLOSED
    com.koushikdutta.async.http.spdy.ErrorCode STREAM_IN_USE -> STREAM_IN_USE
    com.koushikdutta.async.http.spdy.ErrorCode UNSUPPORTED_VERSION -> UNSUPPORTED_VERSION
    int httpCode -> httpCode
    int spdyGoAwayCode -> spdyGoAwayCode
    int spdyRstCode -> spdyRstCode
    com.koushikdutta.async.http.spdy.ErrorCode[] $VALUES -> $VALUES
    void <init>(java.lang.String,int,int,int,int) -> <init>
    com.koushikdutta.async.http.spdy.ErrorCode fromHttp2(int) -> fromHttp2
    com.koushikdutta.async.http.spdy.ErrorCode fromSpdy3Rst(int) -> fromSpdy3Rst
    com.koushikdutta.async.http.spdy.ErrorCode fromSpdyGoAway(int) -> fromSpdyGoAway
    com.koushikdutta.async.http.spdy.ErrorCode valueOf(java.lang.String) -> valueOf
    com.koushikdutta.async.http.spdy.ErrorCode[] values() -> values
    void <clinit>() -> <clinit>
com.koushikdutta.ion.gif.GifDecoder -> com.koushikdutta.ion.gif.GifDecoder:
    int STATUS_FINISH -> STATUS_FINISH
    int MaxStackSize -> MaxStackSize
    int STATUS_FORMAT_ERROR -> STATUS_FORMAT_ERROR
    int STATUS_OPEN_ERROR -> STATUS_OPEN_ERROR
    int STATUS_PARSING -> STATUS_PARSING
    int[] act -> act
    int bgColor -> bgColor
    int bgIndex -> bgIndex
    byte[] block -> block
    int blockSize -> blockSize
    int currentFrame -> currentFrame
    int delay -> delay
    int[] dest -> dest
    int dispose -> dispose
    int[] gct -> gct
    boolean gctFlag -> gctFlag
    int gctSize -> gctSize
    byte[] gifData -> gifData
    int gifDataLength -> gifDataLength
    int gifDataOffset -> gifDataOffset
    int height -> height
    int ih -> ih
    boolean interlace -> interlace
    int iw -> iw
    int ix -> ix
    int iy -> iy
    int lastBgColor -> lastBgColor
    int lastDispose -> lastDispose
    com.koushikdutta.ion.gif.GifFrame lastFrame -> lastFrame
    int[] lct -> lct
    boolean lctFlag -> lctFlag
    int lctSize -> lctSize
    int loopCount -> loopCount
    int lrh -> lrh
    int lrw -> lrw
    int lrx -> lrx
    int lry -> lry
    int pixelAspect -> pixelAspect
    byte[] pixelStack -> pixelStack
    byte[] pixels -> pixels
    short[] prefix -> prefix
    int readBytes -> readBytes
    com.koushikdutta.ion.gif.GifFrame restoreFrame -> restoreFrame
    int status -> status
    byte[] suffix -> suffix
    int transIndex -> transIndex
    boolean transparency -> transparency
    int width -> width
    int getGifDataLength() -> getGifDataLength
    com.koushikdutta.ion.gif.GifFrame nextFrame() -> nextFrame
    com.koushikdutta.ion.gif.GifDecoder mutate() -> mutate
    com.koushikdutta.ion.gif.GifFrame getLastFrame() -> getLastFrame
    int getStatus() -> getStatus
    void restart() -> restart
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void <init>(byte[],int,int) -> <init>
    void <init>(java.nio.ByteBuffer) -> <init>
    void <init>(byte[]) -> <init>
    void decodeImageData() -> decodeImageData
    boolean err() -> err
    java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    int getLoopCount() -> getLoopCount
    boolean parseOk() -> parseOk
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int readBlock() -> readBlock
    int[] readColorTable(int) -> readColorTable
    void readGraphicControlExt() -> readGraphicControlExt
    void readHeader() -> readHeader
    com.koushikdutta.ion.gif.GifFrame readImage() -> readImage
    void readLSD() -> readLSD
    void readNetscapeExt() -> readNetscapeExt
    int readShort() -> readShort
    void resetFrame(com.koushikdutta.ion.gif.GifFrame) -> resetFrame
    android.graphics.Bitmap setPixels() -> setPixels
    void skip() -> skip
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    void <init>() -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTitleStrip) -> <init>
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void <init>(android.support.v4.view.PagerTitleStrip,android.support.v4.view.PagerTitleStrip$PageListener) -> <init>
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void <init>() -> <init>
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
android.support.v4.media.session.MediaSessionCompatApi23 -> android.support.v4.media.session.MediaSessionCompatApi23:
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> createCallback
com.koushikdutta.async.http.Multimap$StringDecoder -> com.koushikdutta.async.http.Multimap$StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
com.koushikdutta.ion.mock.MockResponseFuture -> com.koushikdutta.ion.mock.MockResponseFuture:
    com.koushikdutta.async.http.AsyncHttpRequest request -> request
    void <init>(com.koushikdutta.async.http.AsyncHttpRequest) -> <init>
    com.koushikdutta.async.future.Future withResponse() -> withResponse
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    com.koushikdutta.ion.HeadersResponse getHeadersResponse() -> getHeadersResponse
    com.koushikdutta.ion.Response getResponse(java.lang.Exception,java.lang.Object) -> getResponse
    com.koushikdutta.ion.Response -wrap0(com.koushikdutta.ion.mock.MockResponseFuture,java.lang.Exception,java.lang.Object) -> -wrap0
com.koushikdutta.ion.bitmap.LocallyCachedStatus -> com.koushikdutta.ion.bitmap.LocallyCachedStatus:
    com.koushikdutta.ion.bitmap.LocallyCachedStatus CACHED -> CACHED
    com.koushikdutta.ion.bitmap.LocallyCachedStatus MAYBE_CACHED -> MAYBE_CACHED
    com.koushikdutta.ion.bitmap.LocallyCachedStatus NOT_CACHED -> NOT_CACHED
    com.koushikdutta.ion.bitmap.LocallyCachedStatus[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    com.koushikdutta.ion.bitmap.LocallyCachedStatus valueOf(java.lang.String) -> valueOf
    com.koushikdutta.ion.bitmap.LocallyCachedStatus[] values() -> values
    void <clinit>() -> <clinit>
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int currentPosition -> currentPosition
    void <init>(android.os.Parcelable) -> <init>
    void <init>(android.os.Parcel) -> <init>
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel,com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState) -> <init>
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void <init>() -> <init>
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationStart(android.view.View) -> onAnimationStart
com.koushikdutta.async.http.cache.ResponseSource -> com.koushikdutta.async.http.cache.ResponseSource:
    com.koushikdutta.async.http.cache.ResponseSource CACHE -> CACHE
    com.koushikdutta.async.http.cache.ResponseSource CONDITIONAL_CACHE -> CONDITIONAL_CACHE
    com.koushikdutta.async.http.cache.ResponseSource NETWORK -> NETWORK
    com.koushikdutta.async.http.cache.ResponseSource[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    boolean requiresConnection() -> requiresConnection
    com.koushikdutta.async.http.cache.ResponseSource valueOf(java.lang.String) -> valueOf
    com.koushikdutta.async.http.cache.ResponseSource[] values() -> values
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.AsyncSocketMiddleware -> com.koushikdutta.async.http.AsyncSocketMiddleware:
    boolean connectAllAddresses -> connectAllAddresses
    java.util.Hashtable connectionInfo -> connectionInfo
    int idleTimeoutMs -> idleTimeoutMs
    com.koushikdutta.async.http.AsyncHttpClient mClient -> mClient
    int maxConnectionCount -> maxConnectionCount
    int port -> port
    java.net.InetSocketAddress proxyAddress -> proxyAddress
    java.lang.String proxyHost -> proxyHost
    int proxyPort -> proxyPort
    java.lang.String scheme -> scheme
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    void recycleSocket(com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.AsyncHttpRequest) -> recycleSocket
    void idleSocket(com.koushikdutta.async.AsyncSocket) -> idleSocket
    void <init>(com.koushikdutta.async.http.AsyncHttpClient) -> <init>
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,java.lang.String,int) -> <init>
    java.lang.String computeLookup(android.net.Uri,int,java.lang.String,int) -> computeLookup
    void disableProxy() -> disableProxy
    void enableProxy(java.lang.String,int) -> enableProxy
    boolean getConnectAllAddresses() -> getConnectAllAddresses
    int getMaxConnectionCount() -> getMaxConnectionCount
    com.koushikdutta.async.http.AsyncSocketMiddleware$ConnectionInfo getOrCreateConnectionInfo(java.lang.String) -> getOrCreateConnectionInfo
    int getSchemePort(android.net.Uri) -> getSchemePort
    void maybeCleanupConnectionInfo(java.lang.String) -> maybeCleanupConnectionInfo
    void nextConnection(com.koushikdutta.async.http.AsyncHttpRequest) -> nextConnection
    void onResponseComplete(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> onResponseComplete
    void setConnectAllAddresses(boolean) -> setConnectAllAddresses
    void setIdleTimeoutMs(int) -> setIdleTimeoutMs
    void setMaxConnectionCount(int) -> setMaxConnectionCount
    com.koushikdutta.async.callback.ConnectCallback wrapCallback(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int,boolean,com.koushikdutta.async.callback.ConnectCallback) -> wrapCallback
    void -wrap0(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.AsyncSocket) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.AsyncSocketMiddleware,java.lang.String) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.AsyncHttpRequest) -> -wrap2
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
com.koushikdutta.async.http.AsyncHttpGet -> com.koushikdutta.async.http.AsyncHttpGet:
    java.lang.String METHOD -> METHOD
    void <init>(java.lang.String) -> <init>
    void <init>(android.net.Uri) -> <init>
com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead -> com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead:
    int code() -> code
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead code(int) -> code
    com.koushikdutta.async.DataEmitter emitter() -> emitter
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead emitter(com.koushikdutta.async.DataEmitter) -> emitter
    com.koushikdutta.async.http.Headers headers() -> headers
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead headers(com.koushikdutta.async.http.Headers) -> headers
    java.lang.String message() -> message
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead message(java.lang.String) -> message
    java.lang.String protocol() -> protocol
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead protocol(java.lang.String) -> protocol
    com.koushikdutta.async.DataSink sink() -> sink
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead sink(com.koushikdutta.async.DataSink) -> sink
    com.koushikdutta.async.AsyncSocket socket() -> socket
com.koushikdutta.async.http.cache.ResponseHeaders -> com.koushikdutta.async.http.cache.ResponseHeaders:
    java.lang.String RECEIVED_MILLIS -> RECEIVED_MILLIS
    java.lang.String SENT_MILLIS -> SENT_MILLIS
    int ageSeconds -> ageSeconds
    java.lang.String connection -> connection
    java.lang.String contentEncoding -> contentEncoding
    long contentLength -> contentLength
    java.lang.String etag -> etag
    java.util.Date expires -> expires
    com.koushikdutta.async.http.cache.RawHeaders headers -> headers
    boolean isPublic -> isPublic
    java.util.Date lastModified -> lastModified
    int maxAgeSeconds -> maxAgeSeconds
    boolean mustRevalidate -> mustRevalidate
    boolean noCache -> noCache
    boolean noStore -> noStore
    java.lang.String proxyAuthenticate -> proxyAuthenticate
    long receivedResponseMillis -> receivedResponseMillis
    int sMaxAgeSeconds -> sMaxAgeSeconds
    long sentRequestMillis -> sentRequestMillis
    java.util.Date servedDate -> servedDate
    java.lang.String transferEncoding -> transferEncoding
    android.net.Uri uri -> uri
    java.util.Set varyFields -> varyFields
    java.lang.String wwwAuthenticate -> wwwAuthenticate
    void <init>(android.net.Uri,com.koushikdutta.async.http.cache.RawHeaders) -> <init>
    com.koushikdutta.async.http.cache.ResponseSource chooseResponseSource(long,com.koushikdutta.async.http.cache.RequestHeaders) -> chooseResponseSource
    com.koushikdutta.async.http.cache.ResponseHeaders combine(com.koushikdutta.async.http.cache.ResponseHeaders) -> combine
    long computeAge(long) -> computeAge
    long computeFreshnessLifetime() -> computeFreshnessLifetime
    java.lang.String getConnection() -> getConnection
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getEtag() -> getEtag
    java.util.Date getExpires() -> getExpires
    com.koushikdutta.async.http.cache.RawHeaders getHeaders() -> getHeaders
    java.util.Date getLastModified() -> getLastModified
    int getMaxAgeSeconds() -> getMaxAgeSeconds
    java.lang.String getProxyAuthenticate() -> getProxyAuthenticate
    int getSMaxAgeSeconds() -> getSMaxAgeSeconds
    java.util.Date getServedDate() -> getServedDate
    android.net.Uri getUri() -> getUri
    java.util.Set getVaryFields() -> getVaryFields
    java.lang.String getWwwAuthenticate() -> getWwwAuthenticate
    boolean hasConnectionClose() -> hasConnectionClose
    boolean hasVaryAll() -> hasVaryAll
    boolean isCacheable(com.koushikdutta.async.http.cache.RequestHeaders) -> isCacheable
    boolean isChunked() -> isChunked
    boolean isContentEncodingGzip() -> isContentEncodingGzip
    boolean isEndToEnd(java.lang.String) -> isEndToEnd
    boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
    boolean isMustRevalidate() -> isMustRevalidate
    boolean isNoCache() -> isNoCache
    boolean isNoStore() -> isNoStore
    boolean isPublic() -> isPublic
    void setLocalTimestamps(long,long) -> setLocalTimestamps
    void stripContentEncoding() -> stripContentEncoding
    boolean validate(com.koushikdutta.async.http.cache.ResponseHeaders) -> validate
    boolean varyMatches(java.util.Map,java.util.Map) -> varyMatches
    boolean -set0(com.koushikdutta.async.http.cache.ResponseHeaders,boolean) -> -set0
    int -set1(com.koushikdutta.async.http.cache.ResponseHeaders,int) -> -set1
    boolean -set2(com.koushikdutta.async.http.cache.ResponseHeaders,boolean) -> -set2
    boolean -set3(com.koushikdutta.async.http.cache.ResponseHeaders,boolean) -> -set3
    boolean -set4(com.koushikdutta.async.http.cache.ResponseHeaders,boolean) -> -set4
    int -set5(com.koushikdutta.async.http.cache.ResponseHeaders,int) -> -set5
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    int getSource(android.view.MotionEvent) -> getSource
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void <init>() -> <init>
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.annotation.StringRes -> android.support.annotation.StringRes:
com.koushikdutta.ion.loader.ResourceLoader -> com.koushikdutta.ion.loader.ResourceLoader:
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    void <init>() -> <init>
    com.koushikdutta.ion.loader.ResourceLoader$Resource lookupResource(android.content.Context,java.lang.String) -> lookupResource
    com.koushikdutta.ion.loader.ResourceLoader$Resource -wrap0(android.content.Context,java.lang.String) -> -wrap0
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    void <init>() -> <init>
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
com.koushikdutta.async.http.body.StringBody$1 -> com.koushikdutta.async.http.body.StringBody$1:
    com.koushikdutta.async.http.body.StringBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    void <init>(com.koushikdutta.async.http.body.StringBody,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception,java.lang.String) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.dns.Dns$1 -> com.koushikdutta.async.dns.Dns$1:
    com.koushikdutta.async.AsyncDatagramSocket val$dgram -> val$dgram
    void <init>(com.koushikdutta.async.AsyncDatagramSocket) -> <init>
    void cleanup() -> cleanup
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.v13.app.FragmentCompatICSMR1 -> android.support.v13.app.FragmentCompatICSMR1:
    void <init>() -> <init>
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
com.koushikdutta.async.http.socketio.SocketIOConnection$5 -> com.koushikdutta.async.http.socketio.SocketIOConnection$5:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    java.lang.Exception val$ex -> val$ex
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.Exception) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
    void <init>(com.google.gson.internal.LinkedTreeMap,com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator) -> <init>
com.koushikdutta.ion.BitmapFetcher$2$1 -> com.koushikdutta.ion.BitmapFetcher$2$1:
    com.koushikdutta.ion.BitmapFetcher$2 this$1 -> this$1
    com.koushikdutta.ion.Ion val$ion -> val$ion
    void <init>(com.koushikdutta.ion.BitmapFetcher$2,com.koushikdutta.ion.Ion) -> <init>
    void run() -> run
com.google.gson.internal.package-info -> com.google.gson.internal.package-info:
com.koushikdutta.async.http.callback.RequestCallback -> com.koushikdutta.async.http.callback.RequestCallback:
    void onConnect(com.koushikdutta.async.http.AsyncHttpResponse) -> onConnect
    void onProgress(com.koushikdutta.async.http.AsyncHttpResponse,long,long) -> onProgress
com.koushikdutta.async.http.filter.GZIPInputFilter$1$3 -> com.koushikdutta.async.http.filter.GZIPInputFilter$1$3:
    com.koushikdutta.async.http.filter.GZIPInputFilter$1 this$1 -> this$1
    com.koushikdutta.async.DataEmitter val$emitter -> val$emitter
    void <init>(com.koushikdutta.async.http.filter.GZIPInputFilter$1,com.koushikdutta.async.DataEmitter) -> <init>
    void parsed(byte[]) -> parsed
    void parsed(java.lang.Object) -> parsed
com.koushikdutta.ion.builder.BitmapBuilder -> com.koushikdutta.ion.builder.BitmapBuilder:
    com.koushikdutta.ion.builder.BitmapBuilder centerCrop() -> centerCrop
    com.koushikdutta.ion.builder.BitmapBuilder centerInside() -> centerInside
    com.koushikdutta.ion.builder.BitmapBuilder fitCenter() -> fitCenter
    com.koushikdutta.ion.builder.BitmapBuilder fitXY() -> fitXY
    com.koushikdutta.ion.builder.BitmapBuilder postProcess(com.koushikdutta.ion.bitmap.PostProcess) -> postProcess
    com.koushikdutta.ion.builder.BitmapBuilder resize(int,int) -> resize
    com.koushikdutta.ion.builder.BitmapBuilder resizeHeight(int) -> resizeHeight
    com.koushikdutta.ion.builder.BitmapBuilder resizeWidth(int) -> resizeWidth
    com.koushikdutta.ion.builder.BitmapBuilder smartSize(boolean) -> smartSize
    com.koushikdutta.ion.builder.BitmapBuilder transform(com.koushikdutta.ion.bitmap.Transform) -> transform
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void <clinit>() -> <clinit>
com.koushikdutta.async.AsyncServer$AsyncSelectorException -> com.koushikdutta.async.AsyncServer$AsyncSelectorException:
    void <init>(java.lang.Exception) -> <init>
com.koushikdutta.async.http.WebSocket -> com.koushikdutta.async.http.WebSocket:
    com.koushikdutta.async.http.WebSocket$PongCallback getPongCallback() -> getPongCallback
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    com.koushikdutta.async.http.WebSocket$StringCallback getStringCallback() -> getStringCallback
    boolean isBuffering() -> isBuffering
    void ping(java.lang.String) -> ping
    void send(byte[]) -> send
    void send(java.lang.String) -> send
    void send(byte[],int,int) -> send
    void setPingCallback(com.koushikdutta.async.http.WebSocket$PingCallback) -> setPingCallback
    void setPongCallback(com.koushikdutta.async.http.WebSocket$PongCallback) -> setPongCallback
    void setStringCallback(com.koushikdutta.async.http.WebSocket$StringCallback) -> setStringCallback
com.koushikdutta.async.Util$5 -> com.koushikdutta.async.Util$5:
    boolean reported -> reported
    com.koushikdutta.async.DataEmitter val$emitter -> val$emitter
    com.koushikdutta.async.DataSink val$sink -> val$sink
    com.koushikdutta.async.callback.CompletedCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    void <init>() -> <init>
    long getActions(java.lang.Object) -> getActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getPosition(java.lang.Object) -> getPosition
    int getState(java.lang.Object) -> getState
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> newInstance
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    boolean collapseActionView() -> collapseActionView
    boolean expandActionView() -> expandActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23:
    android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback) -> wrapCallback
    void <init>() -> <init>
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject,int,java.lang.Object,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback,android.os.Handler) -> authenticate
    android.hardware.fingerprint.FingerprintManager getFingerprintManager(android.content.Context) -> getFingerprintManager
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject -wrap0(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> -wrap0
com.koushikdutta.async.AsyncServer$5 -> com.koushikdutta.async.AsyncServer$5:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    java.net.InetAddress val$host -> val$host
    int val$port -> val$port
    com.koushikdutta.async.callback.ListenCallback val$handler -> val$handler
    com.koushikdutta.async.AsyncServer$ObjectHolder val$holder -> val$holder
    void run() -> run
    void <init>(com.koushikdutta.async.AsyncServer,java.net.InetAddress,int,com.koushikdutta.async.callback.ListenCallback,com.koushikdutta.async.AsyncServer$ObjectHolder) -> <init>
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <init>(android.os.ResultReceiver) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void <clinit>() -> <clinit>
    android.os.ResultReceiver -get0(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> -get0
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    java.util.List stack -> stack
    void <init>() -> <init>
    com.google.gson.JsonElement get() -> get
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    void close() -> close
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter endObject() -> endObject
    void flush() -> flush
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void <clinit>() -> <clinit>
com.koushikdutta.async.stream.ByteBufferListInputStream -> com.koushikdutta.async.stream.ByteBufferListInputStream:
    com.koushikdutta.async.ByteBufferList bb -> bb
    void <init>(com.koushikdutta.async.ByteBufferList) -> <init>
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void <init>() -> <init>
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
com.koushikdutta.async.http.AsyncHttpClient$11 -> com.koushikdutta.async.http.AsyncHttpClient$11:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback val$callback -> val$callback
    com.koushikdutta.async.http.AsyncHttpRequest val$req -> val$req
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback,com.koushikdutta.async.http.AsyncHttpRequest) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    void <init>() -> <init>
    void <init>(android.support.v4.media.MediaMetadataCompat) -> <init>
    android.support.v4.media.MediaMetadataCompat build() -> build
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
android.support.v4.content.PermissionChecker$PermissionResult -> android.support.v4.content.PermissionChecker$PermissionResult:
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String deferredName -> deferredName
    boolean htmlSafe -> htmlSafe
    java.lang.String indent -> indent
    boolean lenient -> lenient
    java.io.Writer out -> out
    java.lang.String separator -> separator
    boolean serializeNulls -> serializeNulls
    int[] stack -> stack
    int stackSize -> stackSize
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    void <init>(java.io.Writer) -> <init>
    void setLenient(boolean) -> setLenient
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter endObject() -> endObject
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
    void close() -> close
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void flush() -> flush
    boolean getSerializeNulls() -> getSerializeNulls
    boolean isHtmlSafe() -> isHtmlSafe
    boolean isLenient() -> isLenient
    void newline() -> newline
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    int peek() -> peek
    void push(int) -> push
    void replaceTop(int) -> replaceTop
    void setHtmlSafe(boolean) -> setHtmlSafe
    void setIndent(java.lang.String) -> setIndent
    void setSerializeNulls(boolean) -> setSerializeNulls
    void string(java.lang.String) -> string
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void writeDeferredName() -> writeDeferredName
    void <clinit>() -> <clinit>
com.koushikdutta.async.ArrayDeque$DescendingIterator -> com.koushikdutta.async.ArrayDeque$DescendingIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.koushikdutta.async.ArrayDeque this$0 -> this$0
    void <init>(com.koushikdutta.async.ArrayDeque) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void <init>(com.koushikdutta.async.ArrayDeque,com.koushikdutta.async.ArrayDeque$DescendingIterator) -> <init>
com.koushikdutta.async.http.BodyDecoderException -> com.koushikdutta.async.http.BodyDecoderException:
    void <init>(java.lang.String) -> <init>
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void <init>() -> <init>
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
com.koushikdutta.async.http.spdy.SpdyMiddleware -> com.koushikdutta.async.http.spdy.SpdyMiddleware:
    com.koushikdutta.async.http.spdy.SpdyMiddleware$NoSpdyException NO_SPDY -> NO_SPDY
    java.lang.reflect.Field alpnProtocols -> alpnProtocols
    java.util.Hashtable connections -> connections
    boolean initialized -> initialized
    java.lang.reflect.Method nativeGetAlpnNegotiatedProtocol -> nativeGetAlpnNegotiatedProtocol
    java.lang.reflect.Method nativeGetNpnNegotiatedProtocol -> nativeGetNpnNegotiatedProtocol
    java.lang.reflect.Field npnProtocols -> npnProtocols
    java.lang.reflect.Field peerHost -> peerHost
    java.lang.reflect.Field peerPort -> peerPort
    boolean spdyEnabled -> spdyEnabled
    java.lang.reflect.Field sslNativePointer -> sslNativePointer
    java.lang.reflect.Field sslParameters -> sslParameters
    java.lang.reflect.Field useSni -> useSni
    void <init>(com.koushikdutta.async.http.AsyncHttpClient) -> <init>
    com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback createHandshakeCallback(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.callback.ConnectCallback) -> createHandshakeCallback
    com.koushikdutta.async.callback.ConnectCallback wrapCallback(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int,boolean,com.koushikdutta.async.callback.ConnectCallback) -> wrapCallback
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    boolean exchangeHeaders(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnExchangeHeaderData) -> exchangeHeaders
    boolean canSpdyRequest(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> canSpdyRequest
    byte[] concatLengthPrefixed(com.koushikdutta.async.http.Protocol[]) -> concatLengthPrefixed
    void configure(javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> configure
    boolean getSpdyEnabled() -> getSpdyEnabled
    void invokeConnect(java.lang.String,com.koushikdutta.async.callback.ConnectCallback,java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> invokeConnect
    void newSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.http.spdy.AsyncSpdyConnection,com.koushikdutta.async.callback.ConnectCallback) -> newSocket
    void noSpdy(java.lang.String) -> noSpdy
    void onRequestSent(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestSentData) -> onRequestSent
    java.lang.String requestPath(android.net.Uri) -> requestPath
    void setSSLContext(javax.net.ssl.SSLContext) -> setSSLContext
    void setSpdyEnabled(boolean) -> setSpdyEnabled
    void <clinit>() -> <clinit>
    com.koushikdutta.async.future.Cancellable -wrap0(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.spdy.SpdyMiddleware,javax.net.ssl.SSLEngine,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,java.lang.String,int) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.spdy.SpdyMiddleware,java.lang.String,com.koushikdutta.async.callback.ConnectCallback,java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.spdy.SpdyMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.http.spdy.AsyncSpdyConnection,com.koushikdutta.async.callback.ConnectCallback) -> -wrap3
    void -wrap4(com.koushikdutta.async.http.spdy.SpdyMiddleware,java.lang.String) -> -wrap4
com.koushikdutta.ion.gson.GsonBody -> com.koushikdutta.ion.gson.GsonBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    com.google.gson.Gson gson -> gson
    com.google.gson.JsonElement json -> json
    byte[] mBodyBytes -> mBodyBytes
    void <init>(com.google.gson.Gson,com.google.gson.JsonElement) -> <init>
    com.google.gson.JsonElement get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
com.koushikdutta.ion.LoadBitmapBase -> com.koushikdutta.ion.LoadBitmapBase:
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,boolean) -> <init>
com.koushikdutta.ion.RequestBodyUploadObserver$1 -> com.koushikdutta.ion.RequestBodyUploadObserver$1:
    int totalWritten -> totalWritten
    com.koushikdutta.ion.RequestBodyUploadObserver this$0 -> this$0
    com.koushikdutta.async.DataSink val$sink -> val$sink
    int val$length -> val$length
    void <init>(com.koushikdutta.ion.RequestBodyUploadObserver,com.koushikdutta.async.DataSink,int) -> <init>
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isOpen() -> isOpen
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void write(com.koushikdutta.async.ByteBufferList) -> write
com.koushikdutta.ion.bitmap.PostProcess -> com.koushikdutta.ion.bitmap.PostProcess:
    void postProcess(com.koushikdutta.ion.bitmap.BitmapInfo) -> postProcess
    java.lang.String key() -> key
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl:
    void <init>() -> <init>
    boolean onPull(java.lang.Object,float,float) -> onPull
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    void <init>(com.google.gson.Gson) -> <init>
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.http.socketio.SocketIOConnection$7 -> com.koushikdutta.async.http.socketio.SocketIOConnection$7:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    org.json.JSONObject val$jsonMessage -> val$jsonMessage
    com.koushikdutta.async.http.socketio.Acknowledge val$acknowledge -> val$acknowledge
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,org.json.JSONObject,com.koushikdutta.async.http.socketio.Acknowledge) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
com.aokp.romcontrol.util.ShortcutPickerHelper$OnPickListener -> com.aokp.romcontrol.util.ShortcutPickerHelper$OnPickListener:
    void shortcutPicked(java.lang.String,java.lang.String,android.graphics.Bitmap,boolean) -> shortcutPicked
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void <init>(android.content.Context) -> <init>
    int getColorMode() -> getColorMode
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    void setScaleMode(int) -> setScaleMode
com.koushikdutta.async.http.AsyncHttpResponseImpl$3 -> com.koushikdutta.async.http.AsyncHttpResponseImpl$3:
    com.koushikdutta.async.http.AsyncHttpResponseImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.AsyncHttpResponseImpl) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
com.aokp.romcontrol.widgets.AlphaSeekBar -> com.aokp.romcontrol.widgets.AlphaSeekBar:
    java.lang.String ALPHA -> ALPHA
    int MAX_VALUE -> MAX_VALUE
    java.lang.String SUPERSTATE -> SUPERSTATE
    int defaultValue -> defaultValue
    android.widget.TextView mAlphaText -> mAlphaText
    android.widget.TextView mPercentText -> mPercentText
    android.widget.SeekBar mSeekBar -> mSeekBar
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    int getCurrentAlpha() -> getCurrentAlpha
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void setCurrentAlpha(int) -> setCurrentAlpha
    void setEnabled(boolean) -> setEnabled
com.aokp.romcontrol.fragments.navbar.NavbarTabHostFragment -> com.aokp.romcontrol.fragments.navbar.NavbarTabHostFragment:
    android.support.v13.app.FragmentTabHost mTabHost -> mTabHost
    java.lang.String sLastTab -> sLastTab
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onResume() -> onResume
    void onTabChanged(java.lang.String) -> onTabChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void fastForward() -> fastForward
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    java.lang.String getTag() -> getTag
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    void next() -> next
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void previous() -> previous
    void rate(android.support.v4.media.RatingCompat) -> rate
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.VolumeProviderCompat$ControlType -> android.support.v4.media.VolumeProviderCompat$ControlType:
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.media.MediaMetadataCompat$TextKey -> android.support.v4.media.MediaMetadataCompat$TextKey:
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    void <init>() -> <init>
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    int getStableInsetBottom() -> getStableInsetBottom
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetTop() -> getStableInsetTop
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    boolean hasInsets() -> hasInsets
    boolean hasStableInsets() -> hasStableInsets
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.DragSortItemView:
    int mGravity -> mGravity
    void <init>(android.content.Context) -> <init>
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setGravity(int) -> setGravity
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$1 -> this$1
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.ViewParentCompatLollipop:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    void <init>(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> <init>
    boolean onClose() -> onClose
com.koushikdutta.async.future.Continuation -> com.koushikdutta.async.future.Continuation:
    com.koushikdutta.async.callback.CompletedCallback callback -> callback
    java.lang.Runnable cancelCallback -> cancelCallback
    boolean inNext -> inNext
    java.util.LinkedList mCallbacks -> mCallbacks
    boolean started -> started
    boolean waiting -> waiting
    void <init>(com.koushikdutta.async.callback.CompletedCallback) -> <init>
    com.koushikdutta.async.future.Continuation add(com.koushikdutta.async.callback.ContinuationCallback) -> add
    com.koushikdutta.async.future.Continuation start() -> start
    void setCancelCallback(com.koushikdutta.async.future.Cancellable) -> setCancelCallback
    com.koushikdutta.async.callback.CompletedCallback wrap() -> wrap
    com.koushikdutta.async.future.Continuation add(com.koushikdutta.async.future.DependentFuture) -> add
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.callback.CompletedCallback,java.lang.Runnable) -> <init>
    boolean cancel() -> cancel
    com.koushikdutta.async.callback.CompletedCallback getCallback() -> getCallback
    java.lang.Runnable getCancelCallback() -> getCancelCallback
    com.koushikdutta.async.callback.ContinuationCallback hook(com.koushikdutta.async.callback.ContinuationCallback) -> hook
    com.koushikdutta.async.future.Continuation insert(com.koushikdutta.async.callback.ContinuationCallback) -> insert
    void next() -> next
    void onContinue(com.koushikdutta.async.future.Continuation,com.koushikdutta.async.callback.CompletedCallback) -> onContinue
    void reportCompleted(java.lang.Exception) -> reportCompleted
    void run() -> run
    void setCallback(com.koushikdutta.async.callback.CompletedCallback) -> setCallback
    void setCancelCallback(java.lang.Runnable) -> setCancelCallback
    boolean -get0(com.koushikdutta.async.future.Continuation) -> -get0
    boolean -set0(com.koushikdutta.async.future.Continuation,boolean) -> -set0
    void -wrap0(com.koushikdutta.async.future.Continuation) -> -wrap0
com.koushikdutta.async.http.cache.Objects -> com.koushikdutta.async.http.cache.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void <init>() -> <init>
    int hashCode(java.lang.Object) -> hashCode
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat:
    android.animation.Animator mWrapped -> mWrapped
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    void <init>(android.animation.Animator) -> <init>
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void cancel() -> cancel
    float getAnimatedFraction() -> getAnimatedFraction
    void setDuration(long) -> setDuration
    void setTarget(android.view.View) -> setTarget
    void start() -> start
com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl -> com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl:
    com.koushikdutta.async.http.body.AsyncHttpRequestBody mBody -> mBody
    com.koushikdutta.async.LineEmitter$StringCallback mHeaderCallback -> mHeaderCallback
    java.util.regex.Matcher mMatcher -> mMatcher
    com.koushikdutta.async.http.Headers mRawHeaders -> mRawHeaders
    com.koushikdutta.async.callback.CompletedCallback mReporter -> mReporter
    com.koushikdutta.async.AsyncSocket mSocket -> mSocket
    java.lang.String method -> method
    java.lang.String statusLine -> statusLine
    void <init>() -> <init>
    com.koushikdutta.async.http.body.AsyncHttpRequestBody getBody() -> getBody
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    java.util.regex.Matcher getMatcher() -> getMatcher
    java.lang.String getMethod() -> getMethod
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    java.lang.String getStatusLine() -> getStatusLine
    boolean isChunked() -> isChunked
    boolean isPaused() -> isPaused
    void onCompleted(java.lang.Exception) -> onCompleted
    void onHeadersReceived() -> onHeadersReceived
    void onNotHttp() -> onNotHttp
    com.koushikdutta.async.http.body.AsyncHttpRequestBody onUnknownBody(com.koushikdutta.async.http.Headers) -> onUnknownBody
    void pause() -> pause
    void resume() -> resume
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setSocket(com.koushikdutta.async.AsyncSocket) -> setSocket
    java.lang.String toString() -> toString
    com.koushikdutta.async.http.Headers -get0(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> -get0
    com.koushikdutta.async.callback.CompletedCallback -get1(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> -get1
    java.lang.String -get2(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> -get2
    java.lang.String -set0(com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl,java.lang.String) -> -set0
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    void <init>() -> <init>
    void adjustVolume(java.lang.Object,int,int) -> adjustVolume
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    long getFlags(java.lang.Object) -> getFlags
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.lang.String getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.util.List getQueue(java.lang.Object) -> getQueue
    java.lang.CharSequence getQueueTitle(java.lang.Object) -> getQueueTitle
    int getRatingType(java.lang.Object) -> getRatingType
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void setVolumeTo(java.lang.Object,int,int) -> setVolumeTo
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
com.koushikdutta.ion.BitmapDrawableFactory -> com.koushikdutta.ion.BitmapDrawableFactory:
    com.koushikdutta.ion.BitmapDrawableFactory DEFAULT -> DEFAULT
    android.graphics.drawable.Drawable fromBitmap(android.content.res.Resources,android.graphics.Bitmap) -> fromBitmap
    void <clinit>() -> <clinit>
android.support.v4.view.animation.PathInterpolatorCompatBase -> android.support.v4.view.animation.PathInterpolatorCompatBase:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v13.app.FragmentPagerAdapter -> android.support.v13.app.FragmentPagerAdapter:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.app.FragmentManager mFragmentManager -> mFragmentManager
    void <init>(android.app.FragmentManager) -> <init>
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    android.app.Fragment getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    void onFastForward() -> onFastForward
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPause() -> onPause
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onRewind() -> onRewind
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onStop() -> onStop
    void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21) -> <init>
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    void <init>() -> <init>
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_adjustVolume -> TRANSACTION_adjustVolume
    int TRANSACTION_fastForward -> TRANSACTION_fastForward
    int TRANSACTION_getExtras -> TRANSACTION_getExtras
    int TRANSACTION_getFlags -> TRANSACTION_getFlags
    int TRANSACTION_getLaunchPendingIntent -> TRANSACTION_getLaunchPendingIntent
    int TRANSACTION_getMetadata -> TRANSACTION_getMetadata
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getPlaybackState -> TRANSACTION_getPlaybackState
    int TRANSACTION_getQueue -> TRANSACTION_getQueue
    int TRANSACTION_getQueueTitle -> TRANSACTION_getQueueTitle
    int TRANSACTION_getRatingType -> TRANSACTION_getRatingType
    int TRANSACTION_getTag -> TRANSACTION_getTag
    int TRANSACTION_getVolumeAttributes -> TRANSACTION_getVolumeAttributes
    int TRANSACTION_isTransportControlEnabled -> TRANSACTION_isTransportControlEnabled
    int TRANSACTION_next -> TRANSACTION_next
    int TRANSACTION_pause -> TRANSACTION_pause
    int TRANSACTION_play -> TRANSACTION_play
    int TRANSACTION_playFromMediaId -> TRANSACTION_playFromMediaId
    int TRANSACTION_playFromSearch -> TRANSACTION_playFromSearch
    int TRANSACTION_playFromUri -> TRANSACTION_playFromUri
    int TRANSACTION_previous -> TRANSACTION_previous
    int TRANSACTION_rate -> TRANSACTION_rate
    int TRANSACTION_registerCallbackListener -> TRANSACTION_registerCallbackListener
    int TRANSACTION_rewind -> TRANSACTION_rewind
    int TRANSACTION_seekTo -> TRANSACTION_seekTo
    int TRANSACTION_sendCommand -> TRANSACTION_sendCommand
    int TRANSACTION_sendCustomAction -> TRANSACTION_sendCustomAction
    int TRANSACTION_sendMediaButton -> TRANSACTION_sendMediaButton
    int TRANSACTION_setVolumeTo -> TRANSACTION_setVolumeTo
    int TRANSACTION_skipToQueueItem -> TRANSACTION_skipToQueueItem
    int TRANSACTION_stop -> TRANSACTION_stop
    int TRANSACTION_unregisterCallbackListener -> TRANSACTION_unregisterCallbackListener
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.koushikdutta.ion.builder.AnimateGifMode -> com.koushikdutta.ion.builder.AnimateGifMode:
    com.koushikdutta.ion.builder.AnimateGifMode ANIMATE -> ANIMATE
    com.koushikdutta.ion.builder.AnimateGifMode ANIMATE_ONCE -> ANIMATE_ONCE
    com.koushikdutta.ion.builder.AnimateGifMode NO_ANIMATE -> NO_ANIMATE
    com.koushikdutta.ion.builder.AnimateGifMode[] $VALUES -> $VALUES
    void <init>(java.lang.String,int) -> <init>
    com.koushikdutta.ion.builder.AnimateGifMode valueOf(java.lang.String) -> valueOf
    com.koushikdutta.ion.builder.AnimateGifMode[] values() -> values
    void <clinit>() -> <clinit>
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> BUNDLE_SNAPSHOT_BITMAP
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> BUNDLE_SNAPSHOT_IMAGE_MATRIX
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void <init>() -> <init>
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl:
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
com.koushikdutta.async.http.socketio.EventEmitter -> com.koushikdutta.async.http.socketio.EventEmitter:
    com.koushikdutta.async.util.HashList callbacks -> callbacks
    void once(java.lang.String,com.koushikdutta.async.http.socketio.EventCallback) -> once
    void <init>() -> <init>
    void addListener(java.lang.String,com.koushikdutta.async.http.socketio.EventCallback) -> addListener
    void on(java.lang.String,com.koushikdutta.async.http.socketio.EventCallback) -> on
    void onEvent(java.lang.String,org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> onEvent
    void removeListener(java.lang.String,com.koushikdutta.async.http.socketio.EventCallback) -> removeListener
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void <init>() -> <init>
    void onPanelClosed(android.view.View) -> onPanelClosed
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelSlide(android.view.View,float) -> onPanelSlide
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.accessibility.AccessibilityEventCompatKitKat:
    void <init>() -> <init>
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    int[] THEME_ATTRS -> THEME_ATTRS
    void <init>() -> <init>
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
    int getTopInset(java.lang.Object) -> getTopInset
    void <clinit>() -> <clinit>
android.support.v4.widget.SwipeRefreshLayout$9 -> android.support.v4.widget.SwipeRefreshLayout$9:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.koushikdutta.async.LineEmitter -> com.koushikdutta.async.LineEmitter:
    java.lang.StringBuilder data -> data
    com.koushikdutta.async.LineEmitter$StringCallback mLineCallback -> mLineCallback
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>() -> <init>
    void setLineCallback(com.koushikdutta.async.LineEmitter$StringCallback) -> setLineCallback
    com.koushikdutta.async.LineEmitter$StringCallback getLineCallback() -> getLineCallback
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.AsyncHttpClient$7 -> com.koushikdutta.async.http.AsyncHttpClient$7:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.callback.RequestCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$future -> val$future
    com.koushikdutta.async.http.AsyncHttpResponse val$response -> val$response
    java.lang.Exception val$e -> val$e
    java.lang.Object val$result -> val$result
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.Exception,java.lang.Object) -> <init>
    void run() -> run
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void <init>() -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
com.koushikdutta.async.http.socketio.SocketIOClient$1$1 -> com.koushikdutta.async.http.socketio.SocketIOClient$1$1:
    com.koushikdutta.async.http.socketio.SocketIOClient$1 this$1 -> this$1
    com.koushikdutta.async.http.socketio.ConnectCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.async.http.socketio.SocketIOClient$1,com.koushikdutta.async.http.socketio.ConnectCallback,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.socketio.SocketIOClient) -> onConnectCompleted
com.koushikdutta.async.util.FileCache$Snapshot -> com.koushikdutta.async.util.FileCache$Snapshot:
    java.io.FileInputStream[] fins -> fins
    long[] lens -> lens
    void <init>(java.io.FileInputStream[],long[]) -> <init>
    void close() -> close
    long getLength(int) -> getLength
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    void <init>() -> <init>
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    void <init>() -> <init>
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void <init>() -> <init>
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
com.aokp.romcontrol.fragments.about.AboutTabHostFragment -> com.aokp.romcontrol.fragments.about.AboutTabHostFragment:
    com.aokp.romcontrol.fragments.about.AboutTabHostFragment$TabAdapter mAdapter -> mAdapter
    android.content.Context mContext -> mContext
    int[] mFragments -> mFragments
    android.support.v4.view.ViewPager mPager -> mPager
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip mTabs -> mTabs
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void <clinit>() -> <clinit>
    android.content.Context -get0() -> -get0
    int[] -get1() -> -get1
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    void <init>(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavRowViewHolder -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavRowViewHolder:
    android.widget.ImageView icon -> icon
    android.widget.TextView text -> text
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$1 -> this$1
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> <init>
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_MEDIA_ID -> METADATA_KEY_MEDIA_ID
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    java.lang.String TAG -> TAG
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    java.lang.Object mMetadataObj -> mMetadataObj
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    android.os.Bundle getBundle() -> getBundle
    boolean containsKey(java.lang.String) -> containsKey
    long getLong(java.lang.String) -> getLong
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    void <init>(android.os.Bundle) -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    java.lang.String getString(java.lang.String) -> getString
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.util.Set keySet() -> keySet
    int size() -> size
    void <clinit>() -> <clinit>
    android.support.v4.util.ArrayMap -get0() -> -get0
    android.os.Bundle -get1(android.support.v4.media.MediaMetadataCompat) -> -get1
    void <init>(android.os.Bundle,android.support.v4.media.MediaMetadataCompat) -> <init>
    void <init>(android.os.Parcel,android.support.v4.media.MediaMetadataCompat) -> <init>
com.koushikdutta.async.http.socketio.SocketIOConnection$14 -> com.koushikdutta.async.http.socketio.SocketIOConnection$14:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    void <init>() -> <init>
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getTag(java.lang.Object) -> getTag
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    boolean isGroup(java.lang.Object) -> isGroup
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    void setTag(java.lang.Object,java.lang.Object) -> setTag
com.koushikdutta.async.http.socketio.SocketIOConnection$8 -> com.koushikdutta.async.http.socketio.SocketIOConnection$8:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    java.lang.String val$string -> val$string
    com.koushikdutta.async.http.socketio.Acknowledge val$acknowledge -> val$acknowledge
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$1 -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$1:
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSocket val$socket -> val$socket
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedSocket) -> <init>
    void run() -> run
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.CharSequence mDescription -> mDescription
    java.lang.Object mDescriptionObj -> mDescriptionObj
    android.os.Bundle mExtras -> mExtras
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    java.lang.String mMediaId -> mMediaId
    android.net.Uri mMediaUri -> mMediaUri
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mTitle -> mTitle
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    int describeContents() -> describeContents
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    java.lang.CharSequence getDescription() -> getDescription
    android.os.Bundle getExtras() -> getExtras
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    android.net.Uri getIconUri() -> getIconUri
    java.lang.Object getMediaDescription() -> getMediaDescription
    java.lang.String getMediaId() -> getMediaId
    android.net.Uri getMediaUri() -> getMediaUri
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri,android.support.v4.media.MediaDescriptionCompat) -> <init>
    void <init>(android.os.Parcel,android.support.v4.media.MediaDescriptionCompat) -> <init>
com.koushikdutta.ion.BitmapCallback$2 -> com.koushikdutta.ion.BitmapCallback$2:
    com.koushikdutta.ion.BitmapCallback this$0 -> this$0
    com.koushikdutta.ion.bitmap.BitmapInfo val$info -> val$info
    java.lang.Exception val$e -> val$e
    void <init>(com.koushikdutta.ion.BitmapCallback,com.koushikdutta.ion.bitmap.BitmapInfo,java.lang.Exception) -> <init>
    void run() -> run
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    java.util.ArrayList mActiveListeners -> mActiveListeners
    android.support.v4.media.session.MediaControllerCompat mController -> mController
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> <init>
    void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    android.support.v4.media.session.MediaControllerCompat getController() -> getController
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean isActive() -> isActive
    android.support.v4.media.session.MediaSessionCompat obtain(android.content.Context,java.lang.Object) -> obtain
    void release() -> release
    void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void setActive(boolean) -> setActive
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setExtras(android.os.Bundle) -> setExtras
    void setFlags(int) -> setFlags
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
com.koushikdutta.async.http.AsyncHttpClient -> com.koushikdutta.async.http.AsyncHttpClient:
    java.lang.String LOGTAG -> LOGTAG
    com.koushikdutta.async.http.HttpTransportMiddleware httpTransportMiddleware -> httpTransportMiddleware
    com.koushikdutta.async.http.AsyncHttpClient mDefaultInstance -> mDefaultInstance
    java.util.ArrayList mMiddleware -> mMiddleware
    com.koushikdutta.async.AsyncServer mServer -> mServer
    com.koushikdutta.async.http.AsyncSocketMiddleware socketMiddleware -> socketMiddleware
    com.koushikdutta.async.http.spdy.SpdyMiddleware sslSocketMiddleware -> sslSocketMiddleware
    boolean -assertionsDisabled -> -assertionsDisabled
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.future.Future executeString(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$StringCallback) -> executeString
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    com.koushikdutta.async.future.Future execute(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.callback.HttpConnectCallback) -> execute
    com.koushikdutta.async.future.Future websocket(java.lang.String,java.lang.String,com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback) -> websocket
    java.util.ArrayList getMiddleware() -> getMiddleware
    void insertMiddleware(com.koushikdutta.async.http.AsyncHttpClientMiddleware) -> insertMiddleware
    void execute(com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback) -> execute
    void executeAffinity(com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback) -> executeAffinity
    void executeSocket(com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> executeSocket
    void invoke(com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.Exception,java.lang.Object) -> invoke
    com.koushikdutta.async.future.Future executeFile(com.koushikdutta.async.http.AsyncHttpRequest,java.lang.String,com.koushikdutta.async.http.AsyncHttpClient$FileCallback) -> executeFile
    com.koushikdutta.async.future.SimpleFuture execute(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.parser.AsyncParser,com.koushikdutta.async.http.callback.RequestCallback) -> execute
    com.koushikdutta.async.future.Future websocket(com.koushikdutta.async.http.AsyncHttpRequest,java.lang.String,com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback) -> websocket
    void copyHeader(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpRequest,java.lang.String) -> copyHeader
    com.koushikdutta.async.future.Future execute(java.lang.String,com.koushikdutta.async.http.callback.HttpConnectCallback) -> execute
    com.koushikdutta.async.future.Future executeByteBufferList(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$DownloadCallback) -> executeByteBufferList
    com.koushikdutta.async.future.Future executeJSONArray(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$JSONArrayCallback) -> executeJSONArray
    com.koushikdutta.async.future.Future executeJSONObject(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpClient$JSONObjectCallback) -> executeJSONObject
    com.koushikdutta.async.http.AsyncHttpClient getDefaultInstance() -> getDefaultInstance
    com.koushikdutta.async.http.spdy.SpdyMiddleware getSSLSocketMiddleware() -> getSSLSocketMiddleware
    com.koushikdutta.async.http.AsyncSocketMiddleware getSocketMiddleware() -> getSocketMiddleware
    long getTimeoutRemaining(com.koushikdutta.async.http.AsyncHttpRequest) -> getTimeoutRemaining
    void invokeConnect(com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.http.AsyncHttpResponse) -> invokeConnect
    void invokeProgress(com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.http.AsyncHttpResponse,long,long) -> invokeProgress
    void invokeWithAffinity(com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.Exception,java.lang.Object) -> invokeWithAffinity
    void reportConnectedCompleted(com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponseImpl,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.callback.HttpConnectCallback) -> reportConnectedCompleted
    void setupAndroidProxy(com.koushikdutta.async.http.AsyncHttpRequest) -> setupAndroidProxy
    void <clinit>() -> <clinit>
    long -wrap0(com.koushikdutta.async.http.AsyncHttpRequest) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.AsyncHttpRequest,java.lang.String) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback,com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> -wrap3
    void -wrap4(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpRequest,int,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,com.koushikdutta.async.http.callback.HttpConnectCallback) -> -wrap4
    void -wrap5(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.http.AsyncHttpResponse) -> -wrap5
    void -wrap6(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.http.AsyncHttpResponse,long,long) -> -wrap6
    void -wrap7(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.Exception,java.lang.Object) -> -wrap7
    void -wrap8(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.AsyncHttpResponse,java.lang.Exception,java.lang.Object) -> -wrap8
    void -wrap9(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpClient$FutureAsyncHttpResponse,java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponseImpl,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.http.callback.HttpConnectCallback) -> -wrap9
    void -wrap10(com.koushikdutta.async.http.AsyncHttpRequest) -> -wrap10
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    void <init>(java.lang.Number) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Boolean) -> <init>
    void <init>(java.lang.Character) -> <init>
    void <init>(java.lang.Object) -> <init>
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    boolean equals(java.lang.Object) -> equals
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    int getAsInt() -> getAsInt
    long getAsLong() -> getAsLong
    java.lang.Number getAsNumber() -> getAsNumber
    short getAsShort() -> getAsShort
    java.lang.String getAsString() -> getAsString
    int hashCode() -> hashCode
    boolean isBoolean() -> isBoolean
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    boolean isNumber() -> isNumber
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    boolean isString() -> isString
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.aokp.romcontrol.settings.ColorPickerSetting -> com.aokp.romcontrol.settings.ColorPickerSetting:
    boolean mAlphaSliderEnabled -> mAlphaSliderEnabled
    int mDefaultValue -> mDefaultValue
    float mDensity -> mDensity
    android.widget.EditText mEditText -> mEditText
    int mValue -> mValue
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    java.lang.String convertToARGB(int) -> convertToARGB
    int convertToColorInt(java.lang.String) -> convertToColorInt
    int getColor() -> getColor
    android.graphics.Bitmap getPreviewBitmap() -> getPreviewBitmap
    boolean isInEditMode() -> isInEditMode
    void onClick(android.view.View) -> onClick
    void onColorChanged(int) -> onColorChanged
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void setAlphaSliderEnabled(boolean) -> setAlphaSliderEnabled
    void setPreviewColor() -> setPreviewColor
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onAudioFocusChange(int) -> onAudioFocusChange
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.DragSortListView$DropListener:
    void drop(int,int) -> drop
com.koushikdutta.async.Util$7 -> com.koushikdutta.async.Util$7:
    java.io.InputStream val$is -> val$is
    com.koushikdutta.async.callback.CompletedCallback val$callback -> val$callback
    void <init>(java.io.InputStream,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.graphics.Bitmap mPicture -> mPicture
    void <init>() -> <init>
    void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    void <init>() -> <init>
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> getContext
    boolean hasSubMenu() -> hasSubMenu
    boolean isVisible() -> isVisible
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    boolean overridesItemVisibility() -> overridesItemVisibility
    void refreshVisibility() -> refreshVisibility
    void reset() -> reset
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
com.aokp.romcontrol.fragments.navbar.NavbarSettingsFragment -> com.aokp.romcontrol.fragments.navbar.NavbarSettingsFragment:
    android.content.Context mContext -> mContext
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onSettingChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onSettingChanged
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    void <init>() -> <init>
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter:
    com.koushikdutta.async.util.Allocator allocator -> allocator
    boolean allowEnd -> allowEnd
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse cacheResponse -> cacheResponse
    boolean paused -> paused
    com.koushikdutta.async.ByteBufferList pending -> pending
    java.lang.Runnable sendCachedDataRunnable -> sendCachedDataRunnable
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryCacheResponse,long) -> <init>
    void close() -> close
    boolean isPaused() -> isPaused
    void report(java.lang.Exception) -> report
    void resume() -> resume
    void sendCachedData() -> sendCachedData
    void sendCachedDataOnNetworkThread() -> sendCachedDataOnNetworkThread
    void <clinit>() -> <clinit>
com.aokp.romcontrol.fragments.GeneralSettingsFragment$1 -> com.aokp.romcontrol.fragments.GeneralSettingsFragment$1:
    com.aokp.romcontrol.fragments.GeneralSettingsFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.GeneralSettingsFragment) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    void <clinit>() -> <clinit>
android.support.annotation.UiThread -> android.support.annotation.UiThread:
com.koushikdutta.async.DataSink -> com.koushikdutta.async.DataSink:
    void end() -> end
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    boolean isOpen() -> isOpen
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void write(com.koushikdutta.async.ByteBufferList) -> write
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
com.koushikdutta.ion.cookie.CookieMiddleware -> com.koushikdutta.ion.cookie.CookieMiddleware:
    com.koushikdutta.ion.Ion ion -> ion
    java.net.CookieManager manager -> manager
    android.content.SharedPreferences preferences -> preferences
    void <init>(com.koushikdutta.ion.Ion) -> <init>
    void addCookies(java.util.Map,com.koushikdutta.async.http.Headers) -> addCookies
    void clear() -> clear
    java.net.CookieManager getCookieManager() -> getCookieManager
    java.net.CookieStore getCookieStore() -> getCookieStore
    void maybeInit() -> maybeInit
    void onHeadersReceived(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnHeadersReceivedDataOnRequestSentData) -> onHeadersReceived
    void onRequest(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnRequestData) -> onRequest
    void put(java.net.URI,com.koushikdutta.async.http.Headers) -> put
    void reinit() -> reinit
com.koushikdutta.async.Util$8 -> com.koushikdutta.async.Util$8:
    com.koushikdutta.async.DataSink val$sink -> val$sink
    com.koushikdutta.async.ByteBufferList val$bb -> val$bb
    com.koushikdutta.async.callback.CompletedCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.DataSink,com.koushikdutta.async.ByteBufferList,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onWriteable() -> onWriteable
com.koushikdutta.async.http.HybiParser$3 -> com.koushikdutta.async.http.HybiParser$3:
    com.koushikdutta.async.http.HybiParser this$0 -> this$0
    void <init>(com.koushikdutta.async.http.HybiParser) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.ion.loader.PackageIconLoader -> com.koushikdutta.ion.loader.PackageIconLoader:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    void <init>() -> <init>
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.graphics.drawable.DrawableCompatBase:
    void <init>() -> <init>
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.view.ViewParentCompatKitKat -> android.support.v4.view.ViewParentCompatKitKat:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
com.aokp.romcontrol.R$id -> com.aokp.romcontrol.R$id:
    int title -> title
    int navigation_drawer -> navigation_drawer
    int drawer_layout -> drawer_layout
    int container -> container
    int action_show_drawer_icon -> action_show_drawer_icon
    int summary -> summary
    int checkbox -> checkbox
    int twitter_button -> twitter_button
    int donate_button -> donate_button
    int github_button -> github_button
    int name -> name
    int photo -> photo
    int text1 -> text1
    int icon -> icon
    int list -> list
    int pager -> pager
    int tabs -> tabs
    int color_preview -> color_preview
    int crew -> crew
    int color_picker_view -> color_picker_view
    int old_color_panel -> old_color_panel
    int new_color_panel -> new_color_panel
    int hex -> hex
    int enter -> enter
    int default_color -> default_color
    int setting_force_highend_gfx -> setting_force_highend_gfx
    int proximity_on_wake -> proximity_on_wake
    int aokp_mgerrit_changelog -> aokp_mgerrit_changelog
    int aokp_review -> aokp_review
    int the_switch -> the_switch
    int alpha -> alpha
    int animation_duration -> animation_duration
    int animation_duration_id -> animation_duration_id
    int animation_type -> animation_type
    int aokp -> aokp
    int aokp_irc -> aokp_irc
    int battery_percentage_indicator -> battery_percentage_indicator
    int battery_percentage_indicator_plugged -> battery_percentage_indicator_plugged
    int buttons_backlight_timeout -> buttons_backlight_timeout
    int buttons_backlight_timeout_title -> buttons_backlight_timeout_title
    int buttons_brightness -> buttons_brightness
    int buttons_brightness_title -> buttons_brightness_title
    int category_backlight -> category_backlight
    int clickRemove -> clickRemove
    int flingLeft -> flingLeft
    int flingRight -> flingRight
    int grabber -> grabber
    int image_here -> image_here
    int onDown -> onDown
    int onLongPress -> onLongPress
    int onMove -> onMove
    int percent -> percent
    int photo_text_bar -> photo_text_bar
    int scrollView -> scrollView
    int seek_bar -> seek_bar
    int setting_customize_hardware_keys -> setting_customize_hardware_keys
    int setting_key_back_long_press -> setting_key_back_long_press
    int setting_key_camera -> setting_key_camera
    int setting_key_home_double_tap -> setting_key_home_double_tap
    int setting_key_home_long_press -> setting_key_home_long_press
    int setting_key_menu -> setting_key_menu
    int setting_key_menu_long_press -> setting_key_menu_long_press
    int setting_key_recents -> setting_key_recents
    int setting_key_recents_long_press -> setting_key_recents_long_press
    int setting_key_search -> setting_key_search
    int setting_key_search_long_press -> setting_key_search_long_press
    int setting_status_bar_battery_style -> setting_status_bar_battery_style
    int slideLeft -> slideLeft
    int slideRight -> slideRight
    int status_bar_network_stats_text_color -> status_bar_network_stats_text_color
    int statusbar_clock_am_pm_style -> statusbar_clock_am_pm_style
    int statusbar_clock_color -> statusbar_clock_color
    int statusbar_clock_date -> statusbar_clock_date
    int statusbar_clock_style -> statusbar_clock_style
    int statusbar_clock_weekday -> statusbar_clock_weekday
    int timeout_value -> timeout_value
    int volume_key_cursor_control -> volume_key_cursor_control
    int window_color -> window_color
    int window_color_id -> window_color_id
    int window_size -> window_size
    int window_size_id -> window_size_id
    int window_space -> window_space
    int window_space_id -> window_space_id
    void <init>() -> <init>
com.koushikdutta.async.LineEmitter$StringCallback -> com.koushikdutta.async.LineEmitter$StringCallback:
    void onStringAvailable(java.lang.String) -> onStringAvailable
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float mStepSize -> mStepSize
    float[] mValues -> mValues
    void <init>(float[]) -> <init>
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void <init>() -> <init>
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> <init>
    void run() -> run
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void <init>() -> <init>
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
com.koushikdutta.ion.builder.FutureBuilder -> com.koushikdutta.ion.builder.FutureBuilder:
    com.koushikdutta.ion.future.ResponseFuture as(com.koushikdutta.async.parser.AsyncParser) -> as
    com.koushikdutta.ion.future.ResponseFuture asByteArray() -> asByteArray
    com.koushikdutta.ion.future.ResponseFuture asDataEmitter() -> asDataEmitter
    com.koushikdutta.ion.future.ResponseFuture asDocument() -> asDocument
    com.koushikdutta.ion.future.ResponseFuture asInputStream() -> asInputStream
    com.koushikdutta.ion.future.ResponseFuture asString() -> asString
    com.koushikdutta.ion.future.ResponseFuture asString(java.nio.charset.Charset) -> asString
    com.koushikdutta.ion.builder.FutureBuilder group(java.lang.Object) -> group
    com.koushikdutta.ion.builder.Builders$Any$BF withBitmap() -> withBitmap
    com.koushikdutta.ion.future.ResponseFuture write(java.io.OutputStream) -> write
    com.koushikdutta.ion.future.ResponseFuture write(java.io.File) -> write
    com.koushikdutta.ion.future.ResponseFuture write(java.io.OutputStream,boolean) -> write
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl:
    void <init>() -> <init>
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    void <init>() -> <init>
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    float SHADOW_RADIUS -> SHADOW_RADIUS
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    void <init>(android.content.Context,int,float) -> <init>
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void setBackgroundColor(int) -> setBackgroundColor
    boolean elevationSupported() -> elevationSupported
    void onAnimationEnd() -> onAnimationEnd
    void onAnimationStart() -> onAnimationStart
    void onMeasure(int,int) -> onMeasure
    void setBackgroundColorRes(int) -> setBackgroundColorRes
    int -get0(android.support.v4.widget.CircleImageView) -> -get0
    int -set0(android.support.v4.widget.CircleImageView,int) -> -set0
com.koushikdutta.async.AsyncSSLSocketWrapper$3 -> com.koushikdutta.async.AsyncSSLSocketWrapper$3:
    com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.AsyncSSLSocketWrapper$HandshakeCallback) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.ion.loader.HttpLoader -> com.koushikdutta.ion.loader.HttpLoader:
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    void <init>() -> <init>
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    void <init>() -> <init>
    float getPercentRating(java.lang.Object) -> getPercentRating
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    float getStarRating(java.lang.Object) -> getStarRating
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isRated(java.lang.Object) -> isRated
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newUnratedRating(int) -> newUnratedRating
com.aokp.romcontrol.R$style -> com.aokp.romcontrol.R$style:
    int settingStyle -> settingStyle
    int AppTheme -> AppTheme
    int defaultSize -> defaultSize
    int settingSeparator -> settingSeparator
    int settingsFragmentNoTopStyle -> settingsFragmentNoTopStyle
    int settingsFragmentStyle -> settingsFragmentStyle
    void <init>() -> <init>
com.koushikdutta.async.AsyncSSLSocketWrapper$6 -> com.koushikdutta.async.AsyncSSLSocketWrapper$6:
    com.koushikdutta.async.AsyncSSLSocketWrapper this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncSSLSocketWrapper) -> <init>
    void run() -> run
com.koushikdutta.async.util.FileCache$2 -> com.koushikdutta.async.util.FileCache$2:
    com.koushikdutta.async.util.FileCache this$0 -> this$0
    void <init>(com.koushikdutta.async.util.FileCache) -> <init>
    void run() -> run
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
com.koushikdutta.ion.ContextReference$FragmentContextReference -> com.koushikdutta.ion.ContextReference$FragmentContextReference:
    void <init>(android.app.Fragment) -> <init>
    android.content.Context getContext() -> getContext
    java.lang.String isAlive() -> isAlive
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    void <init>(android.content.Context) -> <init>
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    boolean isActive() -> isActive
    void release() -> release
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void setActive(boolean) -> setActive
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setExtras(android.os.Bundle) -> setExtras
    void setFlags(int) -> setFlags
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    void <init>() -> <init>
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.CharSequence getError(java.lang.Object) -> getError
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.NotificationCompatIceCreamSandwich$Builder:
    android.app.Notification$Builder b -> b
    void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> <init>
    android.app.Notification build() -> build
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void <init>(android.content.Context) -> <init>
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    int mSize -> mSize
    java.lang.Object[] mValues -> mValues
    void <init>() -> <init>
    void <init>(int) -> <init>
    void append(long,java.lang.Object) -> append
    void clear() -> clear
    android.support.v4.util.LongSparseArray clone() -> clone
    void delete(long) -> delete
    void gc() -> gc
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    long keyAt(int) -> keyAt
    void put(long,java.lang.Object) -> put
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int size() -> size
    java.lang.String toString() -> toString
    java.lang.Object valueAt(int) -> valueAt
    void <clinit>() -> <clinit>
    java.lang.Object clone() -> clone
com.koushikdutta.ion.IonRequestBuilder$8 -> com.koushikdutta.ion.IonRequestBuilder$8:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    java.io.File val$file -> val$file
    void <init>(com.koushikdutta.ion.IonRequestBuilder,java.io.File) -> <init>
    void run() -> run
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    void <init>() -> <init>
    void abortAnimation(java.lang.Object) -> abortAnimation
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
    boolean isFinished(java.lang.Object) -> isFinished
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.koushikdutta.async.http.AsyncHttpClient$6 -> com.koushikdutta.async.http.AsyncHttpClient$6:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpResponseImpl val$ret -> val$ret
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.AsyncHttpResponseImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    void <init>() -> <init>
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
com.koushikdutta.ion.loader.StreamLoader$1 -> com.koushikdutta.ion.loader.StreamLoader$1:
    com.koushikdutta.ion.loader.StreamLoader this$0 -> this$0
    android.content.Context val$context -> val$context
    java.lang.String val$uri -> val$uri
    com.koushikdutta.ion.Ion val$ion -> val$ion
    int val$resizeWidth -> val$resizeWidth
    int val$resizeHeight -> val$resizeHeight
    boolean val$animateGif -> val$animateGif
    java.lang.String val$key -> val$key
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.loader.StreamLoader,android.content.Context,java.lang.String,com.koushikdutta.ion.Ion,int,int,boolean,java.lang.String,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void run() -> run
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    int mLayout -> mLayout
    void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void setDropDownViewResource(int) -> setDropDownViewResource
    void setViewResource(int) -> setViewResource
com.koushikdutta.ion.bitmap.Exif -> com.koushikdutta.ion.bitmap.Exif:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    int getOrientation(byte[],int,int) -> getOrientation
    int pack(byte[],int,int,boolean) -> pack
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    int val$id -> val$id
    int val$flags -> val$flags
    void <init>(android.support.v4.app.FragmentManagerImpl,int,int) -> <init>
    void run() -> run
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
com.koushikdutta.ion.builder.Builders$Any$F -> com.koushikdutta.ion.builder.Builders$Any$F:
com.koushikdutta.async.callback.CompletedCallback$NullCompletedCallback -> com.koushikdutta.async.callback.CompletedCallback$NullCompletedCallback:
    void <init>() -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void <init>() -> <init>
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
android.support.v4.content.EditorCompatGingerbread -> android.support.v4.content.EditorCompatGingerbread:
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
com.koushikdutta.async.ThreadQueue -> com.koushikdutta.async.ThreadQueue:
    java.util.concurrent.Semaphore queueSemaphore -> queueSemaphore
    com.koushikdutta.async.AsyncSemaphore waiter -> waiter
    java.util.WeakHashMap mThreadQueues -> mThreadQueues
    boolean remove(java.lang.Object) -> remove
    com.koushikdutta.async.ThreadQueue getOrCreateThreadQueue(java.lang.Thread) -> getOrCreateThreadQueue
    boolean add(java.lang.Runnable) -> add
    java.lang.Runnable remove() -> remove
    void release(com.koushikdutta.async.AsyncSemaphore) -> release
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    boolean add(java.lang.Object) -> add
    java.lang.Object remove() -> remove
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void <init>() -> <init>
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
com.koushikdutta.async.http.spdy.FrameReader$Handler -> com.koushikdutta.async.http.spdy.FrameReader$Handler:
    void ackSettings() -> ackSettings
    void alternateService(int,java.lang.String,com.koushikdutta.async.http.spdy.ByteString,java.lang.String,int,long) -> alternateService
    void data(boolean,int,com.koushikdutta.async.ByteBufferList) -> data
    void error(java.lang.Exception) -> error
    void goAway(int,com.koushikdutta.async.http.spdy.ErrorCode,com.koushikdutta.async.http.spdy.ByteString) -> goAway
    void headers(boolean,boolean,int,int,java.util.List,com.koushikdutta.async.http.spdy.HeadersMode) -> headers
    void ping(boolean,int,int) -> ping
    void priority(int,int,int,boolean) -> priority
    void pushPromise(int,int,java.util.List) -> pushPromise
    void rstStream(int,com.koushikdutta.async.http.spdy.ErrorCode) -> rstStream
    void settings(boolean,com.koushikdutta.async.http.spdy.Settings) -> settings
    void windowUpdate(int,long) -> windowUpdate
com.koushikdutta.async.util.FileCache -> com.koushikdutta.async.util.FileCache:
    long blockSize -> blockSize
    com.koushikdutta.async.util.FileCache$InternalCache cache -> cache
    java.util.Comparator dateCompare -> dateCompare
    java.io.File directory -> directory
    java.lang.String hashAlgorithm -> hashAlgorithm
    boolean loadAsync -> loadAsync
    boolean loading -> loading
    java.security.MessageDigest messageDigest -> messageDigest
    java.util.Random random -> random
    long size -> size
    void doLoad() -> doLoad
    void <init>(java.io.File,long,boolean) -> <init>
    void clear() -> clear
    void commitTempFiles(java.lang.String,java.io.File[]) -> commitTempFiles
    boolean exists(java.lang.String) -> exists
    boolean exists(java.lang.String,int) -> exists
    java.security.MessageDigest findAlternativeMessageDigest() -> findAlternativeMessageDigest
    java.io.FileInputStream get(java.lang.String) -> get
    java.io.FileInputStream[] get(java.lang.String,int) -> get
    java.io.File getFile(java.lang.String) -> getFile
    java.io.File getPartFile(java.lang.String,int) -> getPartFile
    java.lang.String getPartName(java.lang.String,int) -> getPartName
    java.io.File getTempFile() -> getTempFile
    java.io.File[] getTempFiles(int) -> getTempFiles
    java.util.Set keySet() -> keySet
    void load() -> load
    void remove(java.lang.String) -> remove
    void removeFiles(java.io.File[]) -> removeFiles
    void removePartFiles(java.lang.String) -> removePartFiles
    void setBlockSize(long) -> setBlockSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    java.lang.String toKeyString(java.lang.Object[]) -> toKeyString
    java.io.File touch(java.io.File) -> touch
    void <clinit>() -> <clinit>
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void <init>() -> <init>
    java.io.File getObbDir(android.content.Context) -> getObbDir
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
com.koushikdutta.async.http.socketio.SocketIOConnection -> com.koushikdutta.async.http.socketio.SocketIOConnection:
    int ackCount -> ackCount
    java.util.Hashtable acknowledges -> acknowledges
    java.util.ArrayList clients -> clients
    com.koushikdutta.async.future.Cancellable connecting -> connecting
    int heartbeat -> heartbeat
    com.koushikdutta.async.http.AsyncHttpClient httpClient -> httpClient
    long reconnectDelay -> reconnectDelay
    com.koushikdutta.async.http.socketio.SocketIORequest request -> request
    com.koushikdutta.async.http.socketio.transport.SocketIOTransport transport -> transport
    void reconnect(com.koushikdutta.async.future.DependentCancellable) -> reconnect
    void setupHeartbeat() -> setupHeartbeat
    void delayReconnect() -> delayReconnect
    void reportDisconnect(java.lang.Exception) -> reportDisconnect
    void reportConnect(java.lang.String) -> reportConnect
    void reportJson(java.lang.String,org.json.JSONObject,com.koushikdutta.async.http.socketio.Acknowledge) -> reportJson
    void reportString(java.lang.String,java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> reportString
    void reportEvent(java.lang.String,java.lang.String,org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> reportEvent
    void reportError(java.lang.String,java.lang.String) -> reportError
    com.koushikdutta.async.http.socketio.Acknowledge acknowledge(java.lang.String,java.lang.String) -> acknowledge
    void attach() -> attach
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.socketio.SocketIORequest) -> <init>
    void connect(com.koushikdutta.async.http.socketio.SocketIOClient) -> connect
    void disconnect(com.koushikdutta.async.http.socketio.SocketIOClient) -> disconnect
    void emitRaw(int,com.koushikdutta.async.http.socketio.SocketIOClient,java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> emitRaw
    boolean isConnected() -> isConnected
    long nextReconnectDelay(long) -> nextReconnectDelay
    void select(java.lang.String,com.koushikdutta.async.http.socketio.SocketIOConnection$SelectCallback) -> select
    com.koushikdutta.async.http.socketio.Acknowledge -wrap0(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,java.lang.String) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.socketio.SocketIOConnection) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.Exception) -> -wrap3
    void -wrap4(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,java.lang.String) -> -wrap4
    void -wrap5(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,java.lang.String,org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> -wrap5
    void -wrap6(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,org.json.JSONObject,com.koushikdutta.async.http.socketio.Acknowledge) -> -wrap6
    void -wrap7(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> -wrap7
    void -wrap8(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,com.koushikdutta.async.http.socketio.SocketIOConnection$SelectCallback) -> -wrap8
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    void <init>() -> <init>
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int) -> <init>
    void run() -> run
com.koushikdutta.async.future.HandlerFuture -> com.koushikdutta.async.future.HandlerFuture:
    android.os.Handler handler -> handler
    com.koushikdutta.async.future.SimpleFuture setCallback(com.koushikdutta.async.future.FutureCallback) -> setCallback
    void <init>() -> <init>
com.koushikdutta.async.PushParser$TapWaiter -> com.koushikdutta.async.PushParser$TapWaiter:
    com.koushikdutta.async.TapCallback callback -> callback
    com.koushikdutta.async.PushParser this$0 -> this$0
    void <init>(com.koushikdutta.async.PushParser,com.koushikdutta.async.TapCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    void setSource(android.view.View,int) -> setSource
    java.lang.Object getImpl() -> getImpl
    void <init>(java.lang.Object) -> <init>
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setScrollable(boolean) -> setScrollable
    void setItemCount(int) -> setItemCount
    void setFromIndex(int) -> setFromIndex
    void setToIndex(int) -> setToIndex
    void setScrollX(int) -> setScrollX
    void setScrollY(int) -> setScrollY
    void setMaxScrollX(int) -> setMaxScrollX
    void setMaxScrollY(int) -> setMaxScrollY
    boolean equals(java.lang.Object) -> equals
    int getAddedCount() -> getAddedCount
    java.lang.CharSequence getBeforeText() -> getBeforeText
    java.lang.CharSequence getClassName() -> getClassName
    java.lang.CharSequence getContentDescription() -> getContentDescription
    int getCurrentItemIndex() -> getCurrentItemIndex
    int getFromIndex() -> getFromIndex
    int getItemCount() -> getItemCount
    int getMaxScrollX() -> getMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    android.os.Parcelable getParcelableData() -> getParcelableData
    int getRemovedCount() -> getRemovedCount
    int getScrollX() -> getScrollX
    int getScrollY() -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    java.util.List getText() -> getText
    int getToIndex() -> getToIndex
    int getWindowId() -> getWindowId
    int hashCode() -> hashCode
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isFullScreen() -> isFullScreen
    boolean isPassword() -> isPassword
    boolean isScrollable() -> isScrollable
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    void recycle() -> recycle
    void setAddedCount(int) -> setAddedCount
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    void setChecked(boolean) -> setChecked
    void setClassName(java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    void setEnabled(boolean) -> setEnabled
    void setFullScreen(boolean) -> setFullScreen
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void setPassword(boolean) -> setPassword
    void setRemovedCount(int) -> setRemovedCount
    void setSource(android.view.View) -> setSource
    void <clinit>() -> <clinit>
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi23$TransportControls:
    void <init>() -> <init>
    void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> playFromUri
com.aokp.romcontrol.settings.BaseSetting$1 -> com.aokp.romcontrol.settings.BaseSetting$1:
    com.aokp.romcontrol.settings.BaseSetting this$0 -> this$0
    void <init>(com.aokp.romcontrol.settings.BaseSetting) -> <init>
    void onClick(android.view.View) -> onClick
com.koushikdutta.async.PushParser$Waiter -> com.koushikdutta.async.PushParser$Waiter:
    int length -> length
    void <init>(int) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    void <init>() -> <init>
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.http.filter.ChunkedDataException -> com.koushikdutta.async.http.filter.ChunkedDataException:
    void <init>(java.lang.String) -> <init>
com.koushikdutta.async.http.AsyncSocketMiddleware$1 -> com.koushikdutta.async.http.AsyncSocketMiddleware$1:
    java.lang.Exception lastException -> lastException
    com.koushikdutta.async.http.AsyncSocketMiddleware this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    android.net.Uri val$uri -> val$uri
    int val$port -> val$port
    void transform(java.net.InetAddress[]) -> transform
    void <init>(com.koushikdutta.async.http.AsyncSocketMiddleware,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,android.net.Uri,int) -> <init>
    void error(java.lang.Exception) -> error
    void transform(java.lang.Object) -> transform
com.koushikdutta.async.http.AsyncHttpClient$JSONObjectCallback -> com.koushikdutta.async.http.AsyncHttpClient$JSONObjectCallback:
    void <init>() -> <init>
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    void <init>() -> <init>
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void <init>() -> <init>
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
com.koushikdutta.async.http.filter.GZIPInputFilter$1 -> com.koushikdutta.async.http.filter.GZIPInputFilter$1:
    int flags -> flags
    boolean hcrc -> hcrc
    com.koushikdutta.async.http.filter.GZIPInputFilter this$0 -> this$0
    com.koushikdutta.async.DataEmitter val$emitter -> val$emitter
    com.koushikdutta.async.PushParser val$parser -> val$parser
    void parsed(byte[]) -> parsed
    void next() -> next
    void done() -> done
    void <init>(com.koushikdutta.async.http.filter.GZIPInputFilter,com.koushikdutta.async.DataEmitter,com.koushikdutta.async.PushParser) -> <init>
    void parsed(java.lang.Object) -> parsed
    void -wrap0(com.koushikdutta.async.http.filter.GZIPInputFilter$1) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.filter.GZIPInputFilter$1) -> -wrap1
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    void <init>(android.content.Context) -> <init>
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void <clinit>() -> <clinit>
    int -get0() -> -get0
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    int mFlags -> mFlags
    boolean mIsRtlContext -> mIsRtlContext
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.util.Locale) -> <init>
    android.support.v4.text.BidiFormatter build() -> build
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    void <init>() -> <init>
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    void <init>(android.support.v4.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    boolean delete() -> delete
    boolean exists() -> exists
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.net.Uri getUri() -> getUri
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
android.support.v4.view.animation.PathInterpolatorCompat -> android.support.v4.view.animation.PathInterpolatorCompat:
    void <init>() -> <init>
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
com.koushikdutta.async.callback.ListenCallback -> com.koushikdutta.async.callback.ListenCallback:
    void onListening(com.koushikdutta.async.AsyncServerSocket) -> onListening
    void onAccepted(com.koushikdutta.async.AsyncSocket) -> onAccepted
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.String mAction -> mAction
    android.os.Bundle mExtras -> mExtras
    int mIcon -> mIcon
    java.lang.CharSequence mName -> mName
    void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
    android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    boolean mAbandoned -> mAbandoned
    boolean mContentChanged -> mContentChanged
    android.content.Context mContext -> mContext
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> mOnLoadCanceledListener
    boolean mProcessingChange -> mProcessingChange
    boolean mReset -> mReset
    boolean mStarted -> mStarted
    void <init>(android.content.Context) -> <init>
    void abandon() -> abandon
    boolean cancelLoad() -> cancelLoad
    void commitContentChanged() -> commitContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    void deliverCancellation() -> deliverCancellation
    void deliverResult(java.lang.Object) -> deliverResult
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void forceLoad() -> forceLoad
    android.content.Context getContext() -> getContext
    int getId() -> getId
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    boolean isStarted() -> isStarted
    void onAbandon() -> onAbandon
    boolean onCancelLoad() -> onCancelLoad
    void onContentChanged() -> onContentChanged
    void onForceLoad() -> onForceLoad
    void onReset() -> onReset
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    void reset() -> reset
    void rollbackContentChanged() -> rollbackContentChanged
    void startLoading() -> startLoading
    void stopLoading() -> stopLoading
    boolean takeContentChanged() -> takeContentChanged
    java.lang.String toString() -> toString
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map constantToName -> constantToName
    java.util.Map nameToConstant -> nameToConstant
    void <init>(java.lang.Class) -> <init>
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.koushikdutta.async.util.Allocator -> com.koushikdutta.async.util.Allocator:
    int currentAlloc -> currentAlloc
    int maxAlloc -> maxAlloc
    int minAlloc -> minAlloc
    void <init>() -> <init>
    com.koushikdutta.async.util.Allocator setMinAlloc(int) -> setMinAlloc
    java.nio.ByteBuffer allocate() -> allocate
    void track(long) -> track
    int getMinAlloc() -> getMinAlloc
    void <init>(int) -> <init>
    java.nio.ByteBuffer allocate(int) -> allocate
    int getMaxAlloc() -> getMaxAlloc
    void setCurrentAlloc(int) -> setCurrentAlloc
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
com.koushikdutta.ion.gson.GsonObjectParser -> com.koushikdutta.ion.gson.GsonObjectParser:
    void <init>() -> <init>
    void <init>(java.nio.charset.Charset) -> <init>
com.aokp.romcontrol.R$array -> com.aokp.romcontrol.R$array:
    int navigation_drawer_entries -> navigation_drawer_entries
    int navigation_drawer_values -> navigation_drawer_values
    int navigation_drawer_icons -> navigation_drawer_icons
    int choose_toggle_side_entries -> choose_toggle_side_entries
    int choose_toggle_side_values -> choose_toggle_side_values
    int entries_battery_submenu -> entries_battery_submenu
    int entries_status_bar_network_stats_update -> entries_status_bar_network_stats_update
    int entries_system_power_crt_mode -> entries_system_power_crt_mode
    int hide_ribbon_timeout_entries -> hide_ribbon_timeout_entries
    int hide_ribbon_timeout_values -> hide_ribbon_timeout_values
    int led_entries -> led_entries
    int led_values -> led_values
    int listview_animation_entries -> listview_animation_entries
    int listview_animation_values -> listview_animation_values
    int listview_interpolator_entries -> listview_interpolator_entries
    int listview_interpolator_values -> listview_interpolator_values
    int location_modes_toggle_entries -> location_modes_toggle_entries
    int location_modes_toggle_values -> location_modes_toggle_values
    int lockscreen_blur_radius_entries -> lockscreen_blur_radius_entries
    int lockscreen_blur_radius_values -> lockscreen_blur_radius_values
    int lockscreen_direction_descriptions -> lockscreen_direction_descriptions
    int lockscreen_target_descriptions_unlock_only -> lockscreen_target_descriptions_unlock_only
    int lockscreen_targets_unlock_only -> lockscreen_targets_unlock_only
    int navbar_dialog_entries -> navbar_dialog_entries
    int navbar_dialog_values -> navbar_dialog_values
    int navigation_bar_height_entries -> navigation_bar_height_entries
    int navigation_bar_height_landscape_entries -> navigation_bar_height_landscape_entries
    int navigation_bar_height_landscape_values -> navigation_bar_height_landscape_values
    int navigation_bar_height_values -> navigation_bar_height_values
    int navigation_bar_width_entries -> navigation_bar_width_entries
    int navigation_bar_width_values -> navigation_bar_width_values
    int navring_long_dialog_entries -> navring_long_dialog_entries
    int navring_long_dialog_values -> navring_long_dialog_values
    int navring_short_dialog_entries -> navring_short_dialog_entries
    int navring_short_dialog_values -> navring_short_dialog_values
    int network_modes_entries -> network_modes_entries
    int network_modes_values -> network_modes_values
    int notifications_height_entries -> notifications_height_entries
    int notifications_height_values -> notifications_height_values
    int notifications_offset_entries -> notifications_offset_entries
    int notifications_offset_values -> notifications_offset_values
    int power_menuEntries -> power_menuEntries
    int power_menuValues -> power_menuValues
    int pref_navring_amount_entries -> pref_navring_amount_entries
    int pref_navring_amount_values -> pref_navring_amount_values
    int ribbon_handle_location_entries -> ribbon_handle_location_entries
    int ribbon_handle_location_values -> ribbon_handle_location_values
    int screenshot_delayEntries -> screenshot_delayEntries
    int screenshot_delayValues -> screenshot_delayValues
    int setting_keyActionEntries -> setting_keyActionEntries
    int setting_keyActionValues -> setting_keyActionValues
    int setting_toggleStyles -> setting_toggleStyles
    int setting_toggleStylesValues -> setting_toggleStylesValues
    int setting_togglesPerRow -> setting_togglesPerRow
    int setting_togglesPerRowValues -> setting_togglesPerRowValues
    int statusbar_clock_am_pm_styleEntries -> statusbar_clock_am_pm_styleEntries
    int statusbar_clock_am_pm_styleValues -> statusbar_clock_am_pm_styleValues
    int statusbar_clock_dateEntries -> statusbar_clock_dateEntries
    int statusbar_clock_dateValues -> statusbar_clock_dateValues
    int statusbar_clock_styleEntries -> statusbar_clock_styleEntries
    int statusbar_clock_styleValues -> statusbar_clock_styleValues
    int statusbar_clock_weekdayEntries -> statusbar_clock_weekdayEntries
    int statusbar_clock_weekdayValues -> statusbar_clock_weekdayValues
    int toast_animation_entries -> toast_animation_entries
    int toast_animation_values -> toast_animation_values
    int values_battery_submenu -> values_battery_submenu
    int values_status_bar_network_stats_update -> values_status_bar_network_stats_update
    int values_system_power_crt_mode -> values_system_power_crt_mode
    int volume_key_cursor_control_entries -> volume_key_cursor_control_entries
    int volume_key_cursor_control_values -> volume_key_cursor_control_values
    void <init>() -> <init>
com.koushikdutta.async.util.FileCache$CacheEntry -> com.koushikdutta.async.util.FileCache$CacheEntry:
    long size -> size
    com.koushikdutta.async.util.FileCache this$0 -> this$0
    void <init>(com.koushikdutta.async.util.FileCache,java.io.File) -> <init>
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    void <init>() -> <init>
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    int[] $SWITCH_TABLE$com$google$gson$stream$JsonToken -> $SWITCH_TABLE$com$google$gson$stream$JsonToken
    int[] -com_google_gson_stream_JsonTokenSwitchesValues -> -com_google_gson_stream_JsonTokenSwitchesValues
    void <init>() -> <init>
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    int[] -getcom_google_gson_stream_JsonTokenSwitchesValues() -> -getcom_google_gson_stream_JsonTokenSwitchesValues
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void <init>() -> <init>
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    void <init>() -> <init>
    void <clinit>() -> <clinit>
    float getInterpolation(float) -> getInterpolation
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int CLOSED -> CLOSED
    int DANGLING_NAME -> DANGLING_NAME
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    void <init>() -> <init>
com.koushikdutta.async.AsyncServer$ConnectFuture -> com.koushikdutta.async.AsyncServer$ConnectFuture:
    com.koushikdutta.async.callback.ConnectCallback callback -> callback
    java.nio.channels.SocketChannel socket -> socket
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncServer) -> <init>
    void cancelCleanup() -> cancelCleanup
    void <init>(com.koushikdutta.async.AsyncServer,com.koushikdutta.async.AsyncServer$ConnectFuture) -> <init>
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    void <init>() -> <init>
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    boolean isActive(java.lang.Object) -> isActive
    void release(java.lang.Object) -> release
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void setActive(java.lang.Object,boolean) -> setActive
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    void setFlags(java.lang.Object,int) -> setFlags
    void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> setMediaButtonReceiver
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setQueue(java.lang.Object,java.util.List) -> setQueue
    void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> setQueueTitle
    void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> setSessionActivity
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object verifyToken(java.lang.Object) -> verifyToken
com.koushikdutta.async.AsyncSSLSocketWrapper$5 -> com.koushikdutta.async.AsyncSSLSocketWrapper$5:
    com.koushikdutta.async.AsyncSSLSocketWrapper this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncSSLSocketWrapper) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    void <init>() -> <init>
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.koushikdutta.ion.builder.ImageViewFutureBuilder -> com.koushikdutta.ion.builder.ImageViewFutureBuilder:
    com.koushikdutta.ion.future.ImageViewFuture intoImageView(android.widget.ImageView) -> intoImageView
com.koushikdutta.async.util.StreamUtility -> com.koushikdutta.async.util.StreamUtility:
    void <init>() -> <init>
    void closeQuietly(java.io.Closeable[]) -> closeQuietly
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void eat(java.io.InputStream) -> eat
    void fastChannelCopy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel) -> fastChannelCopy
    java.lang.String readFile(java.lang.String) -> readFile
    java.lang.String readFile(java.io.File) -> readFile
    java.lang.String readFileSilent(java.lang.String) -> readFileSilent
    java.lang.String readToEnd(java.io.InputStream) -> readToEnd
    byte[] readToEndAsArray(java.io.InputStream) -> readToEndAsArray
    void writeFile(java.io.File,java.lang.String) -> writeFile
    void writeFile(java.lang.String,java.lang.String) -> writeFile
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    void <init>() -> <init>
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.LayoutInflaterCompatLollipop:
    void <init>() -> <init>
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
com.koushikdutta.ion.ImageViewFutureImpl$1 -> com.koushikdutta.ion.ImageViewFutureImpl$1:
    void <init>() -> <init>
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback val$callback -> val$callback
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback) -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationFailed() -> onAuthenticationFailed
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
android.support.v4.widget.PopupWindowCompatGingerbread -> android.support.v4.widget.PopupWindowCompatGingerbread:
    java.lang.reflect.Method sGetWindowLayoutTypeMethod -> sGetWindowLayoutTypeMethod
    boolean sGetWindowLayoutTypeMethodAttempted -> sGetWindowLayoutTypeMethodAttempted
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> sSetWindowLayoutTypeMethod
    boolean sSetWindowLayoutTypeMethodAttempted -> sSetWindowLayoutTypeMethodAttempted
    void <init>() -> <init>
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void <init>() -> <init>
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.annotation.CheckResult -> android.support.annotation.CheckResult:
    java.lang.String suggest() -> suggest
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    void <init>() -> <init>
    void abortAnimation(java.lang.Object) -> abortAnimation
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
    boolean isFinished(java.lang.Object) -> isFinished
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.koushikdutta.async.http.AsyncHttpClient$JSONArrayCallback -> com.koushikdutta.async.http.AsyncHttpClient$JSONArrayCallback:
    void <init>() -> <init>
com.koushikdutta.async.http.socketio.SocketIOClient$1 -> com.koushikdutta.async.http.socketio.SocketIOClient$1:
    com.koushikdutta.async.http.socketio.SocketIORequest val$request -> val$request
    com.koushikdutta.async.http.socketio.ConnectCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.http.socketio.SocketIOConnection val$connection -> val$connection
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.socketio.SocketIOClient) -> onConnectCompleted
    void <init>(com.koushikdutta.async.http.socketio.SocketIORequest,com.koushikdutta.async.http.socketio.ConnectCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.http.socketio.SocketIOConnection) -> <init>
android.support.v4.app.ActivityCompat22 -> android.support.v4.app.ActivityCompat22:
    void <init>() -> <init>
    android.net.Uri getReferrer(android.app.Activity) -> getReferrer
com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1$1 -> com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1$1:
    java.lang.String statusLine -> statusLine
    com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1 this$2 -> this$2
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData val$data -> val$data
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    com.koushikdutta.async.callback.ConnectCallback val$callback -> val$callback
    android.net.Uri val$uri -> val$uri
    int val$port -> val$port
    void <init>(com.koushikdutta.async.http.AsyncSSLSocketMiddleware$2$1,com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.callback.ConnectCallback,android.net.Uri,int) -> <init>
    void onStringAvailable(java.lang.String) -> onStringAvailable
com.koushikdutta.ion.loader.FileLoader$2 -> com.koushikdutta.ion.loader.FileLoader$2:
    com.koushikdutta.ion.loader.FileLoader this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.ion.Ion val$ion -> val$ion
    com.koushikdutta.ion.loader.FileLoader$FileFuture val$ret -> val$ret
    com.koushikdutta.async.future.FutureCallback val$callback -> val$callback
    void <init>(com.koushikdutta.ion.loader.FileLoader,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.Ion,com.koushikdutta.ion.loader.FileLoader$FileFuture,com.koushikdutta.async.future.FutureCallback) -> <init>
    void run() -> run
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    void <init>() -> <init>
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void -wrap0(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> -wrap0
com.koushikdutta.async.FileDataEmitter -> com.koushikdutta.async.FileDataEmitter:
    com.koushikdutta.async.callback.DataCallback callback -> callback
    java.nio.channels.FileChannel channel -> channel
    java.io.File file -> file
    boolean paused -> paused
    com.koushikdutta.async.ByteBufferList pending -> pending
    java.lang.Runnable pumper -> pumper
    com.koushikdutta.async.AsyncServer server -> server
    void <init>(com.koushikdutta.async.AsyncServer,java.io.File) -> <init>
    void close() -> close
    void doResume() -> doResume
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    boolean isChunked() -> isChunked
    boolean isPaused() -> isPaused
    void pause() -> pause
    void report(java.lang.Exception) -> report
    void resume() -> resume
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
com.aokp.romcontrol.fragments.NavigationDrawerFragment$3 -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$3:
    com.aokp.romcontrol.fragments.NavigationDrawerFragment this$0 -> this$0
    void <init>(com.aokp.romcontrol.fragments.NavigationDrawerFragment) -> <init>
    void run() -> run
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    void <init>(android.graphics.Rect) -> <init>
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    void <init>() -> <init>
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean isDismissable(java.lang.Object) -> isDismissable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    void setInputType(java.lang.Object,int) -> setInputType
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
com.koushikdutta.async.http.WebSocketHandshakeException -> com.koushikdutta.async.http.WebSocketHandshakeException:
    void <init>(java.lang.String) -> <init>
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.os.TraceJellybeanMR2:
    void <init>() -> <init>
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    android.app.PendingIntent mMediaButtonIntent -> mMediaButtonIntent
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void <init>(java.lang.Object) -> <init>
    void <init>(android.content.Context,java.lang.String) -> <init>
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    boolean isActive() -> isActive
    void release() -> release
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void setActive(boolean) -> setActive
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setExtras(android.os.Bundle) -> setExtras
    void setFlags(int) -> setFlags
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
com.koushikdutta.async.http.spdy.FrameWriter -> com.koushikdutta.async.http.spdy.FrameWriter:
    void ackSettings() -> ackSettings
    void connectionPreface() -> connectionPreface
    void data(boolean,int,com.koushikdutta.async.ByteBufferList) -> data
    void goAway(int,com.koushikdutta.async.http.spdy.ErrorCode,byte[]) -> goAway
    void headers(int,java.util.List) -> headers
    void ping(boolean,int,int) -> ping
    void pushPromise(int,int,java.util.List) -> pushPromise
    void rstStream(int,com.koushikdutta.async.http.spdy.ErrorCode) -> rstStream
    void settings(com.koushikdutta.async.http.spdy.Settings) -> settings
    void synReply(boolean,int,java.util.List) -> synReply
    void synStream(boolean,boolean,int,int,java.util.List) -> synStream
    void windowUpdate(int,long) -> windowUpdate
com.koushikdutta.async.PushParser$ByteBufferListWaiter -> com.koushikdutta.async.PushParser$ByteBufferListWaiter:
    com.koushikdutta.async.PushParser$ParseCallback callback -> callback
    void <init>(int,com.koushikdutta.async.PushParser$ParseCallback) -> <init>
    com.koushikdutta.async.PushParser$Waiter onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.ion.ContextReference$ServiceContextReference -> com.koushikdutta.ion.ContextReference$ServiceContextReference:
    void <init>(android.app.Service) -> <init>
    java.lang.String isAlive() -> isAlive
    java.lang.String isAlive(android.app.Service) -> isAlive
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> <init>
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
com.koushikdutta.async.stream.InputStreamDataEmitter$1$1 -> com.koushikdutta.async.stream.InputStreamDataEmitter$1$1:
    com.koushikdutta.async.stream.InputStreamDataEmitter$1 this$1 -> this$1
    void <init>(com.koushikdutta.async.stream.InputStreamDataEmitter$1) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    boolean performAction(java.lang.Object,int) -> performAction
    void recycle(java.lang.Object) -> recycle
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void <init>() -> <init>
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
com.koushikdutta.async.util.FileUtility -> com.koushikdutta.async.util.FileUtility:
    void <init>() -> <init>
    boolean deleteDirectory(java.io.File) -> deleteDirectory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void <init>() -> <init>
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.aokp.romcontrol.fragments.LockScreenSettingsFragment -> com.aokp.romcontrol.fragments.LockScreenSettingsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    void <init>() -> <init>
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.aokp.romcontrol.settings.CheckboxSetting -> com.aokp.romcontrol.settings.CheckboxSetting:
    java.lang.String aDescriptionOff -> aDescriptionOff
    java.lang.String aDescriptionOn -> aDescriptionOn
    android.widget.CheckBox mCheckBox -> mCheckBox
    java.lang.Boolean mChecked -> mChecked
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean isChecked() -> isChecked
    void onClick(android.view.View) -> onClick
    void setChecked(boolean) -> setChecked
    void updateSummary() -> updateSummary
com.koushikdutta.async.parser.StringParser -> com.koushikdutta.async.parser.StringParser:
    java.nio.charset.Charset forcedCharset -> forcedCharset
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void <init>() -> <init>
    void <init>(java.nio.charset.Charset) -> <init>
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,java.lang.String,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    java.lang.Object construct() -> construct
com.koushikdutta.async.http.spdy.HpackDraft08$Writer -> com.koushikdutta.async.http.spdy.HpackDraft08$Writer:
    void <init>() -> <init>
    void writeByteString(java.nio.ByteBuffer,com.koushikdutta.async.http.spdy.ByteString) -> writeByteString
    com.koushikdutta.async.ByteBufferList writeHeaders(java.util.List) -> writeHeaders
    void writeInt(java.nio.ByteBuffer,int,int,int) -> writeInt
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    int mScaleMode -> mScaleMode
    void <init>() -> <init>
    int getColorMode() -> getColorMode
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    void setScaleMode(int) -> setScaleMode
    void <init>(android.support.v4.print.PrintHelper$PrintHelperStubImpl) -> <init>
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    boolean all -> all
    int id -> id
    java.lang.String packageName -> packageName
    java.lang.String tag -> tag
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$2 -> com.koushikdutta.ion.IonRequestBuilder$EmitterTransform$2:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform this$1 -> this$1
    com.koushikdutta.ion.HeadersResponse val$headers -> val$headers
    void <init>(com.koushikdutta.ion.IonRequestBuilder$EmitterTransform,com.koushikdutta.ion.HeadersResponse) -> <init>
    void run() -> run
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    void <init>() -> <init>
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    void <init>() -> <init>
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void <init>(android.support.v4.media.TransportMediatorJellybeanMR2) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23:
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void <init>(android.content.Context) -> <init>
    void onActionViewCollapsed() -> onActionViewCollapsed
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    void <init>(com.google.gson.internal.LinkedTreeMap$KeySet,com.google.gson.internal.LinkedTreeMap) -> <init>
    java.lang.Object next() -> next
com.koushikdutta.async.http.cache.HeaderParser$CacheControlHandler -> com.koushikdutta.async.http.cache.HeaderParser$CacheControlHandler:
    void handle(java.lang.String,java.lang.String) -> handle
com.koushikdutta.async.http.body.UrlEncodedFormBody$2 -> com.koushikdutta.async.http.body.UrlEncodedFormBody$2:
    com.koushikdutta.async.http.body.UrlEncodedFormBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    com.koushikdutta.async.ByteBufferList val$data -> val$data
    void <init>(com.koushikdutta.async.http.body.UrlEncodedFormBody,com.koushikdutta.async.callback.CompletedCallback,com.koushikdutta.async.ByteBufferList) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    void <init>(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> <init>
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void adjustVolume(int,int) -> adjustVolume
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    java.lang.Object getMediaController() -> getMediaController
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void setVolumeTo(int,int) -> setVolumeTo
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    void <init>() -> <init>
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    void <init>() -> <init>
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.koushikdutta.ion.loader.MediaFile$MediaFileType -> com.koushikdutta.ion.loader.MediaFile$MediaFileType:
    int fileType -> fileType
    java.lang.String mimeType -> mimeType
    void <init>(int,java.lang.String) -> <init>
com.koushikdutta.async.http.spdy.Http20Draft13$Reader -> com.koushikdutta.async.http.spdy.Http20Draft13$Reader:
    boolean client -> client
    int continuingStreamId -> continuingStreamId
    com.koushikdutta.async.DataEmitter emitter -> emitter
    byte flags -> flags
    com.koushikdutta.async.http.spdy.FrameReader$Handler handler -> handler
    com.koushikdutta.async.http.spdy.HpackDraft08$Reader hpackReader -> hpackReader
    short length -> length
    com.koushikdutta.async.callback.DataCallback onFrame -> onFrame
    com.koushikdutta.async.callback.DataCallback onFullFrame -> onFullFrame
    byte pendingHeaderType -> pendingHeaderType
    int promisedStreamId -> promisedStreamId
    com.koushikdutta.async.DataEmitterReader reader -> reader
    int streamId -> streamId
    byte type -> type
    int w1 -> w1
    int w2 -> w2
    void <init>(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.spdy.FrameReader$Handler,int,boolean) -> <init>
    void parseFrameHeader() -> parseFrameHeader
    void readContinuation(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readContinuation
    void readData(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readData
    void readGoAway(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readGoAway
    void readHeaderBlock(com.koushikdutta.async.ByteBufferList,short,short,byte,int) -> readHeaderBlock
    void readHeaders(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readHeaders
    void readPing(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readPing
    void readPriority(com.koushikdutta.async.ByteBufferList,int) -> readPriority
    void readPriority(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readPriority
    void readPushPromise(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readPushPromise
    void readRstStream(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readRstStream
    void readSettings(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readSettings
    void readWindowUpdate(com.koushikdutta.async.ByteBufferList,short,byte,int) -> readWindowUpdate
    com.koushikdutta.async.http.spdy.FrameReader$Handler -get0(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> -get0
    com.koushikdutta.async.callback.DataCallback -get1(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> -get1
    com.koushikdutta.async.DataEmitterReader -get2(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> -get2
    void -wrap0(com.koushikdutta.async.http.spdy.Http20Draft13$Reader) -> -wrap0
    void -wrap1(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap1
    void -wrap2(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap2
    void -wrap3(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap3
    void -wrap4(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap4
    void -wrap5(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap5
    void -wrap6(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap6
    void -wrap7(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap7
    void -wrap8(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap8
    void -wrap9(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap9
    void -wrap10(com.koushikdutta.async.http.spdy.Http20Draft13$Reader,com.koushikdutta.async.ByteBufferList,short,byte,int) -> -wrap10
com.koushikdutta.async.AsyncServer$3 -> com.koushikdutta.async.AsyncServer$3:
    com.koushikdutta.async.AsyncServer this$0 -> this$0
    java.lang.Runnable val$runnable -> val$runnable
    java.util.concurrent.Semaphore val$semaphore -> val$semaphore
    void <init>(com.koushikdutta.async.AsyncServer,java.lang.Runnable,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavigationDrawerAdapter -> com.aokp.romcontrol.fragments.NavigationDrawerFragment$NavigationDrawerAdapter:
    int[] mIconResources -> mIconResources
    void <init>(android.content.Context,java.lang.String[],int) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v4.content.res.TypedArrayUtils -> android.support.v4.content.res.TypedArrayUtils:
    void <init>() -> <init>
    boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
com.aokp.romcontrol.settings.MultiChoiceSetting -> com.aokp.romcontrol.settings.MultiChoiceSetting:
    java.util.ArrayList mAvailableValues -> mAvailableValues
    java.lang.String[] mEntries -> mEntries
    int mMaxSelectionCount -> mMaxSelectionCount
    int mMinSelectionCount -> mMinSelectionCount
    java.util.ArrayList mSelectedValues -> mSelectedValues
    java.lang.String[] mValues -> mValues
    void onClick(android.view.View) -> onClick
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean checkSelectionCount() -> checkSelectionCount
    boolean[] getCheckedValues() -> getCheckedValues
    java.lang.String[] getEntries() -> getEntries
    java.lang.String[] getEntryValues() -> getEntryValues
    void setEntries(java.lang.String[]) -> setEntries
    void setEntries(int) -> setEntries
    void setEntryValues(java.lang.String[]) -> setEntryValues
    void setEntryValues(int) -> setEntryValues
    void updateSummary(java.lang.String) -> updateSummary
    java.util.ArrayList -get0(com.aokp.romcontrol.settings.MultiChoiceSetting) -> -get0
    java.util.ArrayList -get1(com.aokp.romcontrol.settings.MultiChoiceSetting) -> -get1
    boolean -wrap0(com.aokp.romcontrol.settings.MultiChoiceSetting) -> -wrap0
com.koushikdutta.async.http.cache.StrictLineReader -> com.koushikdutta.async.http.cache.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    byte[] buf -> buf
    int end -> end
    java.io.InputStream in -> in
    int pos -> pos
    void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    java.lang.String readLine() -> readLine
    int readInt() -> readInt
    void <init>(java.io.InputStream) -> <init>
    void <init>(java.io.InputStream,int) -> <init>
    void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    void close() -> close
    void fillBuf() -> fillBuf
    boolean hasUnterminatedLine() -> hasUnterminatedLine
com.koushikdutta.async.parser.DocumentParser$1 -> com.koushikdutta.async.parser.DocumentParser$1:
    com.koushikdutta.async.parser.DocumentParser this$0 -> this$0
    void <init>(com.koushikdutta.async.parser.DocumentParser) -> <init>
    void transform(com.koushikdutta.async.ByteBufferList) -> transform
    void transform(java.lang.Object) -> transform
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$1 -> this$1
    void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    void run() -> run
com.koushikdutta.async.FileDataEmitter$1 -> com.koushikdutta.async.FileDataEmitter$1:
    com.koushikdutta.async.FileDataEmitter this$0 -> this$0
    void <init>(com.koushikdutta.async.FileDataEmitter) -> <init>
    void run() -> run
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getId() -> getId
    java.lang.String getName() -> getName
com.aokp.romcontrol.widgets.DeveloperPreference$2 -> com.aokp.romcontrol.widgets.DeveloperPreference$2:
    com.aokp.romcontrol.widgets.DeveloperPreference this$0 -> this$0
    void <init>(com.aokp.romcontrol.widgets.DeveloperPreference) -> <init>
    void onClick(android.view.View) -> onClick
com.aokp.romcontrol.MainActivity -> com.aokp.romcontrol.MainActivity:
    java.lang.String[] mDrawerEntries -> mDrawerEntries
    java.lang.String[] mDrawerValues -> mDrawerValues
    com.aokp.romcontrol.fragments.NavigationDrawerFragment mNavigationDrawerFragment -> mNavigationDrawerFragment
    android.app.Fragment mSelectedFragment -> mSelectedFragment
    java.lang.CharSequence mTitle -> mTitle
    void <init>() -> <init>
    android.app.Fragment getFragmentToAttach(int) -> getFragmentToAttach
    boolean isLauncherIconEnabled() -> isLauncherIconEnabled
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onNavigationDrawerItemSelected(int) -> onNavigationDrawerItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void restoreActionBar() -> restoreActionBar
    void setLauncherIconEnabled(boolean) -> setLauncherIconEnabled
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    void <init>() -> <init>
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    boolean mRegistered -> mRegistered
    void <init>() -> <init>
    void binderDied() -> binderDied
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void setHandler(android.os.Handler) -> setHandler
    java.lang.Object -get0(android.support.v4.media.session.MediaControllerCompat$Callback) -> -get0
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -get1(android.support.v4.media.session.MediaControllerCompat$Callback) -> -get1
    boolean -get2(android.support.v4.media.session.MediaControllerCompat$Callback) -> -get2
    boolean -set0(android.support.v4.media.session.MediaControllerCompat$Callback,boolean) -> -set0
    void -wrap0(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> -wrap0
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void <init>(android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> <init>
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    java.lang.String TAG -> TAG
    boolean mCanSlide -> mCanSlide
    int mCoveredFadeColor -> mCoveredFadeColor
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mFirstLayout -> mFirstLayout
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mOverhangSize -> mOverhangSize
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    int mParallaxBy -> mParallaxBy
    float mParallaxOffset -> mParallaxOffset
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    boolean mPreservedOpenState -> mPreservedOpenState
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    float mSlideOffset -> mSlideOffset
    int mSlideRange -> mSlideRange
    android.view.View mSlideableView -> mSlideableView
    int mSliderFadeColor -> mSliderFadeColor
    android.graphics.Rect mTmpRect -> mTmpRect
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean canSlide() -> canSlide
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean closePane() -> closePane
    boolean closePane(android.view.View,int) -> closePane
    void computeScroll() -> computeScroll
    void dimChildView(android.view.View,float,int) -> dimChildView
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void draw(android.graphics.Canvas) -> draw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int getCoveredFadeColor() -> getCoveredFadeColor
    int getParallaxDistance() -> getParallaxDistance
    int getSliderFadeColor() -> getSliderFadeColor
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean isDimmed(android.view.View) -> isDimmed
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean isOpen() -> isOpen
    boolean isSlideable() -> isSlideable
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onPanelDragged(int) -> onPanelDragged
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean openPane() -> openPane
    boolean openPane(android.view.View,int) -> openPane
    void parallaxOtherViews(float) -> parallaxOtherViews
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void setAllChildrenVisible() -> setAllChildrenVisible
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void setParallaxDistance(int) -> setParallaxDistance
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void setSliderFadeColor(int) -> setSliderFadeColor
    void smoothSlideClosed() -> smoothSlideClosed
    void smoothSlideOpen() -> smoothSlideOpen
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void <clinit>() -> <clinit>
    android.support.v4.widget.ViewDragHelper -get0(android.support.v4.widget.SlidingPaneLayout) -> -get0
    boolean -get1(android.support.v4.widget.SlidingPaneLayout) -> -get1
    java.util.ArrayList -get2(android.support.v4.widget.SlidingPaneLayout) -> -get2
    float -get3(android.support.v4.widget.SlidingPaneLayout) -> -get3
    int -get4(android.support.v4.widget.SlidingPaneLayout) -> -get4
    android.view.View -get5(android.support.v4.widget.SlidingPaneLayout) -> -get5
    boolean -set0(android.support.v4.widget.SlidingPaneLayout,boolean) -> -set0
    boolean -wrap0(android.support.v4.widget.SlidingPaneLayout) -> -wrap0
    void -wrap1(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> -wrap1
    void -wrap2(android.support.v4.widget.SlidingPaneLayout,int) -> -wrap2
com.koushikdutta.async.http.spdy.SpdyMiddleware$NoSpdyException -> com.koushikdutta.async.http.spdy.SpdyMiddleware$NoSpdyException:
    void <init>() -> <init>
    void <init>(com.koushikdutta.async.http.spdy.SpdyMiddleware$NoSpdyException) -> <init>
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
com.koushikdutta.async.http.cache.HeaderParser -> com.koushikdutta.async.http.cache.HeaderParser:
    int parseSeconds(java.lang.String) -> parseSeconds
    void parseCacheControl(java.lang.String,com.koushikdutta.async.http.cache.HeaderParser$CacheControlHandler) -> parseCacheControl
    void <init>() -> <init>
    int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    int skipWhitespace(java.lang.String,int) -> skipWhitespace
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void <init>() -> <init>
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeTouched(int,int) -> onEdgeTouched
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.koushikdutta.async.Util$3 -> com.koushikdutta.async.Util$3:
    com.koushikdutta.async.DataSink val$sink -> val$sink
    void <init>(com.koushikdutta.async.DataSink) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    void <init>() -> <init>
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
com.koushikdutta.async.http.HttpUtil -> com.koushikdutta.async.http.HttpUtil:
    boolean isKeepAlive(java.lang.String,com.koushikdutta.async.http.Headers) -> isKeepAlive
    boolean isKeepAlive(com.koushikdutta.async.http.Protocol,com.koushikdutta.async.http.Headers) -> isKeepAlive
    void <init>() -> <init>
    int contentLength(com.koushikdutta.async.http.Headers) -> contentLength
    com.koushikdutta.async.http.body.AsyncHttpRequestBody getBody(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback,com.koushikdutta.async.http.Headers) -> getBody
    com.koushikdutta.async.DataEmitter getBodyDecoder(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.Protocol,com.koushikdutta.async.http.Headers,boolean) -> getBodyDecoder
com.koushikdutta.async.util.TaggedList -> com.koushikdutta.async.util.TaggedList:
    java.lang.Object tag -> tag
    java.lang.Object tag() -> tag
    void <init>() -> <init>
    void tag(java.lang.Object) -> tag
    void tagNull(java.lang.Object) -> tagNull
android.support.v4.app.BaseFragmentActivityDonut -> android.support.v4.app.BaseFragmentActivityDonut:
    void <init>() -> <init>
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> <init>
    boolean onPreDraw() -> onPreDraw
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.koushikdutta.ion.builder.MultipartBodyBuilder -> com.koushikdutta.ion.builder.MultipartBodyBuilder:
    com.koushikdutta.ion.builder.MultipartBodyBuilder addMultipartParts(java.lang.Iterable) -> addMultipartParts
    com.koushikdutta.ion.builder.MultipartBodyBuilder addMultipartParts(com.koushikdutta.async.http.body.Part[]) -> addMultipartParts
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartContentType(java.lang.String) -> setMultipartContentType
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartFile(java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartFile(java.lang.String,java.lang.String,java.io.File) -> setMultipartFile
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartParameter(java.lang.String,java.lang.String) -> setMultipartParameter
    com.koushikdutta.ion.builder.MultipartBodyBuilder setMultipartParameters(java.util.Map) -> setMultipartParameters
android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void <init>(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> <init>
    void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    void <init>() -> <init>
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int ANIMATION_DURATION -> ANIMATION_DURATION
    int ARROW_HEIGHT -> ARROW_HEIGHT
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    float CENTER_RADIUS -> CENTER_RADIUS
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    int[] COLORS -> COLORS
    float COLOR_START_DELAY_OFFSET -> COLOR_START_DELAY_OFFSET
    float END_TRIM_START_DELAY_OFFSET -> END_TRIM_START_DELAY_OFFSET
    float FULL_ROTATION -> FULL_ROTATION
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    float NUM_POINTS -> NUM_POINTS
    float START_TRIM_DURATION_OFFSET -> START_TRIM_DURATION_OFFSET
    float STROKE_WIDTH -> STROKE_WIDTH
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    android.view.animation.Animation mAnimation -> mAnimation
    java.util.ArrayList mAnimators -> mAnimators
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    boolean mFinishing -> mFinishing
    double mHeight -> mHeight
    android.view.View mParent -> mParent
    android.content.res.Resources mResources -> mResources
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    void setAlpha(int) -> setAlpha
    void start() -> start
    void stop() -> stop
    void setArrowScale(float) -> setArrowScale
    void updateSizes(int) -> updateSizes
    void <init>(android.content.Context,android.view.View) -> <init>
    void setBackgroundColor(int) -> setBackgroundColor
    int getAlpha() -> getAlpha
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void showArrow(boolean) -> showArrow
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setupAnimators() -> setupAnimators
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void draw(android.graphics.Canvas) -> draw
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> getMinProgressArc
    int getOpacity() -> getOpacity
    float getRotation() -> getRotation
    boolean isRunning() -> isRunning
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> updateRingColor
    void <clinit>() -> <clinit>
    android.view.animation.Interpolator -get0() -> -get0
    float -get1(android.support.v4.widget.MaterialProgressDrawable) -> -get1
    float -set0(android.support.v4.widget.MaterialProgressDrawable,float) -> -set0
    float -wrap0(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> -wrap0
    void -wrap1(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> -wrap1
    void -wrap2(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> -wrap2
com.aokp.romcontrol.util.EasyPair -> com.aokp.romcontrol.util.EasyPair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    void <init>(com.aokp.romcontrol.util.EasyPair) -> <init>
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    void changeFirst(java.lang.Object) -> changeFirst
    void changeSecond(java.lang.Object) -> changeSecond
    com.aokp.romcontrol.util.EasyPair clonePair() -> clonePair
    boolean equals() -> equals
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getSecond() -> getSecond
    java.lang.String toString() -> toString
com.koushikdutta.async.http.AsyncHttpClient$StringCallback -> com.koushikdutta.async.http.AsyncHttpClient$StringCallback:
    void <init>() -> <init>
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    void <init>(android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> <init>
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    void <init>() -> <init>
    android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.DragSortListView$FloatViewManager:
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
com.koushikdutta.ion.builder.BitmapFutureBuilder -> com.koushikdutta.ion.builder.BitmapFutureBuilder:
    com.koushikdutta.async.future.Future asBitmap() -> asBitmap
    com.koushikdutta.ion.bitmap.BitmapInfo asCachedBitmap() -> asCachedBitmap
    com.koushikdutta.ion.bitmap.LocallyCachedStatus isLocallyCached() -> isLocallyCached
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
com.koushikdutta.async.http.spdy.FrameReader -> com.koushikdutta.async.http.spdy.FrameReader:
com.koushikdutta.ion.IonRequestBuilder$6$1 -> com.koushikdutta.ion.IonRequestBuilder$6$1:
    com.koushikdutta.ion.IonRequestBuilder$6 this$1 -> this$1
    void <init>(com.koushikdutta.ion.IonRequestBuilder$6) -> <init>
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.ContextReference -> com.koushikdutta.ion.ContextReference:
    android.content.Context getContext() -> getContext
    com.koushikdutta.ion.ContextReference fromContext(android.content.Context) -> fromContext
    java.lang.String isAlive() -> isAlive
    void <init>(java.lang.Object) -> <init>
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl:
    com.koushikdutta.async.callback.CompletedCallback closedCallback -> closedCallback
    int code -> code
    boolean ended -> ended
    boolean headWritten -> headWritten
    long mContentLength -> mContentLength
    boolean mEnded -> mEnded
    com.koushikdutta.async.http.Headers mRawHeaders -> mRawHeaders
    com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl mRequest -> mRequest
    com.koushikdutta.async.DataSink mSink -> mSink
    com.koushikdutta.async.AsyncSocket mSocket -> mSocket
    com.koushikdutta.async.callback.WritableCallback writable -> writable
    boolean -assertionsDisabled -> -assertionsDisabled
    void initFirstWrite() -> initFirstWrite
    void send(java.lang.String,byte[]) -> send
    void sendStream(java.io.InputStream,long) -> sendStream
    void proxy(com.koushikdutta.async.http.AsyncHttpResponse) -> proxy
    void <init>(com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl) -> <init>
    int code() -> code
    com.koushikdutta.async.http.server.AsyncHttpServerResponse code(int) -> code
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.http.Headers getHeaders() -> getHeaders
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.AsyncSocket getSocket() -> getSocket
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isOpen() -> isOpen
    void onCompleted(java.lang.Exception) -> onCompleted
    void onEnd() -> onEnd
    void redirect(java.lang.String) -> redirect
    void report(java.lang.Exception) -> report
    void send(java.lang.String) -> send
    void send(org.json.JSONObject) -> send
    void send(java.lang.String,java.lang.String) -> send
    void sendFile(java.io.File) -> sendFile
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setContentType(java.lang.String) -> setContentType
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    java.lang.String toString() -> toString
    void write(com.koushikdutta.async.ByteBufferList) -> write
    void writeHead() -> writeHead
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback -> com.koushikdutta.async.http.server.AsyncHttpServer$WebSocketRequestCallback:
    void onConnected(com.koushikdutta.async.http.WebSocket,com.koushikdutta.async.http.server.AsyncHttpServerRequest) -> onConnected
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void <init>() -> <init>
    int getBufferPercentage() -> getBufferPercentage
    long getCurrentPosition() -> getCurrentPosition
    long getDuration() -> getDuration
    int getTransportControlFlags() -> getTransportControlFlags
    boolean isPlaying() -> isPlaying
    void pausePlaying() -> pausePlaying
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void seekTo(long) -> seekTo
    void startPlaying() -> startPlaying
    void stopPlaying() -> stopPlaying
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    void <init>() -> <init>
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback -> val$callback
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationFailed() -> onAuthenticationFailed
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    int HOST_ID -> HOST_ID
    int INVALID_ID -> INVALID_ID
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int[] mTempGlobalRect -> mTempGlobalRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    android.view.View mView -> mView
    void <init>(android.view.View) -> <init>
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    int getFocusedVirtualView() -> getFocusedVirtualView
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    void <clinit>() -> <clinit>
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -wrap0(android.support.v4.widget.ExploreByTouchHelper,int) -> -wrap0
    boolean -wrap1(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> -wrap1
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    java.lang.Object[] mData -> mData
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    void <init>(android.support.v4.content.ModernAsyncTask,java.lang.Object[]) -> <init>
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.Intent mIntent -> mIntent
    java.util.ArrayList mStreams -> mStreams
    void <init>(android.app.Activity) -> <init>
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
    java.lang.String getCallingPackage() -> getCallingPackage
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String getSubject() -> getSubject
    java.lang.CharSequence getText() -> getText
    java.lang.String getType() -> getType
    boolean isMultipleShare() -> isMultipleShare
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
com.koushikdutta.ion.DataEmitterParser -> com.koushikdutta.ion.DataEmitterParser:
    void <init>() -> <init>
    java.lang.reflect.Type getType() -> getType
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void write(com.koushikdutta.async.DataSink,com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
com.koushikdutta.async.AsyncSSLSocket -> com.koushikdutta.async.AsyncSSLSocket:
    javax.net.ssl.SSLEngine getSSLEngine() -> getSSLEngine
    java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    void <init>() -> <init>
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    float offset -> offset
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    void <init>() -> <init>
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.ViewCompatLollipop:
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void <init>() -> <init>
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    float getElevation(android.view.View) -> getElevation
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    float getTranslationZ(android.view.View) -> getTranslationZ
    float getZ(android.view.View) -> getZ
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setElevation(android.view.View,float) -> setElevation
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$2 -> com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl$2:
    com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl this$0 -> this$0
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.ion.loader.AsyncHttpRequestFactory -> com.koushikdutta.ion.loader.AsyncHttpRequestFactory:
    com.koushikdutta.async.http.AsyncHttpRequest createAsyncHttpRequest(android.net.Uri,java.lang.String,com.koushikdutta.async.http.Headers) -> createAsyncHttpRequest
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> ACTION_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> ACTION_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> ACTION_COLLAPSE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> ACTION_COPY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> ACTION_CUT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> ACTION_DISMISS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> ACTION_EXPAND
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> ACTION_PASTE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> ACTION_SELECT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.Object mAction -> mAction
    void <init>(java.lang.Object) -> <init>
    void <init>(int,java.lang.CharSequence) -> <init>
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
    void <clinit>() -> <clinit>
    java.lang.Object -get0(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> -get0
    void <init>(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> <init>
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
com.koushikdutta.async.http.AsyncHttpResponseImpl -> com.koushikdutta.async.http.AsyncHttpResponseImpl:
    int code -> code
    boolean mCompleted -> mCompleted
    boolean mFirstWrite -> mFirstWrite
    com.koushikdutta.async.http.Headers mHeaders -> mHeaders
    com.koushikdutta.async.callback.CompletedCallback mReporter -> mReporter
    com.koushikdutta.async.http.AsyncHttpRequest mRequest -> mRequest
    com.koushikdutta.async.DataSink mSink -> mSink
    com.koushikdutta.async.AsyncSocket mSocket -> mSocket
    java.lang.String message -> message
    java.lang.String protocol -> protocol
    boolean -assertionsDisabled -> -assertionsDisabled
    void onHeadersSent() -> onHeadersSent
    void terminate() -> terminate
    void <init>(com.koushikdutta.async.http.AsyncHttpRequest) -> <init>
    void assertContent() -> assertContent
    java.lang.String charset() -> charset
    void close() -> close
    int code() -> code
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead code(int) -> code
    com.koushikdutta.async.DataEmitter emitter() -> emitter
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead emitter(com.koushikdutta.async.DataEmitter) -> emitter
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.http.AsyncHttpRequest getRequest() -> getRequest
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    com.koushikdutta.async.http.Headers headers() -> headers
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead headers(com.koushikdutta.async.http.Headers) -> headers
    boolean isOpen() -> isOpen
    java.lang.String message() -> message
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead message(java.lang.String) -> message
    void onHeadersReceived() -> onHeadersReceived
    void onRequestCompleted(java.lang.Exception) -> onRequestCompleted
    java.lang.String protocol() -> protocol
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead protocol(java.lang.String) -> protocol
    void report(java.lang.Exception) -> report
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setSocket(com.koushikdutta.async.AsyncSocket) -> setSocket
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    com.koushikdutta.async.DataSink sink() -> sink
    com.koushikdutta.async.http.AsyncHttpClientMiddleware$ResponseHead sink(com.koushikdutta.async.DataSink) -> sink
    com.koushikdutta.async.AsyncSocket socket() -> socket
    java.lang.String toString() -> toString
    void write(com.koushikdutta.async.ByteBufferList) -> write
    void <clinit>() -> <clinit>
    com.koushikdutta.async.AsyncSocket -get0(com.koushikdutta.async.http.AsyncHttpResponseImpl) -> -get0
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void <init>() -> <init>
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void removeStartMessage(android.view.View) -> removeStartMessage
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void -wrap0(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> -wrap0
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void <init>(android.support.v4.widget.DrawerLayout) -> <init>
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.koushikdutta.async.http.server.MalformedRangeException -> com.koushikdutta.async.http.server.MalformedRangeException:
    void <init>() -> <init>
com.koushikdutta.ion.TransformBitmap -> com.koushikdutta.ion.TransformBitmap:
    java.lang.String downloadKey -> downloadKey
    java.util.ArrayList postProcess -> postProcess
    java.util.ArrayList transforms -> transforms
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.bitmap.BitmapInfo) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.ion.loader.SimpleLoader -> com.koushikdutta.ion.loader.SimpleLoader:
    void <init>() -> <init>
    com.koushikdutta.ion.future.ResponseFuture load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,java.lang.reflect.Type) -> load
    com.koushikdutta.async.future.Future load(com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.future.FutureCallback) -> load
    com.koushikdutta.async.future.Future loadBitmap(android.content.Context,com.koushikdutta.ion.Ion,java.lang.String,java.lang.String,int,int,boolean) -> loadBitmap
    com.koushikdutta.async.future.Future resolve(android.content.Context,com.koushikdutta.ion.Ion,com.koushikdutta.async.http.AsyncHttpRequest) -> resolve
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void <init>() -> <init>
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.DragSortListView$LiftAnimator:
    float mFinalDragDeltaY -> mFinalDragDeltaY
    float mInitDragDeltaY -> mInitDragDeltaY
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    java.lang.String TAG -> TAG
    boolean mCreated -> mCreated
    android.support.v4.app.FragmentController mFragments -> mFragments
    android.os.Handler mHandler -> mHandler
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mReallyStopped -> mReallyStopped
    boolean mRequestedPermissionsFromFragment -> mRequestedPermissionsFromFragment
    boolean mResumed -> mResumed
    boolean mRetaining -> mRetaining
    boolean mStopped -> mStopped
    void <init>() -> <init>
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    void doReallyStop(boolean) -> doReallyStop
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onPostResume() -> onPostResume
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onReallyStop() -> onReallyStop
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void onResume() -> onResume
    void onResumeFragments() -> onResumeFragments
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStateNotSaved() -> onStateNotSaved
    void onStop() -> onStop
    void requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
    java.lang.String viewToString(android.view.View) -> viewToString
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void -wrap0(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment,java.lang.String[],int) -> -wrap0
com.koushikdutta.async.http.server.AsyncHttpServer$6 -> com.koushikdutta.async.http.server.AsyncHttpServer$6:
    com.koushikdutta.async.http.server.AsyncHttpServer this$0 -> this$0
    java.io.File val$directory -> val$directory
    boolean val$list -> val$list
    void onRequest(com.koushikdutta.async.http.server.AsyncHttpServerRequest,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> onRequest
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer,java.io.File,boolean) -> <init>
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
com.koushikdutta.async.http.server.AsyncHttpServer$2$1 -> com.koushikdutta.async.http.server.AsyncHttpServer$2$1:
    com.koushikdutta.async.http.server.AsyncHttpServer$2 this$1 -> this$1
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$2) -> <init>
    void onHandshakeCompleted(java.lang.Exception,com.koushikdutta.async.AsyncSSLSocket) -> onHandshakeCompleted
com.koushikdutta.async.http.spdy.Variant -> com.koushikdutta.async.http.spdy.Variant:
    com.koushikdutta.async.http.Protocol getProtocol() -> getProtocol
    int maxFrameSize() -> maxFrameSize
    com.koushikdutta.async.http.spdy.FrameReader newReader(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.http.spdy.FrameReader$Handler,boolean) -> newReader
    com.koushikdutta.async.http.spdy.FrameWriter newWriter(com.koushikdutta.async.BufferedDataSink,boolean) -> newWriter
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    void <init>() -> <init>
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    void <init>() -> <init>
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
com.koushikdutta.ion.IonRequestBuilder$4 -> com.koushikdutta.ion.IonRequestBuilder$4:
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    com.koushikdutta.async.http.AsyncHttpRequest val$request -> val$request
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform val$ret -> val$ret
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.ion.IonRequestBuilder$EmitterTransform) -> <init>
    void run() -> run
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_ALL_MASK -> META_ALL_MASK
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    void <init>() -> <init>
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean isTracking(android.view.KeyEvent) -> isTracking
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    void startTracking(android.view.KeyEvent) -> startTracking
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void adjustVolume(int,int) -> adjustVolume
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    java.lang.Object getMediaController() -> getMediaController
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void setVolumeTo(int,int) -> setVolumeTo
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
com.koushikdutta.ion.Ion$FutureSet -> com.koushikdutta.ion.Ion$FutureSet:
    void <init>() -> <init>
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl:
    void <init>() -> <init>
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    int getId(java.lang.Object) -> getId
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    int getType(java.lang.Object) -> getType
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void recycle(java.lang.Object) -> recycle
    void <init>(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl) -> <init>
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    void <init>() -> <init>
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
    java.util.Set keySet(java.lang.Object) -> keySet
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void <init>(android.support.v4.view.PagerTabStrip) -> <init>
    void onClick(android.view.View) -> onClick
com.koushikdutta.async.http.cache.ResponseCacheMiddleware -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware:
    java.lang.String CACHE -> CACHE
    java.lang.String CONDITIONAL_CACHE -> CONDITIONAL_CACHE
    int ENTRY_BODY -> ENTRY_BODY
    int ENTRY_COUNT -> ENTRY_COUNT
    int ENTRY_METADATA -> ENTRY_METADATA
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String SERVED_FROM -> SERVED_FROM
    com.koushikdutta.async.util.FileCache cache -> cache
    int cacheHitCount -> cacheHitCount
    int cacheStoreCount -> cacheStoreCount
    boolean caching -> caching
    int conditionalCacheHitCount -> conditionalCacheHitCount
    int networkCount -> networkCount
    com.koushikdutta.async.AsyncServer server -> server
    int writeAbortCount -> writeAbortCount
    int writeSuccessCount -> writeSuccessCount
    com.koushikdutta.async.future.Cancellable getSocket(com.koushikdutta.async.http.AsyncHttpClientMiddleware$GetSocketData) -> getSocket
    void <init>() -> <init>
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware addCache(com.koushikdutta.async.http.AsyncHttpClient,java.io.File,long) -> addCache
    void clear() -> clear
    int getCacheHitCount() -> getCacheHitCount
    int getCacheStoreCount() -> getCacheStoreCount
    boolean getCaching() -> getCaching
    int getConditionalCacheHitCount() -> getConditionalCacheHitCount
    com.koushikdutta.async.util.FileCache getFileCache() -> getFileCache
    int getNetworkCount() -> getNetworkCount
    void onBodyDecoder(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnBodyDataOnRequestSentData) -> onBodyDecoder
    void onResponseComplete(com.koushikdutta.async.http.AsyncHttpClientMiddleware$OnResponseCompleteDataOnRequestSentData) -> onResponseComplete
    void setCaching(boolean) -> setCaching
    com.koushikdutta.async.util.FileCache -get0(com.koushikdutta.async.http.cache.ResponseCacheMiddleware) -> -get0
    com.koushikdutta.async.AsyncServer -get1(com.koushikdutta.async.http.cache.ResponseCacheMiddleware) -> -get1
    int -get2(com.koushikdutta.async.http.cache.ResponseCacheMiddleware) -> -get2
    int -get3(com.koushikdutta.async.http.cache.ResponseCacheMiddleware) -> -get3
    int -set0(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,int) -> -set0
    int -set1(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,int) -> -set1
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$1 -> android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$1:
    android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl this$1 -> this$1
    java.lang.String[] val$permissions -> val$permissions
    android.app.Fragment val$fragment -> val$fragment
    int val$requestCode -> val$requestCode
    void <init>(android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl,java.lang.String[],android.app.Fragment,int) -> <init>
    void run() -> run
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    void <init>() -> <init>
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl:
    void <init>() -> <init>
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
com.koushikdutta.async.http.body.JSONObjectBody$1 -> com.koushikdutta.async.http.body.JSONObjectBody$1:
    com.koushikdutta.async.http.body.JSONObjectBody this$0 -> this$0
    com.koushikdutta.async.callback.CompletedCallback val$completed -> val$completed
    void <init>(com.koushikdutta.async.http.body.JSONObjectBody,com.koushikdutta.async.callback.CompletedCallback) -> <init>
    void onCompleted(java.lang.Exception,org.json.JSONObject) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
com.koushikdutta.async.SocketChannelWrapper -> com.koushikdutta.async.SocketChannelWrapper:
    java.nio.channels.SocketChannel mChannel -> mChannel
    void <init>(java.nio.channels.SocketChannel) -> <init>
    int getLocalPort() -> getLocalPort
    java.lang.Object getSocket() -> getSocket
    boolean isConnected() -> isConnected
    int read(java.nio.ByteBuffer) -> read
    long read(java.nio.ByteBuffer[]) -> read
    long read(java.nio.ByteBuffer[],int,int) -> read
    java.nio.channels.SelectionKey register(java.nio.channels.Selector) -> register
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    int write(java.nio.ByteBuffer) -> write
    int write(java.nio.ByteBuffer[]) -> write
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    void <init>() -> <init>
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
com.koushikdutta.async.http.server.AsyncProxyServer$1 -> com.koushikdutta.async.http.server.AsyncProxyServer$1:
    com.koushikdutta.async.http.server.AsyncProxyServer this$0 -> this$0
    com.koushikdutta.async.http.server.AsyncHttpServerResponse val$response -> val$response
    void <init>(com.koushikdutta.async.http.server.AsyncProxyServer,com.koushikdutta.async.http.server.AsyncHttpServerResponse) -> <init>
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    void <init>() -> <init>
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    void <clinit>() -> <clinit>
    int -wrap0(java.lang.Object) -> -wrap0
    void -wrap1(java.lang.reflect.Type) -> -wrap1
com.koushikdutta.ion.IonRequestBuilder$5 -> com.koushikdutta.ion.IonRequestBuilder$5:
    com.koushikdutta.ion.IonRequestBuilder$EmitterTransform self -> self
    com.koushikdutta.ion.IonRequestBuilder this$0 -> this$0
    boolean val$close -> val$close
    com.koushikdutta.async.DataSink val$sink -> val$sink
    java.lang.Object val$result -> val$result
    void transform(com.koushikdutta.ion.Loader$LoaderEmitter) -> transform
    void <init>(com.koushikdutta.ion.IonRequestBuilder,com.koushikdutta.ion.IonRequestBuilder,java.lang.Runnable,boolean,com.koushikdutta.async.DataSink,java.lang.Object) -> <init>
    void cleanup() -> cleanup
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    void <init>() -> <init>
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.aokp.romcontrol.settings.MultiChoiceSetting$3$1 -> com.aokp.romcontrol.settings.MultiChoiceSetting$3$1:
    com.aokp.romcontrol.settings.MultiChoiceSetting$3 this$1 -> this$1
    android.app.AlertDialog val$d -> val$d
    void <init>(com.aokp.romcontrol.settings.MultiChoiceSetting$3,android.app.AlertDialog) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    void <init>() -> <init>
    java.lang.Object build(java.lang.Object) -> build
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void <init>() -> <init>
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> captureExitingViews
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList) -> setSharedElementTargets
    java.lang.Object wrapSharedElementTransition(java.lang.Object) -> wrapSharedElementTransition
    android.graphics.Rect -wrap0(android.view.View) -> -wrap0
    void -wrap1(java.util.ArrayList,android.view.View) -> -wrap1
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    void <init>() -> <init>
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void <init>() -> <init>
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean isTracking(android.view.KeyEvent) -> isTracking
    void startTracking(android.view.KeyEvent) -> startTracking
com.koushikdutta.async.HostnameResolutionException -> com.koushikdutta.async.HostnameResolutionException:
    void <init>(java.lang.String) -> <init>
com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback -> com.koushikdutta.async.http.AsyncHttpClient$WebSocketConnectCallback:
    void onCompleted(java.lang.Exception,com.koushikdutta.async.http.WebSocket) -> onCompleted
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    int childIndex -> childIndex
    int gravity -> gravity
    boolean isDecor -> isDecor
    boolean needsMeasure -> needsMeasure
    int position -> position
    float widthFactor -> widthFactor
    void <init>() -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback -> com.koushikdutta.async.http.socketio.transport.SocketIOTransport$StringCallback:
    void onStringAvailable(java.lang.String) -> onStringAvailable
com.koushikdutta.async.callback.CompletedCallback -> com.koushikdutta.async.callback.CompletedCallback:
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.http.body.StreamBody -> com.koushikdutta.async.http.body.StreamBody:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String contentType -> contentType
    int length -> length
    java.io.InputStream stream -> stream
    void <init>(java.io.InputStream,int) -> <init>
    java.io.InputStream get() -> get
    java.lang.String getContentType() -> getContentType
    int length() -> length
    void parse(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.callback.CompletedCallback) -> parse
    boolean readFullyOnRequest() -> readFullyOnRequest
    com.koushikdutta.async.http.body.StreamBody setContentType(java.lang.String) -> setContentType
    void write(com.koushikdutta.async.http.AsyncHttpRequest,com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.Object get() -> get
com.koushikdutta.async.parser.ByteBufferListParser -> com.koushikdutta.async.parser.ByteBufferListParser:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    void write(com.koushikdutta.async.DataSink,com.koushikdutta.async.ByteBufferList,com.koushikdutta.async.callback.CompletedCallback) -> write
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
com.koushikdutta.async.FilteredDataSink -> com.koushikdutta.async.FilteredDataSink:
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(com.koushikdutta.async.DataSink) -> <init>
    void write(com.koushikdutta.async.ByteBufferList) -> write
    com.koushikdutta.async.ByteBufferList filter(com.koushikdutta.async.ByteBufferList) -> filter
    void <clinit>() -> <clinit>
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
com.koushikdutta.async.http.spdy.Spdy3$Writer -> com.koushikdutta.async.http.spdy.Spdy3$Writer:
    boolean client -> client
    boolean closed -> closed
    com.koushikdutta.async.ByteBufferList dataList -> dataList
    java.util.zip.Deflater deflater -> deflater
    com.koushikdutta.async.ByteBufferList frameHeader -> frameHeader
    com.koushikdutta.async.ByteBufferList headerBlockList -> headerBlockList
    com.koushikdutta.async.BufferedDataSink sink -> sink
    void <init>(com.koushikdutta.async.BufferedDataSink,boolean) -> <init>
    void ackSettings() -> ackSettings
    void close() -> close
    void connectionPreface() -> connectionPreface
    void data(boolean,int,com.koushikdutta.async.ByteBufferList) -> data
    void goAway(int,com.koushikdutta.async.http.spdy.ErrorCode,byte[]) -> goAway
    void headers(int,java.util.List) -> headers
    void ping(boolean,int,int) -> ping
    void pushPromise(int,int,java.util.List) -> pushPromise
    void rstStream(int,com.koushikdutta.async.http.spdy.ErrorCode) -> rstStream
    void sendDataFrame(int,int,com.koushikdutta.async.ByteBufferList) -> sendDataFrame
    void settings(com.koushikdutta.async.http.spdy.Settings) -> settings
    void synReply(boolean,int,java.util.List) -> synReply
    void synStream(boolean,boolean,int,int,java.util.List) -> synStream
    void windowUpdate(int,long) -> windowUpdate
    com.koushikdutta.async.ByteBufferList writeNameValueBlockToBuffer(java.util.List) -> writeNameValueBlockToBuffer
com.koushikdutta.async.http.AsyncHttpClient$DownloadCallback -> com.koushikdutta.async.http.AsyncHttpClient$DownloadCallback:
    void <init>() -> <init>
com.koushikdutta.async.http.AsyncHttpClient$10 -> com.koushikdutta.async.http.AsyncHttpClient$10:
    com.koushikdutta.async.http.AsyncHttpClient this$0 -> this$0
    com.koushikdutta.async.http.callback.RequestCallback val$callback -> val$callback
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    com.koushikdutta.async.parser.AsyncParser val$parser -> val$parser
    void onConnectCompleted(java.lang.Exception,com.koushikdutta.async.http.AsyncHttpResponse) -> onConnectCompleted
    void <init>(com.koushikdutta.async.http.AsyncHttpClient,com.koushikdutta.async.http.callback.RequestCallback,com.koushikdutta.async.future.SimpleFuture,com.koushikdutta.async.parser.AsyncParser) -> <init>
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String TAG -> TAG
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sExtrasLock -> sExtrasLock
    void <init>() -> <init>
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    void <clinit>() -> <clinit>
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
com.koushikdutta.async.http.socketio.EventEmitter$1 -> com.koushikdutta.async.http.socketio.EventEmitter$1:
    com.koushikdutta.async.http.socketio.EventEmitter this$0 -> this$0
    com.koushikdutta.async.http.socketio.EventCallback val$callback -> val$callback
    void <init>(com.koushikdutta.async.http.socketio.EventEmitter,com.koushikdutta.async.http.socketio.EventCallback) -> <init>
    void onEvent(org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> onEvent
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryEditor -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$EntryEditor:
    boolean done -> done
    java.lang.String key -> key
    java.io.FileOutputStream[] outs -> outs
    java.io.File[] temps -> temps
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware this$0 -> this$0
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware,java.lang.String) -> <init>
    void abort() -> abort
    void commit() -> commit
    java.io.FileOutputStream newOutputStream(int) -> newOutputStream
com.koushikdutta.async.future.TransformFuture -> com.koushikdutta.async.future.TransformFuture:
    void <init>() -> <init>
    void error(java.lang.Exception) -> error
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
    void transform(java.lang.Object) -> transform
com.koushikdutta.ion.loader.PackageIconLoader$1 -> com.koushikdutta.ion.loader.PackageIconLoader$1:
    com.koushikdutta.ion.loader.PackageIconLoader this$0 -> this$0
    java.lang.String val$uri -> val$uri
    com.koushikdutta.ion.Ion val$ion -> val$ion
    java.lang.String val$key -> val$key
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void <init>(com.koushikdutta.ion.loader.PackageIconLoader,java.lang.String,com.koushikdutta.ion.Ion,java.lang.String,com.koushikdutta.async.future.SimpleFuture) -> <init>
    void run() -> run
com.koushikdutta.async.DataEmitter -> com.koushikdutta.async.DataEmitter:
    void close() -> close
    boolean isPaused() -> isPaused
    void resume() -> resume
    void pause() -> pause
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    java.lang.String charset() -> charset
    boolean isChunked() -> isChunked
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
com.koushikdutta.ion.LoadBitmap -> com.koushikdutta.ion.LoadBitmap:
    int resizeHeight -> resizeHeight
    int resizeWidth -> resizeWidth
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,boolean,int,int,boolean) -> <init>
    void onCompleted(java.lang.Exception,com.koushikdutta.ion.Response) -> onCompleted
    void onCompleted(java.lang.Exception,java.lang.Object) -> onCompleted
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> FLAG_HINT_AVOID_BACKGROUND_CLIPPING
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> KEY_HINT_SCREEN_TIMEOUT
    java.lang.String KEY_PAGES -> KEY_PAGES
    int SCREEN_TIMEOUT_LONG -> SCREEN_TIMEOUT_LONG
    int SCREEN_TIMEOUT_SHORT -> SCREEN_TIMEOUT_SHORT
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_XSMALL -> SIZE_XSMALL
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    java.util.ArrayList mActions -> mActions
    android.graphics.Bitmap mBackground -> mBackground
    int mContentActionIndex -> mContentActionIndex
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mCustomContentHeight -> mCustomContentHeight
    int mCustomSizePreset -> mCustomSizePreset
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    int mFlags -> mFlags
    int mGravity -> mGravity
    int mHintScreenTimeout -> mHintScreenTimeout
    java.util.ArrayList mPages -> mPages
    void <init>() -> <init>
    void <init>(android.app.Notification) -> <init>
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    java.util.List getActions() -> getActions
    android.graphics.Bitmap getBackground() -> getBackground
    int getContentAction() -> getContentAction
    int getContentIcon() -> getContentIcon
    int getContentIconGravity() -> getContentIconGravity
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    int getCustomContentHeight() -> getCustomContentHeight
    int getCustomSizePreset() -> getCustomSizePreset
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    int getGravity() -> getGravity
    boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    boolean getHintHideIcon() -> getHintHideIcon
    int getHintScreenTimeout() -> getHintScreenTimeout
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    java.util.List getPages() -> getPages
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    android.support.v4.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    java.lang.Object clone() -> clone
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    int mCircleDiameter -> mCircleDiameter
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    android.graphics.Paint mShadowPaint -> mShadowPaint
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void <init>(android.support.v4.widget.CircleImageView,int,int) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
com.koushikdutta.async.DataEmitterBase -> com.koushikdutta.async.DataEmitterBase:
    com.koushikdutta.async.callback.CompletedCallback endCallback -> endCallback
    boolean ended -> ended
    com.koushikdutta.async.callback.DataCallback mDataCallback -> mDataCallback
    void report(java.lang.Exception) -> report
    void <init>() -> <init>
    java.lang.String charset() -> charset
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    void <init>() -> <init>
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.lang.String TAG -> TAG
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    void adjustVolume(int,int) -> adjustVolume
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.os.Bundle getExtras() -> getExtras
    long getFlags() -> getFlags
    java.lang.Object getMediaController() -> getMediaController
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.lang.String getPackageName() -> getPackageName
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    int getRatingType() -> getRatingType
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    void setVolumeTo(int,int) -> setVolumeTo
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
com.koushikdutta.async.http.body.MultipartFormDataBody$1$1 -> com.koushikdutta.async.http.body.MultipartFormDataBody$1$1:
    com.koushikdutta.async.http.body.MultipartFormDataBody$1 this$1 -> this$1
    void <init>(com.koushikdutta.async.http.body.MultipartFormDataBody$1) -> <init>
    void onDataAvailable(com.koushikdutta.async.DataEmitter,com.koushikdutta.async.ByteBufferList) -> onDataAvailable
com.koushikdutta.async.http.socketio.SocketIOConnection$9 -> com.koushikdutta.async.http.socketio.SocketIOConnection$9:
    com.koushikdutta.async.http.socketio.SocketIOConnection this$0 -> this$0
    java.lang.String val$event -> val$event
    org.json.JSONArray val$arguments -> val$arguments
    com.koushikdutta.async.http.socketio.Acknowledge val$acknowledge -> val$acknowledge
    void <init>(com.koushikdutta.async.http.socketio.SocketIOConnection,java.lang.String,org.json.JSONArray,com.koushikdutta.async.http.socketio.Acknowledge) -> <init>
    void onSelect(com.koushikdutta.async.http.socketio.SocketIOClient) -> onSelect
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void <init>() -> <init>
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void <init>() -> <init>
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
com.koushikdutta.ion.FileCacheStore$1 -> com.koushikdutta.ion.FileCacheStore$1:
    com.koushikdutta.ion.FileCacheStore this$0 -> this$0
    com.koushikdutta.async.parser.AsyncParser val$parser -> val$parser
    java.lang.Object val$value -> val$value
    com.koushikdutta.async.future.SimpleFuture val$ret -> val$ret
    void run() -> run
    void <init>(com.koushikdutta.ion.FileCacheStore,com.koushikdutta.async.parser.AsyncParser,java.lang.Object,com.koushikdutta.async.future.SimpleFuture) -> <init>
com.koushikdutta.async.BufferedDataEmitter$2 -> com.koushikdutta.async.BufferedDataEmitter$2:
    com.koushikdutta.async.BufferedDataEmitter this$0 -> this$0
    void <init>(com.koushikdutta.async.BufferedDataEmitter) -> <init>
    void onCompleted(java.lang.Exception) -> onCompleted
com.koushikdutta.async.http.WebSocket$StringCallback -> com.koushikdutta.async.http.WebSocket$StringCallback:
    void onStringAvailable(java.lang.String) -> onStringAvailable
android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl:
    void <init>() -> <init>
    void apply(android.content.SharedPreferences$Editor) -> apply
    void <init>(android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl) -> <init>
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    java.lang.String KEY_BINDER -> KEY_BINDER
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    java.util.Map mRecordMap -> mRecordMap
    void <init>(android.content.Context) -> <init>
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void updateListenerMap() -> updateListenerMap
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    int MSG_DESTROYED -> MSG_DESTROYED
    int MSG_EVENT -> MSG_EVENT
    int MSG_UPDATE_EXTRAS -> MSG_UPDATE_EXTRAS
    int MSG_UPDATE_METADATA -> MSG_UPDATE_METADATA
    int MSG_UPDATE_PLAYBACK_STATE -> MSG_UPDATE_PLAYBACK_STATE
    int MSG_UPDATE_QUEUE -> MSG_UPDATE_QUEUE
    int MSG_UPDATE_QUEUE_TITLE -> MSG_UPDATE_QUEUE_TITLE
    int MSG_UPDATE_VOLUME -> MSG_UPDATE_VOLUME
    android.support.v4.media.session.MediaControllerCompat$Callback this$1 -> this$1
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void post(int,java.lang.Object,android.os.Bundle) -> post
android.support.v4.media.session.MediaSessionCompatApi8 -> android.support.v4.media.session.MediaSessionCompatApi8:
    void <init>() -> <init>
    void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.DragSortListView$DragSortListener:
com.koushikdutta.async.AsyncServer$NamedThreadFactory -> com.koushikdutta.async.AsyncServer$NamedThreadFactory:
    java.lang.ThreadGroup group -> group
    java.lang.String namePrefix -> namePrefix
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    void <init>(java.lang.String) -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.koushikdutta.ion.LoadBitmap$1 -> com.koushikdutta.ion.LoadBitmap$1:
    com.koushikdutta.ion.LoadBitmap this$0 -> this$0
    com.koushikdutta.async.ByteBufferList val$result -> val$result
    com.koushikdutta.ion.Response val$response -> val$response
    void <init>(com.koushikdutta.ion.LoadBitmap,com.koushikdutta.async.ByteBufferList,com.koushikdutta.ion.Response) -> <init>
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    java.lang.Object mEdgeEffect -> mEdgeEffect
    void <init>(android.content.Context) -> <init>
    boolean draw(android.graphics.Canvas) -> draw
    void finish() -> finish
    boolean isFinished() -> isFinished
    boolean onAbsorb(int) -> onAbsorb
    boolean onPull(float) -> onPull
    boolean onPull(float,float) -> onPull
    boolean onRelease() -> onRelease
    void setSize(int,int) -> setSize
    void <clinit>() -> <clinit>
com.koushikdutta.async.http.body.Part -> com.koushikdutta.async.http.body.Part:
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    long length -> length
    com.koushikdutta.async.http.Multimap mContentDisposition -> mContentDisposition
    com.koushikdutta.async.http.Headers mHeaders -> mHeaders
    boolean -assertionsDisabled -> -assertionsDisabled
    void <init>(java.lang.String,long,java.util.List) -> <init>
    void <init>(com.koushikdutta.async.http.Headers) -> <init>
    java.lang.String getContentType() -> getContentType
    java.lang.String getFilename() -> getFilename
    java.lang.String getName() -> getName
    com.koushikdutta.async.http.Headers getRawHeaders() -> getRawHeaders
    boolean isFile() -> isFile
    long length() -> length
    void setContentType(java.lang.String) -> setContentType
    void write(com.koushikdutta.async.DataSink,com.koushikdutta.async.callback.CompletedCallback) -> write
    void <clinit>() -> <clinit>
android.support.annotation.TransitionRes -> android.support.annotation.TransitionRes:
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    boolean mCanRemove -> mCanRemove
    int mIndex -> mIndex
    int mOffset -> mOffset
    int mSize -> mSize
    android.support.v4.util.MapCollections this$0 -> this$0
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    void <init>() -> <init>
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void <init>() -> <init>
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    boolean isIconified(android.view.View) -> isIconified
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setIconified(android.view.View,boolean) -> setIconified
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener -> com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener:
    long mAnimationTime -> mAnimationTime
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$DismissCallbacks mCallbacks -> mCallbacks
    int mDismissAnimationRefCount -> mDismissAnimationRefCount
    int mDownPosition -> mDownPosition
    android.view.View mDownView -> mDownView
    float mDownX -> mDownX
    android.widget.ListView mListView -> mListView
    int mMaxFlingVelocity -> mMaxFlingVelocity
    int mMinFlingVelocity -> mMinFlingVelocity
    boolean mPaused -> mPaused
    java.util.List mPendingDismisses -> mPendingDismisses
    int mSlop -> mSlop
    boolean mSwiping -> mSwiping
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mViewWidth -> mViewWidth
    android.widget.AbsListView$OnScrollListener makeScrollListener() -> makeScrollListener
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void performDismiss(android.view.View,int) -> performDismiss
    void <init>(android.widget.ListView,com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$DismissCallbacks) -> <init>
    void setEnabled(boolean) -> setEnabled
    com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener$DismissCallbacks -get0(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener) -> -get0
    int -get1(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener) -> -get1
    android.widget.ListView -get2(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener) -> -get2
    java.util.List -get3(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener) -> -get3
    int -set0(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,int) -> -set0
    void -wrap0(com.google.android.apps.dashclock.ui.SwipeDismissListViewTouchListener,android.view.View,int) -> -wrap0
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void <init>() -> <init>
    void finishAffinity(android.app.Activity) -> finishAffinity
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.reflect.Constructor val$constructor -> val$constructor
    void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    java.lang.Object construct() -> construct
com.koushikdutta.async.AsyncNetworkSocket$3 -> com.koushikdutta.async.AsyncNetworkSocket$3:
    com.koushikdutta.async.AsyncNetworkSocket this$0 -> this$0
    void <init>(com.koushikdutta.async.AsyncNetworkSocket) -> <init>
    void run() -> run
com.koushikdutta.async.parser.JSONArrayParser -> com.koushikdutta.async.parser.JSONArrayParser:
    void <init>() -> <init>
    com.koushikdutta.async.future.Future parse(com.koushikdutta.async.DataEmitter) -> parse
    java.lang.reflect.Type getType() -> getType
    void write(com.koushikdutta.async.DataSink,org.json.JSONArray,com.koushikdutta.async.callback.CompletedCallback) -> write
    void write(com.koushikdutta.async.DataSink,java.lang.Object,com.koushikdutta.async.callback.CompletedCallback) -> write
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void <init>() -> <init>
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    int TRANSACTION_notify -> TRANSACTION_notify
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.aokp.romcontrol.R$drawable -> com.aokp.romcontrol.R$drawable:
    int background_tab -> background_tab
    int ic_null -> ic_null
    int loading -> loading
    int drawer_shadow -> drawer_shadow
    int ic_drawer -> ic_drawer
    int aokp_logo_big -> aokp_logo_big
    int committer_arrow -> committer_arrow
    int divider_horizontal_dim_dark -> divider_horizontal_dim_dark
    int duplicate -> duplicate
    int github -> github
    int ic_empty -> ic_empty
    int ic_grabber -> ic_grabber
    int ic_launcher_application -> ic_launcher_application
    int ic_lockscreen_unlock -> ic_lockscreen_unlock
    int ic_lockscreen_unlock_activated -> ic_lockscreen_unlock_activated
    int ic_lockscreen_unlock_normal -> ic_lockscreen_unlock_normal
    int ic_menu_clipboard -> ic_menu_clipboard
    int ic_menu_save -> ic_menu_save
    int ic_navigation_ring_hint -> ic_navigation_ring_hint
    int ic_navigation_ring_hint_activated -> ic_navigation_ring_hint_activated
    int ic_navigation_ring_hint_normal -> ic_navigation_ring_hint_normal
    int ic_rom_control_about -> ic_rom_control_about
    int ic_rom_control_active_display -> ic_rom_control_active_display
    int ic_rom_control_animations -> ic_rom_control_animations
    int ic_rom_control_auto_immersive -> ic_rom_control_auto_immersive
    int ic_rom_control_battery -> ic_rom_control_battery
    int ic_rom_control_clock -> ic_rom_control_clock
    int ic_rom_control_general -> ic_rom_control_general
    int ic_rom_control_general_ui -> ic_rom_control_general_ui
    int ic_rom_control_hardware_keys -> ic_rom_control_hardware_keys
    int ic_rom_control_headsup -> ic_rom_control_headsup
    int ic_rom_control_init_d -> ic_rom_control_init_d
    int ic_rom_control_installer -> ic_rom_control_installer
    int ic_rom_control_led -> ic_rom_control_led
    int ic_rom_control_lockscreens -> ic_rom_control_lockscreens
    int ic_rom_control_navigation_bar -> ic_rom_control_navigation_bar
    int ic_rom_control_navigation_ring -> ic_rom_control_navigation_ring
    int ic_rom_control_notifications -> ic_rom_control_notifications
    int ic_rom_control_power_menu -> ic_rom_control_power_menu
    int ic_rom_control_powersaver -> ic_rom_control_powersaver
    int ic_rom_control_quick_settings -> ic_rom_control_quick_settings
    int ic_rom_control_ribbon -> ic_rom_control_ribbon
    int ic_rom_control_signal -> ic_rom_control_signal
    int ic_rom_control_sound -> ic_rom_control_sound
    int ic_rom_control_spen -> ic_rom_control_spen
    int ic_rom_control_toggles -> ic_rom_control_toggles
    int ic_rom_control_vibrations -> ic_rom_control_vibrations
    int ic_rom_control_weather -> ic_rom_control_weather
    int ic_settings_backup -> ic_settings_backup
    int ic_sysbar_menu -> ic_sysbar_menu
    int ic_sysbar_null -> ic_sysbar_null
    int ic_sysbar_quicksettings -> ic_sysbar_quicksettings
    int ic_sysbar_widget -> ic_sysbar_widget
    int item_background_holo_dark -> item_background_holo_dark
    int led_circle_button -> led_circle_button
    int led_phone_image -> led_phone_image
    int list_focused_holo -> list_focused_holo
    int list_longpressed_holo_dark -> list_longpressed_holo_dark
    int list_pressed_holo_dark -> list_pressed_holo_dark
    int list_selector_background_transition_holo_dark -> list_selector_background_transition_holo_dark
    int list_selector_disabled_holo_dark -> list_selector_disabled_holo_dark
    int list_selector_focused_holo_dark -> list_selector_focused_holo_dark
    int list_selector_holo_dark -> list_selector_holo_dark
    int navbar_search_outerring -> navbar_search_outerring
    int octacat -> octacat
    int paypal_donate -> paypal_donate
    int twitter_birdy -> twitter_birdy
    int widget_add -> widget_add
    int widget_delete -> widget_delete
    int widget_left -> widget_left
    int widget_na -> widget_na
    int widget_reset -> widget_reset
    int widget_right -> widget_right
    void <init>() -> <init>
com.koushikdutta.async.http.spdy.HpackDraft08 -> com.koushikdutta.async.http.spdy.HpackDraft08:
    java.util.Map NAME_TO_FIRST_INDEX -> NAME_TO_FIRST_INDEX
    int PREFIX_4_BITS -> PREFIX_4_BITS
    int PREFIX_6_BITS -> PREFIX_6_BITS
    int PREFIX_7_BITS -> PREFIX_7_BITS
    com.koushikdutta.async.http.spdy.Header[] STATIC_HEADER_TABLE -> STATIC_HEADER_TABLE
    void <init>() -> <init>
    com.koushikdutta.async.http.spdy.ByteString checkLowercase(com.koushikdutta.async.http.spdy.ByteString) -> checkLowercase
    java.util.Map nameToFirstIndex() -> nameToFirstIndex
    void <clinit>() -> <clinit>
    java.util.Map -get0() -> -get0
    com.koushikdutta.async.http.spdy.Header[] -get1() -> -get1
    com.koushikdutta.async.http.spdy.ByteString -wrap0(com.koushikdutta.async.http.spdy.ByteString) -> -wrap0
com.aokp.romcontrol.util.AbstractAsyncSuCMDProcessor -> com.aokp.romcontrol.util.AbstractAsyncSuCMDProcessor:
    java.lang.String FAILURE -> FAILURE
    boolean mMountSystem -> mMountSystem
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    void <init>() -> <init>
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
com.koushikdutta.async.http.server.AsyncHttpServer$1$1$2 -> com.koushikdutta.async.http.server.AsyncHttpServer$1$1$2:
    com.koushikdutta.async.http.server.AsyncHttpServer$1$1 this$2 -> this$2
    com.koushikdutta.async.AsyncSocket val$socket -> val$socket
    void <init>(com.koushikdutta.async.http.server.AsyncHttpServer$1$1,com.koushikdutta.async.AsyncSocket,com.koushikdutta.async.http.server.AsyncHttpServerRequestImpl,com.koushikdutta.async.AsyncSocket) -> <init>
    void onEnd() -> onEnd
    void report(java.lang.Exception) -> report
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    void <init>() -> <init>
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context) -> <init>
    android.view.View createTabContent(java.lang.String) -> createTabContent
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    void <init>() -> <init>
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject -> mCryptoObject
    void <init>(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.DragSortListView$RemoveListener:
    void remove(int) -> remove
com.koushikdutta.async.AsyncSemaphore -> com.koushikdutta.async.AsyncSemaphore:
    java.util.concurrent.Semaphore semaphore -> semaphore
    void <init>() -> <init>
    void acquire() -> acquire
    void release() -> release
    boolean tryAcquire(long,java.util.concurrent.TimeUnit) -> tryAcquire
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    long mLatestTimestamp -> mLatestTimestamp
    java.lang.String[] mMessages -> mMessages
    java.lang.String[] mParticipants -> mParticipants
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    void <init>(java.lang.String[],android.support.v4.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    long getLatestTimestamp() -> getLatestTimestamp
    java.lang.String[] getMessages() -> getMessages
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getParticipants() -> getParticipants
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    void <clinit>() -> <clinit>
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    java.lang.String mTag -> mTag
    void <init>(java.lang.String) -> <init>
    void close() -> close
    void flush() -> flush
    void flushBuilder() -> flushBuilder
    void write(char[],int,int) -> write
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    void <init>() -> <init>
    int getLabelFor(android.view.View) -> getLabelFor
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
    void onActiveChanged() -> onActiveChanged
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    void <init>() -> <init>
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    int TRANSACTION_onExtrasChanged -> TRANSACTION_onExtrasChanged
    int TRANSACTION_onMetadataChanged -> TRANSACTION_onMetadataChanged
    int TRANSACTION_onPlaybackStateChanged -> TRANSACTION_onPlaybackStateChanged
    int TRANSACTION_onQueueChanged -> TRANSACTION_onQueueChanged
    int TRANSACTION_onQueueTitleChanged -> TRANSACTION_onQueueTitleChanged
    int TRANSACTION_onSessionDestroyed -> TRANSACTION_onSessionDestroyed
    int TRANSACTION_onVolumeInfoChanged -> TRANSACTION_onVolumeInfoChanged
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    void <init>() -> <init>
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
    void finishAffinity(android.app.Activity) -> finishAffinity
    android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    int getColorMode() -> getColorMode
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    void setScaleMode(int) -> setScaleMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl:
    void <init>() -> <init>
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    void <init>() -> <init>
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    int getActionCount(android.app.Notification) -> getActionCount
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.MotionEventCompatHoneycombMr1:
    void <init>() -> <init>
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter$1 -> com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter$1:
    com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter this$1 -> this$1
    void <init>(com.koushikdutta.async.http.cache.ResponseCacheMiddleware$CachedBodyEmitter) -> <init>
    void run() -> run
com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket -> com.koushikdutta.async.http.spdy.AsyncSpdyConnection$SpdySocket:
    long bytesLeftInWriteWindow -> bytesLeftInWriteWindow
    com.koushikdutta.async.callback.CompletedCallback closedCallback -> closedCallback
    com.koushikdutta.async.callback.DataCallback dataCallback -> dataCallback
    com.koushikdutta.async.callback.CompletedCallback endCallback -> endCallback
    com.koushikdutta.async.future.SimpleFuture headers -> headers
    int id -> id
    boolean isOpen -> isOpen
    boolean paused -> paused
    com.koushikdutta.async.ByteBufferList pending -> pending
    int totalWindowRead -> totalWindowRead
    com.koushikdutta.async.callback.WritableCallback writable -> writable
    com.koushikdutta.async.ByteBufferList writing -> writing
    com.koushikdutta.async.http.spdy.AsyncSpdyConnection this$0 -> this$0
    com.koushikdutta.async.future.SimpleFuture headers() -> headers
    com.koushikdutta.async.http.spdy.AsyncSpdyConnection getConnection() -> getConnection
    void <init>(com.koushikdutta.async.http.spdy.AsyncSpdyConnection,int,boolean,boolean,java.util.List) -> <init>
    void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    java.lang.String charset() -> charset
    void close() -> close
    void end() -> end
    com.koushikdutta.async.callback.CompletedCallback getClosedCallback() -> getClosedCallback
    com.koushikdutta.async.callback.DataCallback getDataCallback() -> getDataCallback
    com.koushikdutta.async.callback.CompletedCallback getEndCallback() -> getEndCallback
    com.koushikdutta.async.AsyncServer getServer() -> getServer
    com.koushikdutta.async.callback.WritableCallback getWriteableCallback() -> getWriteableCallback
    boolean isChunked() -> isChunked
    boolean isLocallyInitiated() -> isLocallyInitiated
    boolean isOpen() -> isOpen
    boolean isPaused() -> isPaused
    void pause() -> pause
    void receiveHeaders(java.util.List,com.koushikdutta.async.http.spdy.HeadersMode) -> receiveHeaders
    void resume() -> resume
    void setClosedCallback(com.koushikdutta.async.callback.CompletedCallback) -> setClosedCallback
    void setDataCallback(com.koushikdutta.async.callback.DataCallback) -> setDataCallback
    void setEndCallback(com.koushikdutta.async.callback.CompletedCallback) -> setEndCallback
    void setWriteableCallback(com.koushikdutta.async.callback.WritableCallback) -> setWriteableCallback
    void updateWindowRead(int) -> updateWindowRead
    void write(com.koushikdutta.async.ByteBufferList) -> write
com.aokp.romcontrol.util.Helpers -> com.aokp.romcontrol.util.Helpers:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean checkBusybox() -> checkBusybox
    boolean checkSu() -> checkSu
    java.lang.String[] getAvailableIOSchedulers() -> getAvailableIOSchedulers
    java.lang.String getIOScheduler() -> getIOScheduler
    boolean getMount(java.lang.String) -> getMount
    java.lang.String[] getMounts(java.lang.CharSequence) -> getMounts
    java.lang.String getSystemProp(java.lang.String,java.lang.String) -> getSystemProp
    java.lang.String getTimestamp(android.content.Context) -> getTimestamp
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isPackageInstalled(java.lang.String,android.content.pm.PackageManager) -> isPackageInstalled
    void msgLong(android.content.Context,java.lang.String) -> msgLong
    void msgShort(android.content.Context,java.lang.String) -> msgShort
    java.lang.String readFileViaShell(java.lang.String,boolean) -> readFileViaShell
    java.lang.String readOneLine(java.lang.String) -> readOneLine
    java.lang.String[] readStringArray(java.lang.String) -> readStringArray
    void restartSystemUI() -> restartSystemUI
    void sendMsg(android.content.Context,java.lang.String) -> sendMsg
    void setSystemProp(java.lang.String,java.lang.String) -> setSystemProp
    boolean writeOneLine(java.lang.String,java.lang.String) -> writeOneLine
    void <clinit>() -> <clinit>
com.google.gson.Gson -> com.google.gson.Gson:
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    java.util.List factories -> factories
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean htmlSafe -> htmlSafe
    boolean prettyPrinting -> prettyPrinting
    boolean serializeNulls -> serializeNulls
    java.util.Map typeTokenCache -> typeTokenCache
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    void <init>() -> <init>
    void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List) -> <init>
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toString() -> toString
    void -wrap0(com.google.gson.Gson,double) -> -wrap0
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void <init>() -> <init>
    void fastForward() -> fastForward
    void pause() -> pause
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void skipToQueueItem(long) -> skipToQueueItem
    void stop() -> stop
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void <init>() -> <init>
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    void <init>(int) -> <init>
    java.lang.Object acquire() -> acquire
    boolean isInPool(java.lang.Object) -> isInPool
    boolean release(java.lang.Object) -> release
com.koushikdutta.ion.BitmapCallback$1 -> com.koushikdutta.ion.BitmapCallback$1:
    com.koushikdutta.ion.Ion val$ion -> val$ion
    java.lang.String val$transformKey -> val$transformKey
    com.koushikdutta.ion.BitmapCallback val$callback -> val$callback
    java.util.ArrayList val$postProcess -> val$postProcess
    void <init>(com.koushikdutta.ion.Ion,java.lang.String,com.koushikdutta.ion.BitmapCallback,java.util.ArrayList) -> <init>
    void run() -> run
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
com.koushikdutta.async.http.socketio.StringCallback -> com.koushikdutta.async.http.socketio.StringCallback:
    void onString(java.lang.String,com.koushikdutta.async.http.socketio.Acknowledge) -> onString
com.aokp.romcontrol.util.ShortcutPickerHelper -> com.aokp.romcontrol.util.ShortcutPickerHelper:
    int REQUEST_CREATE_SHORTCUT -> REQUEST_CREATE_SHORTCUT
    int REQUEST_PICK_APPLICATION -> REQUEST_PICK_APPLICATION
    int REQUEST_PICK_SHORTCUT -> REQUEST_PICK_SHORTCUT
    com.aokp.romcontrol.util.ShortcutPickerHelper$OnPickListener mListener -> mListener
    android.app.Fragment mParent -> mParent
    void <init>(android.app.Fragment,com.aokp.romcontrol.util.ShortcutPickerHelper$OnPickListener) -> <init>
    void completeSetCustomApp(android.content.Intent) -> completeSetCustomApp
    void completeSetCustomShortcut(android.content.Intent) -> completeSetCustomShortcut
    java.lang.String getFriendlyActivityName(android.content.Intent,boolean) -> getFriendlyActivityName
    java.lang.String getFriendlyNameForUri(java.lang.String) -> getFriendlyNameForUri
    java.lang.String getFriendlyShortcutName(android.content.Intent) -> getFriendlyShortcutName
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void pickShortcut() -> pickShortcut
    void processShortcut(android.content.Intent,int,int) -> processShortcut
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl:
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
com.koushikdutta.async.http.spdy.Ping -> com.koushikdutta.async.http.spdy.Ping:
    java.util.concurrent.CountDownLatch latch -> latch
    long received -> received
    long sent -> sent
    void send() -> send
    void receive() -> receive
    void <init>() -> <init>
    void cancel() -> cancel
    long roundTripTime() -> roundTripTime
    long roundTripTime(long,java.util.concurrent.TimeUnit) -> roundTripTime
com.koushikdutta.ion.BitmapFetcher$2 -> com.koushikdutta.ion.BitmapFetcher$2:
    com.koushikdutta.ion.BitmapFetcher this$0 -> this$0
    com.koushikdutta.ion.Ion val$ion -> val$ion
    void run() -> run
    void <init>(com.koushikdutta.ion.BitmapFetcher,com.koushikdutta.ion.Ion) -> <init>
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    void <init>() -> <init>
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.util.List getActionList(java.lang.Object) -> getActionList
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getError(java.lang.Object) -> getError
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean isDismissable(java.lang.Object) -> isDismissable
    boolean isEditable(java.lang.Object) -> isEditable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void recycle(java.lang.Object) -> recycle
    boolean refresh(java.lang.Object) -> refresh
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    void setEditable(java.lang.Object,boolean) -> setEditable
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setInputType(java.lang.Object,int) -> setInputType
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> IMPL
    void <init>() -> <init>
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void <clinit>() -> <clinit>
com.aokp.romcontrol.R$attr -> com.aokp.romcontrol.R$attr:
    int click_remove_id -> click_remove_id
    int collapsed_height -> collapsed_height
    int colorPickerDefaultValue -> colorPickerDefaultValue
    int colorPickerShowAlphaSlider -> colorPickerShowAlphaSlider
    int descriptionOff -> descriptionOff
    int descriptionOn -> descriptionOn
    int dividerColor -> dividerColor
    int dividerPadding -> dividerPadding
    int donateLink -> donateLink
    int drag_enabled -> drag_enabled
    int drag_handle_id -> drag_handle_id
    int drag_scroll_start -> drag_scroll_start
    int drag_start_mode -> drag_start_mode
    int drop_animation_duration -> drop_animation_duration
    int emailDev -> emailDev
    int float_alpha -> float_alpha
    int float_background_color -> float_background_color
    int githubLink -> githubLink
    int indicatorColor -> indicatorColor
    int indicatorHeight -> indicatorHeight
    int maxSelectionCount -> maxSelectionCount
    int max_drag_scroll_speed -> max_drag_scroll_speed
    int minSelectionCount -> minSelectionCount
    int nameDev -> nameDev
    int remove_animation_duration -> remove_animation_duration
    int remove_enabled -> remove_enabled
    int remove_mode -> remove_mode
    int scrollOffset -> scrollOffset
    int shouldExpand -> shouldExpand
    int slide_shuffle_speed -> slide_shuffle_speed
    int sort_enabled -> sort_enabled
    int tabBackground -> tabBackground
    int tabPaddingLeftRight -> tabPaddingLeftRight
    int table -> table
    int textAllCaps -> textAllCaps
    int track_drag_sort -> track_drag_sort
    int twitterHandle -> twitterHandle
    int underlineColor -> underlineColor
    int underlineHeight -> underlineHeight
    int url -> url
    int use_default_controller -> use_default_controller
    void <init>() -> <init>
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.DragSortController:
    int CLICK_REMOVE -> CLICK_REMOVE
    int FLING_LEFT_REMOVE -> FLING_LEFT_REMOVE
    int FLING_RIGHT_REMOVE -> FLING_RIGHT_REMOVE
    int MISS -> MISS
    int ON_DOWN -> ON_DOWN
    int ON_DRAG -> ON_DRAG
    int ON_LONG_PRESS -> ON_LONG_PRESS
    int SLIDE_LEFT_REMOVE -> SLIDE_LEFT_REMOVE
    int SLIDE_RIGHT_REMOVE -> SLIDE_RIGHT_REMOVE
    int mClickRemoveHitPos -> mClickRemoveHitPos
    int mClickRemoveId -> mClickRemoveId
    int mCurrX -> mCurrX
    int mCurrY -> mCurrY
    android.view.GestureDetector mDetector -> mDetector
    int mDragHandleId -> mDragHandleId
    int mDragInitMode -> mDragInitMode
    boolean mDragging -> mDragging
    com.mobeta.android.dslv.DragSortListView mDslv -> mDslv
    android.view.GestureDetector mFlingRemoveDetector -> mFlingRemoveDetector
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> mFlingRemoveListener
    float mFlingSpeed -> mFlingSpeed
    int mHitPos -> mHitPos
    int mItemX -> mItemX
    int mItemY -> mItemY
    float mOrigFloatAlpha -> mOrigFloatAlpha
    boolean mRemoveEnabled -> mRemoveEnabled
    int mRemoveMode -> mRemoveMode
    boolean mSortEnabled -> mSortEnabled
    int[] mTempLoc -> mTempLoc
    int mTouchSlop -> mTouchSlop
    void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int) -> <init>
    void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int,int) -> <init>
    int dragHandleHitPosition(android.view.MotionEvent) -> dragHandleHitPosition
    int getDragInitMode() -> getDragInitMode
    int getRemoveMode() -> getRemoveMode
    boolean isDragging() -> isDragging
    boolean isRemoveEnabled() -> isRemoveEnabled
    boolean isSortEnabled() -> isSortEnabled
    boolean onDown(android.view.MotionEvent) -> onDown
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setClickRemoveId(int) -> setClickRemoveId
    void setDragHandleId(int) -> setDragHandleId
    void setDragInitMode(int) -> setDragInitMode
    void setRemoveEnabled(boolean) -> setRemoveEnabled
    void setRemoveMode(int) -> setRemoveMode
    void setSortEnabled(boolean) -> setSortEnabled
    boolean startDrag(int,int,int) -> startDrag
    int startDragPosition(android.view.MotionEvent) -> startDragPosition
    int viewIdHitPosition(android.view.MotionEvent,int) -> viewIdHitPosition
    com.mobeta.android.dslv.DragSortListView -get0(com.mobeta.android.dslv.DragSortController) -> -get0
    float -get1(com.mobeta.android.dslv.DragSortController) -> -get1
    boolean -get2(com.mobeta.android.dslv.DragSortController) -> -get2
    int -get3(com.mobeta.android.dslv.DragSortController) -> -get3
com.aokp.romcontrol.widgets.DeveloperPreference$3 -> com.aokp.romcontrol.widgets.DeveloperPreference$3:
    com.aokp.romcontrol.widgets.DeveloperPreference this$0 -> this$0
    void <init>(com.aokp.romcontrol.widgets.DeveloperPreference) -> <init>
    void onClick(android.view.View) -> onClick
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
